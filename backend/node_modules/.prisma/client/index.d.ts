
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Funcionario
 * 
 */
export type Funcionario = $Result.DefaultSelection<Prisma.$FuncionarioPayload>
/**
 * Model RegistroPonto
 * 
 */
export type RegistroPonto = $Result.DefaultSelection<Prisma.$RegistroPontoPayload>
/**
 * Model SolicitacaoFerias
 * 
 */
export type SolicitacaoFerias = $Result.DefaultSelection<Prisma.$SolicitacaoFeriasPayload>
/**
 * Model Salario
 * 
 */
export type Salario = $Result.DefaultSelection<Prisma.$SalarioPayload>
/**
 * Model Holerite
 * 
 */
export type Holerite = $Result.DefaultSelection<Prisma.$HoleritePayload>
/**
 * Model Beneficio
 * 
 */
export type Beneficio = $Result.DefaultSelection<Prisma.$BeneficioPayload>
/**
 * Model FuncionarioBeneficio
 * 
 */
export type FuncionarioBeneficio = $Result.DefaultSelection<Prisma.$FuncionarioBeneficioPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Funcionarios
 * const funcionarios = await prisma.funcionario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Funcionarios
   * const funcionarios = await prisma.funcionario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.funcionario`: Exposes CRUD operations for the **Funcionario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Funcionarios
    * const funcionarios = await prisma.funcionario.findMany()
    * ```
    */
  get funcionario(): Prisma.FuncionarioDelegate<ExtArgs>;

  /**
   * `prisma.registroPonto`: Exposes CRUD operations for the **RegistroPonto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroPontos
    * const registroPontos = await prisma.registroPonto.findMany()
    * ```
    */
  get registroPonto(): Prisma.RegistroPontoDelegate<ExtArgs>;

  /**
   * `prisma.solicitacaoFerias`: Exposes CRUD operations for the **SolicitacaoFerias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SolicitacaoFerias
    * const solicitacaoFerias = await prisma.solicitacaoFerias.findMany()
    * ```
    */
  get solicitacaoFerias(): Prisma.SolicitacaoFeriasDelegate<ExtArgs>;

  /**
   * `prisma.salario`: Exposes CRUD operations for the **Salario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salarios
    * const salarios = await prisma.salario.findMany()
    * ```
    */
  get salario(): Prisma.SalarioDelegate<ExtArgs>;

  /**
   * `prisma.holerite`: Exposes CRUD operations for the **Holerite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Holerites
    * const holerites = await prisma.holerite.findMany()
    * ```
    */
  get holerite(): Prisma.HoleriteDelegate<ExtArgs>;

  /**
   * `prisma.beneficio`: Exposes CRUD operations for the **Beneficio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Beneficios
    * const beneficios = await prisma.beneficio.findMany()
    * ```
    */
  get beneficio(): Prisma.BeneficioDelegate<ExtArgs>;

  /**
   * `prisma.funcionarioBeneficio`: Exposes CRUD operations for the **FuncionarioBeneficio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FuncionarioBeneficios
    * const funcionarioBeneficios = await prisma.funcionarioBeneficio.findMany()
    * ```
    */
  get funcionarioBeneficio(): Prisma.FuncionarioBeneficioDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Funcionario: 'Funcionario',
    RegistroPonto: 'RegistroPonto',
    SolicitacaoFerias: 'SolicitacaoFerias',
    Salario: 'Salario',
    Holerite: 'Holerite',
    Beneficio: 'Beneficio',
    FuncionarioBeneficio: 'FuncionarioBeneficio'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "funcionario" | "registroPonto" | "solicitacaoFerias" | "salario" | "holerite" | "beneficio" | "funcionarioBeneficio"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Funcionario: {
        payload: Prisma.$FuncionarioPayload<ExtArgs>
        fields: Prisma.FuncionarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncionarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncionarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findFirst: {
            args: Prisma.FuncionarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncionarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          findMany: {
            args: Prisma.FuncionarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          create: {
            args: Prisma.FuncionarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          createMany: {
            args: Prisma.FuncionarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncionarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>[]
          }
          delete: {
            args: Prisma.FuncionarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          update: {
            args: Prisma.FuncionarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          deleteMany: {
            args: Prisma.FuncionarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FuncionarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FuncionarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioPayload>
          }
          aggregate: {
            args: Prisma.FuncionarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuncionario>
          }
          groupBy: {
            args: Prisma.FuncionarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncionarioCountArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioCountAggregateOutputType> | number
          }
        }
      }
      RegistroPonto: {
        payload: Prisma.$RegistroPontoPayload<ExtArgs>
        fields: Prisma.RegistroPontoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroPontoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroPontoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          findFirst: {
            args: Prisma.RegistroPontoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroPontoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          findMany: {
            args: Prisma.RegistroPontoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>[]
          }
          create: {
            args: Prisma.RegistroPontoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          createMany: {
            args: Prisma.RegistroPontoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroPontoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>[]
          }
          delete: {
            args: Prisma.RegistroPontoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          update: {
            args: Prisma.RegistroPontoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          deleteMany: {
            args: Prisma.RegistroPontoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroPontoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegistroPontoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPontoPayload>
          }
          aggregate: {
            args: Prisma.RegistroPontoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroPonto>
          }
          groupBy: {
            args: Prisma.RegistroPontoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroPontoGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroPontoCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroPontoCountAggregateOutputType> | number
          }
        }
      }
      SolicitacaoFerias: {
        payload: Prisma.$SolicitacaoFeriasPayload<ExtArgs>
        fields: Prisma.SolicitacaoFeriasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SolicitacaoFeriasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SolicitacaoFeriasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          findFirst: {
            args: Prisma.SolicitacaoFeriasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SolicitacaoFeriasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          findMany: {
            args: Prisma.SolicitacaoFeriasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>[]
          }
          create: {
            args: Prisma.SolicitacaoFeriasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          createMany: {
            args: Prisma.SolicitacaoFeriasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SolicitacaoFeriasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>[]
          }
          delete: {
            args: Prisma.SolicitacaoFeriasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          update: {
            args: Prisma.SolicitacaoFeriasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          deleteMany: {
            args: Prisma.SolicitacaoFeriasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SolicitacaoFeriasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SolicitacaoFeriasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoFeriasPayload>
          }
          aggregate: {
            args: Prisma.SolicitacaoFeriasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitacaoFerias>
          }
          groupBy: {
            args: Prisma.SolicitacaoFeriasGroupByArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoFeriasGroupByOutputType>[]
          }
          count: {
            args: Prisma.SolicitacaoFeriasCountArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoFeriasCountAggregateOutputType> | number
          }
        }
      }
      Salario: {
        payload: Prisma.$SalarioPayload<ExtArgs>
        fields: Prisma.SalarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          findFirst: {
            args: Prisma.SalarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          findMany: {
            args: Prisma.SalarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>[]
          }
          create: {
            args: Prisma.SalarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          createMany: {
            args: Prisma.SalarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SalarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>[]
          }
          delete: {
            args: Prisma.SalarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          update: {
            args: Prisma.SalarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          deleteMany: {
            args: Prisma.SalarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalarioPayload>
          }
          aggregate: {
            args: Prisma.SalarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalario>
          }
          groupBy: {
            args: Prisma.SalarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalarioCountArgs<ExtArgs>
            result: $Utils.Optional<SalarioCountAggregateOutputType> | number
          }
        }
      }
      Holerite: {
        payload: Prisma.$HoleritePayload<ExtArgs>
        fields: Prisma.HoleriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HoleriteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HoleriteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          findFirst: {
            args: Prisma.HoleriteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HoleriteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          findMany: {
            args: Prisma.HoleriteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>[]
          }
          create: {
            args: Prisma.HoleriteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          createMany: {
            args: Prisma.HoleriteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HoleriteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>[]
          }
          delete: {
            args: Prisma.HoleriteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          update: {
            args: Prisma.HoleriteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          deleteMany: {
            args: Prisma.HoleriteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HoleriteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HoleriteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HoleritePayload>
          }
          aggregate: {
            args: Prisma.HoleriteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHolerite>
          }
          groupBy: {
            args: Prisma.HoleriteGroupByArgs<ExtArgs>
            result: $Utils.Optional<HoleriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.HoleriteCountArgs<ExtArgs>
            result: $Utils.Optional<HoleriteCountAggregateOutputType> | number
          }
        }
      }
      Beneficio: {
        payload: Prisma.$BeneficioPayload<ExtArgs>
        fields: Prisma.BeneficioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BeneficioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BeneficioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          findFirst: {
            args: Prisma.BeneficioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BeneficioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          findMany: {
            args: Prisma.BeneficioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>[]
          }
          create: {
            args: Prisma.BeneficioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          createMany: {
            args: Prisma.BeneficioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BeneficioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>[]
          }
          delete: {
            args: Prisma.BeneficioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          update: {
            args: Prisma.BeneficioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          deleteMany: {
            args: Prisma.BeneficioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BeneficioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BeneficioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficioPayload>
          }
          aggregate: {
            args: Prisma.BeneficioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBeneficio>
          }
          groupBy: {
            args: Prisma.BeneficioGroupByArgs<ExtArgs>
            result: $Utils.Optional<BeneficioGroupByOutputType>[]
          }
          count: {
            args: Prisma.BeneficioCountArgs<ExtArgs>
            result: $Utils.Optional<BeneficioCountAggregateOutputType> | number
          }
        }
      }
      FuncionarioBeneficio: {
        payload: Prisma.$FuncionarioBeneficioPayload<ExtArgs>
        fields: Prisma.FuncionarioBeneficioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FuncionarioBeneficioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FuncionarioBeneficioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          findFirst: {
            args: Prisma.FuncionarioBeneficioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FuncionarioBeneficioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          findMany: {
            args: Prisma.FuncionarioBeneficioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>[]
          }
          create: {
            args: Prisma.FuncionarioBeneficioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          createMany: {
            args: Prisma.FuncionarioBeneficioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FuncionarioBeneficioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>[]
          }
          delete: {
            args: Prisma.FuncionarioBeneficioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          update: {
            args: Prisma.FuncionarioBeneficioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          deleteMany: {
            args: Prisma.FuncionarioBeneficioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FuncionarioBeneficioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FuncionarioBeneficioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FuncionarioBeneficioPayload>
          }
          aggregate: {
            args: Prisma.FuncionarioBeneficioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFuncionarioBeneficio>
          }
          groupBy: {
            args: Prisma.FuncionarioBeneficioGroupByArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioBeneficioGroupByOutputType>[]
          }
          count: {
            args: Prisma.FuncionarioBeneficioCountArgs<ExtArgs>
            result: $Utils.Optional<FuncionarioBeneficioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type FuncionarioCountOutputType
   */

  export type FuncionarioCountOutputType = {
    registrosPonto: number
    solicitacoesFerias: number
    salarios: number
    holerites: number
    beneficios: number
    aprovacoesFerias: number
  }

  export type FuncionarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrosPonto?: boolean | FuncionarioCountOutputTypeCountRegistrosPontoArgs
    solicitacoesFerias?: boolean | FuncionarioCountOutputTypeCountSolicitacoesFeriasArgs
    salarios?: boolean | FuncionarioCountOutputTypeCountSalariosArgs
    holerites?: boolean | FuncionarioCountOutputTypeCountHoleritesArgs
    beneficios?: boolean | FuncionarioCountOutputTypeCountBeneficiosArgs
    aprovacoesFerias?: boolean | FuncionarioCountOutputTypeCountAprovacoesFeriasArgs
  }

  // Custom InputTypes
  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioCountOutputType
     */
    select?: FuncionarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountRegistrosPontoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroPontoWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountSolicitacoesFeriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitacaoFeriasWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountSalariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalarioWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountHoleritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HoleriteWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountBeneficiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioBeneficioWhereInput
  }

  /**
   * FuncionarioCountOutputType without action
   */
  export type FuncionarioCountOutputTypeCountAprovacoesFeriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitacaoFeriasWhereInput
  }


  /**
   * Count Type SalarioCountOutputType
   */

  export type SalarioCountOutputType = {
    holerites: number
  }

  export type SalarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    holerites?: boolean | SalarioCountOutputTypeCountHoleritesArgs
  }

  // Custom InputTypes
  /**
   * SalarioCountOutputType without action
   */
  export type SalarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalarioCountOutputType
     */
    select?: SalarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalarioCountOutputType without action
   */
  export type SalarioCountOutputTypeCountHoleritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HoleriteWhereInput
  }


  /**
   * Count Type BeneficioCountOutputType
   */

  export type BeneficioCountOutputType = {
    funcionarios: number
  }

  export type BeneficioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionarios?: boolean | BeneficioCountOutputTypeCountFuncionariosArgs
  }

  // Custom InputTypes
  /**
   * BeneficioCountOutputType without action
   */
  export type BeneficioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BeneficioCountOutputType
     */
    select?: BeneficioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BeneficioCountOutputType without action
   */
  export type BeneficioCountOutputTypeCountFuncionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioBeneficioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Funcionario
   */

  export type AggregateFuncionario = {
    _count: FuncionarioCountAggregateOutputType | null
    _avg: FuncionarioAvgAggregateOutputType | null
    _sum: FuncionarioSumAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  export type FuncionarioAvgAggregateOutputType = {
    id: number | null
  }

  export type FuncionarioSumAggregateOutputType = {
    id: number | null
  }

  export type FuncionarioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    cpf: string | null
    data_nascimento: Date | null
    data_contratacao: Date | null
    cargo: string | null
    departamento: string | null
    role: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type FuncionarioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    cpf: string | null
    data_nascimento: Date | null
    data_contratacao: Date | null
    cargo: string | null
    departamento: string | null
    role: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type FuncionarioCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha_hash: number
    cpf: number
    data_nascimento: number
    data_contratacao: number
    cargo: number
    departamento: number
    role: number
    ativo: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type FuncionarioAvgAggregateInputType = {
    id?: true
  }

  export type FuncionarioSumAggregateInputType = {
    id?: true
  }

  export type FuncionarioMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    cpf?: true
    data_nascimento?: true
    data_contratacao?: true
    cargo?: true
    departamento?: true
    role?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type FuncionarioMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    cpf?: true
    data_nascimento?: true
    data_contratacao?: true
    cargo?: true
    departamento?: true
    role?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type FuncionarioCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha_hash?: true
    cpf?: true
    data_nascimento?: true
    data_contratacao?: true
    cargo?: true
    departamento?: true
    role?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type FuncionarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionario to aggregate.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Funcionarios
    **/
    _count?: true | FuncionarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncionarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncionarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionarioMaxAggregateInputType
  }

  export type GetFuncionarioAggregateType<T extends FuncionarioAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncionario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncionario[P]>
      : GetScalarType<T[P], AggregateFuncionario[P]>
  }




  export type FuncionarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioWhereInput
    orderBy?: FuncionarioOrderByWithAggregationInput | FuncionarioOrderByWithAggregationInput[]
    by: FuncionarioScalarFieldEnum[] | FuncionarioScalarFieldEnum
    having?: FuncionarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionarioCountAggregateInputType | true
    _avg?: FuncionarioAvgAggregateInputType
    _sum?: FuncionarioSumAggregateInputType
    _min?: FuncionarioMinAggregateInputType
    _max?: FuncionarioMaxAggregateInputType
  }

  export type FuncionarioGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento: Date | null
    data_contratacao: Date
    cargo: string
    departamento: string
    role: string
    ativo: boolean
    criado_em: Date
    atualizado_em: Date
    _count: FuncionarioCountAggregateOutputType | null
    _avg: FuncionarioAvgAggregateOutputType | null
    _sum: FuncionarioSumAggregateOutputType | null
    _min: FuncionarioMinAggregateOutputType | null
    _max: FuncionarioMaxAggregateOutputType | null
  }

  type GetFuncionarioGroupByPayload<T extends FuncionarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionarioGroupByOutputType[P]>
        }
      >
    >


  export type FuncionarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    data_contratacao?: boolean
    cargo?: boolean
    departamento?: boolean
    role?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    registrosPonto?: boolean | Funcionario$registrosPontoArgs<ExtArgs>
    solicitacoesFerias?: boolean | Funcionario$solicitacoesFeriasArgs<ExtArgs>
    salarios?: boolean | Funcionario$salariosArgs<ExtArgs>
    holerites?: boolean | Funcionario$holeritesArgs<ExtArgs>
    beneficios?: boolean | Funcionario$beneficiosArgs<ExtArgs>
    aprovacoesFerias?: boolean | Funcionario$aprovacoesFeriasArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    data_contratacao?: boolean
    cargo?: boolean
    departamento?: boolean
    role?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }, ExtArgs["result"]["funcionario"]>

  export type FuncionarioSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    data_contratacao?: boolean
    cargo?: boolean
    departamento?: boolean
    role?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type FuncionarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrosPonto?: boolean | Funcionario$registrosPontoArgs<ExtArgs>
    solicitacoesFerias?: boolean | Funcionario$solicitacoesFeriasArgs<ExtArgs>
    salarios?: boolean | Funcionario$salariosArgs<ExtArgs>
    holerites?: boolean | Funcionario$holeritesArgs<ExtArgs>
    beneficios?: boolean | Funcionario$beneficiosArgs<ExtArgs>
    aprovacoesFerias?: boolean | Funcionario$aprovacoesFeriasArgs<ExtArgs>
    _count?: boolean | FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FuncionarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $FuncionarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Funcionario"
    objects: {
      registrosPonto: Prisma.$RegistroPontoPayload<ExtArgs>[]
      solicitacoesFerias: Prisma.$SolicitacaoFeriasPayload<ExtArgs>[]
      salarios: Prisma.$SalarioPayload<ExtArgs>[]
      holerites: Prisma.$HoleritePayload<ExtArgs>[]
      beneficios: Prisma.$FuncionarioBeneficioPayload<ExtArgs>[]
      aprovacoesFerias: Prisma.$SolicitacaoFeriasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha_hash: string
      cpf: string
      data_nascimento: Date | null
      data_contratacao: Date
      cargo: string
      departamento: string
      role: string
      ativo: boolean
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["funcionario"]>
    composites: {}
  }

  type FuncionarioGetPayload<S extends boolean | null | undefined | FuncionarioDefaultArgs> = $Result.GetResult<Prisma.$FuncionarioPayload, S>

  type FuncionarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncionarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncionarioCountAggregateInputType | true
    }

  export interface FuncionarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Funcionario'], meta: { name: 'Funcionario' } }
    /**
     * Find zero or one Funcionario that matches the filter.
     * @param {FuncionarioFindUniqueArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FuncionarioFindUniqueArgs>(args: SelectSubset<T, FuncionarioFindUniqueArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Funcionario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncionarioFindUniqueOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FuncionarioFindUniqueOrThrowArgs>(args: SelectSubset<T, FuncionarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FuncionarioFindFirstArgs>(args?: SelectSubset<T, FuncionarioFindFirstArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Funcionario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindFirstOrThrowArgs} args - Arguments to find a Funcionario
     * @example
     * // Get one Funcionario
     * const funcionario = await prisma.funcionario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FuncionarioFindFirstOrThrowArgs>(args?: SelectSubset<T, FuncionarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Funcionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Funcionarios
     * const funcionarios = await prisma.funcionario.findMany()
     * 
     * // Get first 10 Funcionarios
     * const funcionarios = await prisma.funcionario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FuncionarioFindManyArgs>(args?: SelectSubset<T, FuncionarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Funcionario.
     * @param {FuncionarioCreateArgs} args - Arguments to create a Funcionario.
     * @example
     * // Create one Funcionario
     * const Funcionario = await prisma.funcionario.create({
     *   data: {
     *     // ... data to create a Funcionario
     *   }
     * })
     * 
     */
    create<T extends FuncionarioCreateArgs>(args: SelectSubset<T, FuncionarioCreateArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Funcionarios.
     * @param {FuncionarioCreateManyArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FuncionarioCreateManyArgs>(args?: SelectSubset<T, FuncionarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Funcionarios and returns the data saved in the database.
     * @param {FuncionarioCreateManyAndReturnArgs} args - Arguments to create many Funcionarios.
     * @example
     * // Create many Funcionarios
     * const funcionario = await prisma.funcionario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Funcionarios and only return the `id`
     * const funcionarioWithIdOnly = await prisma.funcionario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FuncionarioCreateManyAndReturnArgs>(args?: SelectSubset<T, FuncionarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Funcionario.
     * @param {FuncionarioDeleteArgs} args - Arguments to delete one Funcionario.
     * @example
     * // Delete one Funcionario
     * const Funcionario = await prisma.funcionario.delete({
     *   where: {
     *     // ... filter to delete one Funcionario
     *   }
     * })
     * 
     */
    delete<T extends FuncionarioDeleteArgs>(args: SelectSubset<T, FuncionarioDeleteArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Funcionario.
     * @param {FuncionarioUpdateArgs} args - Arguments to update one Funcionario.
     * @example
     * // Update one Funcionario
     * const funcionario = await prisma.funcionario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FuncionarioUpdateArgs>(args: SelectSubset<T, FuncionarioUpdateArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Funcionarios.
     * @param {FuncionarioDeleteManyArgs} args - Arguments to filter Funcionarios to delete.
     * @example
     * // Delete a few Funcionarios
     * const { count } = await prisma.funcionario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FuncionarioDeleteManyArgs>(args?: SelectSubset<T, FuncionarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Funcionarios
     * const funcionario = await prisma.funcionario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FuncionarioUpdateManyArgs>(args: SelectSubset<T, FuncionarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Funcionario.
     * @param {FuncionarioUpsertArgs} args - Arguments to update or create a Funcionario.
     * @example
     * // Update or create a Funcionario
     * const funcionario = await prisma.funcionario.upsert({
     *   create: {
     *     // ... data to create a Funcionario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Funcionario we want to update
     *   }
     * })
     */
    upsert<T extends FuncionarioUpsertArgs>(args: SelectSubset<T, FuncionarioUpsertArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioCountArgs} args - Arguments to filter Funcionarios to count.
     * @example
     * // Count the number of Funcionarios
     * const count = await prisma.funcionario.count({
     *   where: {
     *     // ... the filter for the Funcionarios we want to count
     *   }
     * })
    **/
    count<T extends FuncionarioCountArgs>(
      args?: Subset<T, FuncionarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionarioAggregateArgs>(args: Subset<T, FuncionarioAggregateArgs>): Prisma.PrismaPromise<GetFuncionarioAggregateType<T>>

    /**
     * Group by Funcionario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncionarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncionarioGroupByArgs['orderBy'] }
        : { orderBy?: FuncionarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncionarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Funcionario model
   */
  readonly fields: FuncionarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Funcionario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncionarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrosPonto<T extends Funcionario$registrosPontoArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$registrosPontoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findMany"> | Null>
    solicitacoesFerias<T extends Funcionario$solicitacoesFeriasArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$solicitacoesFeriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findMany"> | Null>
    salarios<T extends Funcionario$salariosArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$salariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findMany"> | Null>
    holerites<T extends Funcionario$holeritesArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$holeritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findMany"> | Null>
    beneficios<T extends Funcionario$beneficiosArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$beneficiosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findMany"> | Null>
    aprovacoesFerias<T extends Funcionario$aprovacoesFeriasArgs<ExtArgs> = {}>(args?: Subset<T, Funcionario$aprovacoesFeriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Funcionario model
   */ 
  interface FuncionarioFieldRefs {
    readonly id: FieldRef<"Funcionario", 'Int'>
    readonly nome: FieldRef<"Funcionario", 'String'>
    readonly email: FieldRef<"Funcionario", 'String'>
    readonly senha_hash: FieldRef<"Funcionario", 'String'>
    readonly cpf: FieldRef<"Funcionario", 'String'>
    readonly data_nascimento: FieldRef<"Funcionario", 'DateTime'>
    readonly data_contratacao: FieldRef<"Funcionario", 'DateTime'>
    readonly cargo: FieldRef<"Funcionario", 'String'>
    readonly departamento: FieldRef<"Funcionario", 'String'>
    readonly role: FieldRef<"Funcionario", 'String'>
    readonly ativo: FieldRef<"Funcionario", 'Boolean'>
    readonly criado_em: FieldRef<"Funcionario", 'DateTime'>
    readonly atualizado_em: FieldRef<"Funcionario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Funcionario findUnique
   */
  export type FuncionarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findUniqueOrThrow
   */
  export type FuncionarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario findFirst
   */
  export type FuncionarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findFirstOrThrow
   */
  export type FuncionarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionario to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Funcionarios.
     */
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario findMany
   */
  export type FuncionarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter, which Funcionarios to fetch.
     */
    where?: FuncionarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Funcionarios to fetch.
     */
    orderBy?: FuncionarioOrderByWithRelationInput | FuncionarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Funcionarios.
     */
    cursor?: FuncionarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Funcionarios.
     */
    skip?: number
    distinct?: FuncionarioScalarFieldEnum | FuncionarioScalarFieldEnum[]
  }

  /**
   * Funcionario create
   */
  export type FuncionarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Funcionario.
     */
    data: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
  }

  /**
   * Funcionario createMany
   */
  export type FuncionarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcionario createManyAndReturn
   */
  export type FuncionarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Funcionarios.
     */
    data: FuncionarioCreateManyInput | FuncionarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Funcionario update
   */
  export type FuncionarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Funcionario.
     */
    data: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
    /**
     * Choose, which Funcionario to update.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario updateMany
   */
  export type FuncionarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Funcionarios.
     */
    data: XOR<FuncionarioUpdateManyMutationInput, FuncionarioUncheckedUpdateManyInput>
    /**
     * Filter which Funcionarios to update
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario upsert
   */
  export type FuncionarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Funcionario to update in case it exists.
     */
    where: FuncionarioWhereUniqueInput
    /**
     * In case the Funcionario found by the `where` argument doesn't exist, create a new Funcionario with this data.
     */
    create: XOR<FuncionarioCreateInput, FuncionarioUncheckedCreateInput>
    /**
     * In case the Funcionario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncionarioUpdateInput, FuncionarioUncheckedUpdateInput>
  }

  /**
   * Funcionario delete
   */
  export type FuncionarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    /**
     * Filter which Funcionario to delete.
     */
    where: FuncionarioWhereUniqueInput
  }

  /**
   * Funcionario deleteMany
   */
  export type FuncionarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Funcionarios to delete
     */
    where?: FuncionarioWhereInput
  }

  /**
   * Funcionario.registrosPonto
   */
  export type Funcionario$registrosPontoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    where?: RegistroPontoWhereInput
    orderBy?: RegistroPontoOrderByWithRelationInput | RegistroPontoOrderByWithRelationInput[]
    cursor?: RegistroPontoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroPontoScalarFieldEnum | RegistroPontoScalarFieldEnum[]
  }

  /**
   * Funcionario.solicitacoesFerias
   */
  export type Funcionario$solicitacoesFeriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    where?: SolicitacaoFeriasWhereInput
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    cursor?: SolicitacaoFeriasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoFeriasScalarFieldEnum | SolicitacaoFeriasScalarFieldEnum[]
  }

  /**
   * Funcionario.salarios
   */
  export type Funcionario$salariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    where?: SalarioWhereInput
    orderBy?: SalarioOrderByWithRelationInput | SalarioOrderByWithRelationInput[]
    cursor?: SalarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalarioScalarFieldEnum | SalarioScalarFieldEnum[]
  }

  /**
   * Funcionario.holerites
   */
  export type Funcionario$holeritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    where?: HoleriteWhereInput
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    cursor?: HoleriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HoleriteScalarFieldEnum | HoleriteScalarFieldEnum[]
  }

  /**
   * Funcionario.beneficios
   */
  export type Funcionario$beneficiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    where?: FuncionarioBeneficioWhereInput
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    cursor?: FuncionarioBeneficioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioBeneficioScalarFieldEnum | FuncionarioBeneficioScalarFieldEnum[]
  }

  /**
   * Funcionario.aprovacoesFerias
   */
  export type Funcionario$aprovacoesFeriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    where?: SolicitacaoFeriasWhereInput
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    cursor?: SolicitacaoFeriasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoFeriasScalarFieldEnum | SolicitacaoFeriasScalarFieldEnum[]
  }

  /**
   * Funcionario without action
   */
  export type FuncionarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
  }


  /**
   * Model RegistroPonto
   */

  export type AggregateRegistroPonto = {
    _count: RegistroPontoCountAggregateOutputType | null
    _avg: RegistroPontoAvgAggregateOutputType | null
    _sum: RegistroPontoSumAggregateOutputType | null
    _min: RegistroPontoMinAggregateOutputType | null
    _max: RegistroPontoMaxAggregateOutputType | null
  }

  export type RegistroPontoAvgAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    horas_faltantes_minutos: number | null
  }

  export type RegistroPontoSumAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    horas_faltantes_minutos: number | null
  }

  export type RegistroPontoMinAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    data: Date | null
    hora_entrada: Date | null
    hora_saida: Date | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    horas_faltantes_minutos: number | null
    observacoes: string | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type RegistroPontoMaxAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    data: Date | null
    hora_entrada: Date | null
    hora_saida: Date | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    horas_faltantes_minutos: number | null
    observacoes: string | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type RegistroPontoCountAggregateOutputType = {
    id: number
    funcionario_id: number
    data: number
    hora_entrada: number
    hora_saida: number
    horas_trabalhadas_minutos: number
    horas_extras_minutos: number
    horas_faltantes_minutos: number
    observacoes: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type RegistroPontoAvgAggregateInputType = {
    id?: true
    funcionario_id?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    horas_faltantes_minutos?: true
  }

  export type RegistroPontoSumAggregateInputType = {
    id?: true
    funcionario_id?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    horas_faltantes_minutos?: true
  }

  export type RegistroPontoMinAggregateInputType = {
    id?: true
    funcionario_id?: true
    data?: true
    hora_entrada?: true
    hora_saida?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    horas_faltantes_minutos?: true
    observacoes?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type RegistroPontoMaxAggregateInputType = {
    id?: true
    funcionario_id?: true
    data?: true
    hora_entrada?: true
    hora_saida?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    horas_faltantes_minutos?: true
    observacoes?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type RegistroPontoCountAggregateInputType = {
    id?: true
    funcionario_id?: true
    data?: true
    hora_entrada?: true
    hora_saida?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    horas_faltantes_minutos?: true
    observacoes?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type RegistroPontoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroPonto to aggregate.
     */
    where?: RegistroPontoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroPontos to fetch.
     */
    orderBy?: RegistroPontoOrderByWithRelationInput | RegistroPontoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroPontoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroPontos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroPontos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroPontos
    **/
    _count?: true | RegistroPontoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroPontoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroPontoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroPontoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroPontoMaxAggregateInputType
  }

  export type GetRegistroPontoAggregateType<T extends RegistroPontoAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroPonto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroPonto[P]>
      : GetScalarType<T[P], AggregateRegistroPonto[P]>
  }




  export type RegistroPontoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroPontoWhereInput
    orderBy?: RegistroPontoOrderByWithAggregationInput | RegistroPontoOrderByWithAggregationInput[]
    by: RegistroPontoScalarFieldEnum[] | RegistroPontoScalarFieldEnum
    having?: RegistroPontoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroPontoCountAggregateInputType | true
    _avg?: RegistroPontoAvgAggregateInputType
    _sum?: RegistroPontoSumAggregateInputType
    _min?: RegistroPontoMinAggregateInputType
    _max?: RegistroPontoMaxAggregateInputType
  }

  export type RegistroPontoGroupByOutputType = {
    id: number
    funcionario_id: number
    data: Date
    hora_entrada: Date | null
    hora_saida: Date | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    horas_faltantes_minutos: number | null
    observacoes: string | null
    criado_em: Date
    atualizado_em: Date
    _count: RegistroPontoCountAggregateOutputType | null
    _avg: RegistroPontoAvgAggregateOutputType | null
    _sum: RegistroPontoSumAggregateOutputType | null
    _min: RegistroPontoMinAggregateOutputType | null
    _max: RegistroPontoMaxAggregateOutputType | null
  }

  type GetRegistroPontoGroupByPayload<T extends RegistroPontoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroPontoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroPontoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroPontoGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroPontoGroupByOutputType[P]>
        }
      >
    >


  export type RegistroPontoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    data?: boolean
    hora_entrada?: boolean
    hora_saida?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    horas_faltantes_minutos?: boolean
    observacoes?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registroPonto"]>

  export type RegistroPontoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    data?: boolean
    hora_entrada?: boolean
    hora_saida?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    horas_faltantes_minutos?: boolean
    observacoes?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registroPonto"]>

  export type RegistroPontoSelectScalar = {
    id?: boolean
    funcionario_id?: boolean
    data?: boolean
    hora_entrada?: boolean
    hora_saida?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    horas_faltantes_minutos?: boolean
    observacoes?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type RegistroPontoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }
  export type RegistroPontoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }

  export type $RegistroPontoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroPonto"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      funcionario_id: number
      data: Date
      hora_entrada: Date | null
      hora_saida: Date | null
      horas_trabalhadas_minutos: number | null
      horas_extras_minutos: number | null
      horas_faltantes_minutos: number | null
      observacoes: string | null
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["registroPonto"]>
    composites: {}
  }

  type RegistroPontoGetPayload<S extends boolean | null | undefined | RegistroPontoDefaultArgs> = $Result.GetResult<Prisma.$RegistroPontoPayload, S>

  type RegistroPontoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RegistroPontoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RegistroPontoCountAggregateInputType | true
    }

  export interface RegistroPontoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroPonto'], meta: { name: 'RegistroPonto' } }
    /**
     * Find zero or one RegistroPonto that matches the filter.
     * @param {RegistroPontoFindUniqueArgs} args - Arguments to find a RegistroPonto
     * @example
     * // Get one RegistroPonto
     * const registroPonto = await prisma.registroPonto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroPontoFindUniqueArgs>(args: SelectSubset<T, RegistroPontoFindUniqueArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RegistroPonto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RegistroPontoFindUniqueOrThrowArgs} args - Arguments to find a RegistroPonto
     * @example
     * // Get one RegistroPonto
     * const registroPonto = await prisma.registroPonto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroPontoFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroPontoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RegistroPonto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoFindFirstArgs} args - Arguments to find a RegistroPonto
     * @example
     * // Get one RegistroPonto
     * const registroPonto = await prisma.registroPonto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroPontoFindFirstArgs>(args?: SelectSubset<T, RegistroPontoFindFirstArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RegistroPonto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoFindFirstOrThrowArgs} args - Arguments to find a RegistroPonto
     * @example
     * // Get one RegistroPonto
     * const registroPonto = await prisma.registroPonto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroPontoFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroPontoFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RegistroPontos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroPontos
     * const registroPontos = await prisma.registroPonto.findMany()
     * 
     * // Get first 10 RegistroPontos
     * const registroPontos = await prisma.registroPonto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroPontoWithIdOnly = await prisma.registroPonto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroPontoFindManyArgs>(args?: SelectSubset<T, RegistroPontoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RegistroPonto.
     * @param {RegistroPontoCreateArgs} args - Arguments to create a RegistroPonto.
     * @example
     * // Create one RegistroPonto
     * const RegistroPonto = await prisma.registroPonto.create({
     *   data: {
     *     // ... data to create a RegistroPonto
     *   }
     * })
     * 
     */
    create<T extends RegistroPontoCreateArgs>(args: SelectSubset<T, RegistroPontoCreateArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RegistroPontos.
     * @param {RegistroPontoCreateManyArgs} args - Arguments to create many RegistroPontos.
     * @example
     * // Create many RegistroPontos
     * const registroPonto = await prisma.registroPonto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroPontoCreateManyArgs>(args?: SelectSubset<T, RegistroPontoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroPontos and returns the data saved in the database.
     * @param {RegistroPontoCreateManyAndReturnArgs} args - Arguments to create many RegistroPontos.
     * @example
     * // Create many RegistroPontos
     * const registroPonto = await prisma.registroPonto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroPontos and only return the `id`
     * const registroPontoWithIdOnly = await prisma.registroPonto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroPontoCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroPontoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RegistroPonto.
     * @param {RegistroPontoDeleteArgs} args - Arguments to delete one RegistroPonto.
     * @example
     * // Delete one RegistroPonto
     * const RegistroPonto = await prisma.registroPonto.delete({
     *   where: {
     *     // ... filter to delete one RegistroPonto
     *   }
     * })
     * 
     */
    delete<T extends RegistroPontoDeleteArgs>(args: SelectSubset<T, RegistroPontoDeleteArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RegistroPonto.
     * @param {RegistroPontoUpdateArgs} args - Arguments to update one RegistroPonto.
     * @example
     * // Update one RegistroPonto
     * const registroPonto = await prisma.registroPonto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroPontoUpdateArgs>(args: SelectSubset<T, RegistroPontoUpdateArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RegistroPontos.
     * @param {RegistroPontoDeleteManyArgs} args - Arguments to filter RegistroPontos to delete.
     * @example
     * // Delete a few RegistroPontos
     * const { count } = await prisma.registroPonto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroPontoDeleteManyArgs>(args?: SelectSubset<T, RegistroPontoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroPontos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroPontos
     * const registroPonto = await prisma.registroPonto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroPontoUpdateManyArgs>(args: SelectSubset<T, RegistroPontoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RegistroPonto.
     * @param {RegistroPontoUpsertArgs} args - Arguments to update or create a RegistroPonto.
     * @example
     * // Update or create a RegistroPonto
     * const registroPonto = await prisma.registroPonto.upsert({
     *   create: {
     *     // ... data to create a RegistroPonto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroPonto we want to update
     *   }
     * })
     */
    upsert<T extends RegistroPontoUpsertArgs>(args: SelectSubset<T, RegistroPontoUpsertArgs<ExtArgs>>): Prisma__RegistroPontoClient<$Result.GetResult<Prisma.$RegistroPontoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RegistroPontos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoCountArgs} args - Arguments to filter RegistroPontos to count.
     * @example
     * // Count the number of RegistroPontos
     * const count = await prisma.registroPonto.count({
     *   where: {
     *     // ... the filter for the RegistroPontos we want to count
     *   }
     * })
    **/
    count<T extends RegistroPontoCountArgs>(
      args?: Subset<T, RegistroPontoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroPontoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroPonto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroPontoAggregateArgs>(args: Subset<T, RegistroPontoAggregateArgs>): Prisma.PrismaPromise<GetRegistroPontoAggregateType<T>>

    /**
     * Group by RegistroPonto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroPontoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroPontoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroPontoGroupByArgs['orderBy'] }
        : { orderBy?: RegistroPontoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroPontoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroPontoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroPonto model
   */
  readonly fields: RegistroPontoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroPonto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroPontoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionario<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroPonto model
   */ 
  interface RegistroPontoFieldRefs {
    readonly id: FieldRef<"RegistroPonto", 'Int'>
    readonly funcionario_id: FieldRef<"RegistroPonto", 'Int'>
    readonly data: FieldRef<"RegistroPonto", 'DateTime'>
    readonly hora_entrada: FieldRef<"RegistroPonto", 'DateTime'>
    readonly hora_saida: FieldRef<"RegistroPonto", 'DateTime'>
    readonly horas_trabalhadas_minutos: FieldRef<"RegistroPonto", 'Int'>
    readonly horas_extras_minutos: FieldRef<"RegistroPonto", 'Int'>
    readonly horas_faltantes_minutos: FieldRef<"RegistroPonto", 'Int'>
    readonly observacoes: FieldRef<"RegistroPonto", 'String'>
    readonly criado_em: FieldRef<"RegistroPonto", 'DateTime'>
    readonly atualizado_em: FieldRef<"RegistroPonto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RegistroPonto findUnique
   */
  export type RegistroPontoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter, which RegistroPonto to fetch.
     */
    where: RegistroPontoWhereUniqueInput
  }

  /**
   * RegistroPonto findUniqueOrThrow
   */
  export type RegistroPontoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter, which RegistroPonto to fetch.
     */
    where: RegistroPontoWhereUniqueInput
  }

  /**
   * RegistroPonto findFirst
   */
  export type RegistroPontoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter, which RegistroPonto to fetch.
     */
    where?: RegistroPontoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroPontos to fetch.
     */
    orderBy?: RegistroPontoOrderByWithRelationInput | RegistroPontoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroPontos.
     */
    cursor?: RegistroPontoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroPontos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroPontos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroPontos.
     */
    distinct?: RegistroPontoScalarFieldEnum | RegistroPontoScalarFieldEnum[]
  }

  /**
   * RegistroPonto findFirstOrThrow
   */
  export type RegistroPontoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter, which RegistroPonto to fetch.
     */
    where?: RegistroPontoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroPontos to fetch.
     */
    orderBy?: RegistroPontoOrderByWithRelationInput | RegistroPontoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroPontos.
     */
    cursor?: RegistroPontoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroPontos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroPontos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroPontos.
     */
    distinct?: RegistroPontoScalarFieldEnum | RegistroPontoScalarFieldEnum[]
  }

  /**
   * RegistroPonto findMany
   */
  export type RegistroPontoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter, which RegistroPontos to fetch.
     */
    where?: RegistroPontoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroPontos to fetch.
     */
    orderBy?: RegistroPontoOrderByWithRelationInput | RegistroPontoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroPontos.
     */
    cursor?: RegistroPontoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroPontos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroPontos.
     */
    skip?: number
    distinct?: RegistroPontoScalarFieldEnum | RegistroPontoScalarFieldEnum[]
  }

  /**
   * RegistroPonto create
   */
  export type RegistroPontoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * The data needed to create a RegistroPonto.
     */
    data: XOR<RegistroPontoCreateInput, RegistroPontoUncheckedCreateInput>
  }

  /**
   * RegistroPonto createMany
   */
  export type RegistroPontoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroPontos.
     */
    data: RegistroPontoCreateManyInput | RegistroPontoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroPonto createManyAndReturn
   */
  export type RegistroPontoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RegistroPontos.
     */
    data: RegistroPontoCreateManyInput | RegistroPontoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegistroPonto update
   */
  export type RegistroPontoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * The data needed to update a RegistroPonto.
     */
    data: XOR<RegistroPontoUpdateInput, RegistroPontoUncheckedUpdateInput>
    /**
     * Choose, which RegistroPonto to update.
     */
    where: RegistroPontoWhereUniqueInput
  }

  /**
   * RegistroPonto updateMany
   */
  export type RegistroPontoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroPontos.
     */
    data: XOR<RegistroPontoUpdateManyMutationInput, RegistroPontoUncheckedUpdateManyInput>
    /**
     * Filter which RegistroPontos to update
     */
    where?: RegistroPontoWhereInput
  }

  /**
   * RegistroPonto upsert
   */
  export type RegistroPontoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * The filter to search for the RegistroPonto to update in case it exists.
     */
    where: RegistroPontoWhereUniqueInput
    /**
     * In case the RegistroPonto found by the `where` argument doesn't exist, create a new RegistroPonto with this data.
     */
    create: XOR<RegistroPontoCreateInput, RegistroPontoUncheckedCreateInput>
    /**
     * In case the RegistroPonto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroPontoUpdateInput, RegistroPontoUncheckedUpdateInput>
  }

  /**
   * RegistroPonto delete
   */
  export type RegistroPontoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
    /**
     * Filter which RegistroPonto to delete.
     */
    where: RegistroPontoWhereUniqueInput
  }

  /**
   * RegistroPonto deleteMany
   */
  export type RegistroPontoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroPontos to delete
     */
    where?: RegistroPontoWhereInput
  }

  /**
   * RegistroPonto without action
   */
  export type RegistroPontoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroPonto
     */
    select?: RegistroPontoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroPontoInclude<ExtArgs> | null
  }


  /**
   * Model SolicitacaoFerias
   */

  export type AggregateSolicitacaoFerias = {
    _count: SolicitacaoFeriasCountAggregateOutputType | null
    _avg: SolicitacaoFeriasAvgAggregateOutputType | null
    _sum: SolicitacaoFeriasSumAggregateOutputType | null
    _min: SolicitacaoFeriasMinAggregateOutputType | null
    _max: SolicitacaoFeriasMaxAggregateOutputType | null
  }

  export type SolicitacaoFeriasAvgAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    dias_solicitados: number | null
    aprovado_por_id: number | null
  }

  export type SolicitacaoFeriasSumAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    dias_solicitados: number | null
    aprovado_por_id: number | null
  }

  export type SolicitacaoFeriasMinAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    data_inicio: Date | null
    data_fim: Date | null
    dias_solicitados: number | null
    status: string | null
    motivo_negacao: string | null
    aprovado_por_id: number | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type SolicitacaoFeriasMaxAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    data_inicio: Date | null
    data_fim: Date | null
    dias_solicitados: number | null
    status: string | null
    motivo_negacao: string | null
    aprovado_por_id: number | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type SolicitacaoFeriasCountAggregateOutputType = {
    id: number
    funcionario_id: number
    data_inicio: number
    data_fim: number
    dias_solicitados: number
    status: number
    motivo_negacao: number
    aprovado_por_id: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type SolicitacaoFeriasAvgAggregateInputType = {
    id?: true
    funcionario_id?: true
    dias_solicitados?: true
    aprovado_por_id?: true
  }

  export type SolicitacaoFeriasSumAggregateInputType = {
    id?: true
    funcionario_id?: true
    dias_solicitados?: true
    aprovado_por_id?: true
  }

  export type SolicitacaoFeriasMinAggregateInputType = {
    id?: true
    funcionario_id?: true
    data_inicio?: true
    data_fim?: true
    dias_solicitados?: true
    status?: true
    motivo_negacao?: true
    aprovado_por_id?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type SolicitacaoFeriasMaxAggregateInputType = {
    id?: true
    funcionario_id?: true
    data_inicio?: true
    data_fim?: true
    dias_solicitados?: true
    status?: true
    motivo_negacao?: true
    aprovado_por_id?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type SolicitacaoFeriasCountAggregateInputType = {
    id?: true
    funcionario_id?: true
    data_inicio?: true
    data_fim?: true
    dias_solicitados?: true
    status?: true
    motivo_negacao?: true
    aprovado_por_id?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type SolicitacaoFeriasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitacaoFerias to aggregate.
     */
    where?: SolicitacaoFeriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoFerias to fetch.
     */
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SolicitacaoFeriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoFerias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoFerias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SolicitacaoFerias
    **/
    _count?: true | SolicitacaoFeriasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SolicitacaoFeriasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SolicitacaoFeriasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SolicitacaoFeriasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SolicitacaoFeriasMaxAggregateInputType
  }

  export type GetSolicitacaoFeriasAggregateType<T extends SolicitacaoFeriasAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitacaoFerias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitacaoFerias[P]>
      : GetScalarType<T[P], AggregateSolicitacaoFerias[P]>
  }




  export type SolicitacaoFeriasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitacaoFeriasWhereInput
    orderBy?: SolicitacaoFeriasOrderByWithAggregationInput | SolicitacaoFeriasOrderByWithAggregationInput[]
    by: SolicitacaoFeriasScalarFieldEnum[] | SolicitacaoFeriasScalarFieldEnum
    having?: SolicitacaoFeriasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SolicitacaoFeriasCountAggregateInputType | true
    _avg?: SolicitacaoFeriasAvgAggregateInputType
    _sum?: SolicitacaoFeriasSumAggregateInputType
    _min?: SolicitacaoFeriasMinAggregateInputType
    _max?: SolicitacaoFeriasMaxAggregateInputType
  }

  export type SolicitacaoFeriasGroupByOutputType = {
    id: number
    funcionario_id: number
    data_inicio: Date
    data_fim: Date
    dias_solicitados: number
    status: string
    motivo_negacao: string | null
    aprovado_por_id: number | null
    criado_em: Date
    atualizado_em: Date
    _count: SolicitacaoFeriasCountAggregateOutputType | null
    _avg: SolicitacaoFeriasAvgAggregateOutputType | null
    _sum: SolicitacaoFeriasSumAggregateOutputType | null
    _min: SolicitacaoFeriasMinAggregateOutputType | null
    _max: SolicitacaoFeriasMaxAggregateOutputType | null
  }

  type GetSolicitacaoFeriasGroupByPayload<T extends SolicitacaoFeriasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SolicitacaoFeriasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SolicitacaoFeriasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SolicitacaoFeriasGroupByOutputType[P]>
            : GetScalarType<T[P], SolicitacaoFeriasGroupByOutputType[P]>
        }
      >
    >


  export type SolicitacaoFeriasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    dias_solicitados?: boolean
    status?: boolean
    motivo_negacao?: boolean
    aprovado_por_id?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovado_por?: boolean | SolicitacaoFerias$aprovado_porArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacaoFerias"]>

  export type SolicitacaoFeriasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    dias_solicitados?: boolean
    status?: boolean
    motivo_negacao?: boolean
    aprovado_por_id?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovado_por?: boolean | SolicitacaoFerias$aprovado_porArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacaoFerias"]>

  export type SolicitacaoFeriasSelectScalar = {
    id?: boolean
    funcionario_id?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    dias_solicitados?: boolean
    status?: boolean
    motivo_negacao?: boolean
    aprovado_por_id?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type SolicitacaoFeriasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovado_por?: boolean | SolicitacaoFerias$aprovado_porArgs<ExtArgs>
  }
  export type SolicitacaoFeriasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    aprovado_por?: boolean | SolicitacaoFerias$aprovado_porArgs<ExtArgs>
  }

  export type $SolicitacaoFeriasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SolicitacaoFerias"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>
      aprovado_por: Prisma.$FuncionarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      funcionario_id: number
      data_inicio: Date
      data_fim: Date
      dias_solicitados: number
      status: string
      motivo_negacao: string | null
      aprovado_por_id: number | null
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["solicitacaoFerias"]>
    composites: {}
  }

  type SolicitacaoFeriasGetPayload<S extends boolean | null | undefined | SolicitacaoFeriasDefaultArgs> = $Result.GetResult<Prisma.$SolicitacaoFeriasPayload, S>

  type SolicitacaoFeriasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SolicitacaoFeriasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SolicitacaoFeriasCountAggregateInputType | true
    }

  export interface SolicitacaoFeriasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SolicitacaoFerias'], meta: { name: 'SolicitacaoFerias' } }
    /**
     * Find zero or one SolicitacaoFerias that matches the filter.
     * @param {SolicitacaoFeriasFindUniqueArgs} args - Arguments to find a SolicitacaoFerias
     * @example
     * // Get one SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SolicitacaoFeriasFindUniqueArgs>(args: SelectSubset<T, SolicitacaoFeriasFindUniqueArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SolicitacaoFerias that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SolicitacaoFeriasFindUniqueOrThrowArgs} args - Arguments to find a SolicitacaoFerias
     * @example
     * // Get one SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SolicitacaoFeriasFindUniqueOrThrowArgs>(args: SelectSubset<T, SolicitacaoFeriasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SolicitacaoFerias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasFindFirstArgs} args - Arguments to find a SolicitacaoFerias
     * @example
     * // Get one SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SolicitacaoFeriasFindFirstArgs>(args?: SelectSubset<T, SolicitacaoFeriasFindFirstArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SolicitacaoFerias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasFindFirstOrThrowArgs} args - Arguments to find a SolicitacaoFerias
     * @example
     * // Get one SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SolicitacaoFeriasFindFirstOrThrowArgs>(args?: SelectSubset<T, SolicitacaoFeriasFindFirstOrThrowArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SolicitacaoFerias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findMany()
     * 
     * // Get first 10 SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitacaoFeriasWithIdOnly = await prisma.solicitacaoFerias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SolicitacaoFeriasFindManyArgs>(args?: SelectSubset<T, SolicitacaoFeriasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SolicitacaoFerias.
     * @param {SolicitacaoFeriasCreateArgs} args - Arguments to create a SolicitacaoFerias.
     * @example
     * // Create one SolicitacaoFerias
     * const SolicitacaoFerias = await prisma.solicitacaoFerias.create({
     *   data: {
     *     // ... data to create a SolicitacaoFerias
     *   }
     * })
     * 
     */
    create<T extends SolicitacaoFeriasCreateArgs>(args: SelectSubset<T, SolicitacaoFeriasCreateArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SolicitacaoFerias.
     * @param {SolicitacaoFeriasCreateManyArgs} args - Arguments to create many SolicitacaoFerias.
     * @example
     * // Create many SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SolicitacaoFeriasCreateManyArgs>(args?: SelectSubset<T, SolicitacaoFeriasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SolicitacaoFerias and returns the data saved in the database.
     * @param {SolicitacaoFeriasCreateManyAndReturnArgs} args - Arguments to create many SolicitacaoFerias.
     * @example
     * // Create many SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SolicitacaoFerias and only return the `id`
     * const solicitacaoFeriasWithIdOnly = await prisma.solicitacaoFerias.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SolicitacaoFeriasCreateManyAndReturnArgs>(args?: SelectSubset<T, SolicitacaoFeriasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SolicitacaoFerias.
     * @param {SolicitacaoFeriasDeleteArgs} args - Arguments to delete one SolicitacaoFerias.
     * @example
     * // Delete one SolicitacaoFerias
     * const SolicitacaoFerias = await prisma.solicitacaoFerias.delete({
     *   where: {
     *     // ... filter to delete one SolicitacaoFerias
     *   }
     * })
     * 
     */
    delete<T extends SolicitacaoFeriasDeleteArgs>(args: SelectSubset<T, SolicitacaoFeriasDeleteArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SolicitacaoFerias.
     * @param {SolicitacaoFeriasUpdateArgs} args - Arguments to update one SolicitacaoFerias.
     * @example
     * // Update one SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SolicitacaoFeriasUpdateArgs>(args: SelectSubset<T, SolicitacaoFeriasUpdateArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SolicitacaoFerias.
     * @param {SolicitacaoFeriasDeleteManyArgs} args - Arguments to filter SolicitacaoFerias to delete.
     * @example
     * // Delete a few SolicitacaoFerias
     * const { count } = await prisma.solicitacaoFerias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SolicitacaoFeriasDeleteManyArgs>(args?: SelectSubset<T, SolicitacaoFeriasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SolicitacaoFerias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SolicitacaoFeriasUpdateManyArgs>(args: SelectSubset<T, SolicitacaoFeriasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SolicitacaoFerias.
     * @param {SolicitacaoFeriasUpsertArgs} args - Arguments to update or create a SolicitacaoFerias.
     * @example
     * // Update or create a SolicitacaoFerias
     * const solicitacaoFerias = await prisma.solicitacaoFerias.upsert({
     *   create: {
     *     // ... data to create a SolicitacaoFerias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SolicitacaoFerias we want to update
     *   }
     * })
     */
    upsert<T extends SolicitacaoFeriasUpsertArgs>(args: SelectSubset<T, SolicitacaoFeriasUpsertArgs<ExtArgs>>): Prisma__SolicitacaoFeriasClient<$Result.GetResult<Prisma.$SolicitacaoFeriasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SolicitacaoFerias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasCountArgs} args - Arguments to filter SolicitacaoFerias to count.
     * @example
     * // Count the number of SolicitacaoFerias
     * const count = await prisma.solicitacaoFerias.count({
     *   where: {
     *     // ... the filter for the SolicitacaoFerias we want to count
     *   }
     * })
    **/
    count<T extends SolicitacaoFeriasCountArgs>(
      args?: Subset<T, SolicitacaoFeriasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SolicitacaoFeriasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SolicitacaoFerias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SolicitacaoFeriasAggregateArgs>(args: Subset<T, SolicitacaoFeriasAggregateArgs>): Prisma.PrismaPromise<GetSolicitacaoFeriasAggregateType<T>>

    /**
     * Group by SolicitacaoFerias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoFeriasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SolicitacaoFeriasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SolicitacaoFeriasGroupByArgs['orderBy'] }
        : { orderBy?: SolicitacaoFeriasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SolicitacaoFeriasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitacaoFeriasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SolicitacaoFerias model
   */
  readonly fields: SolicitacaoFeriasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SolicitacaoFerias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SolicitacaoFeriasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionario<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    aprovado_por<T extends SolicitacaoFerias$aprovado_porArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoFerias$aprovado_porArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SolicitacaoFerias model
   */ 
  interface SolicitacaoFeriasFieldRefs {
    readonly id: FieldRef<"SolicitacaoFerias", 'Int'>
    readonly funcionario_id: FieldRef<"SolicitacaoFerias", 'Int'>
    readonly data_inicio: FieldRef<"SolicitacaoFerias", 'DateTime'>
    readonly data_fim: FieldRef<"SolicitacaoFerias", 'DateTime'>
    readonly dias_solicitados: FieldRef<"SolicitacaoFerias", 'Int'>
    readonly status: FieldRef<"SolicitacaoFerias", 'String'>
    readonly motivo_negacao: FieldRef<"SolicitacaoFerias", 'String'>
    readonly aprovado_por_id: FieldRef<"SolicitacaoFerias", 'Int'>
    readonly criado_em: FieldRef<"SolicitacaoFerias", 'DateTime'>
    readonly atualizado_em: FieldRef<"SolicitacaoFerias", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SolicitacaoFerias findUnique
   */
  export type SolicitacaoFeriasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoFerias to fetch.
     */
    where: SolicitacaoFeriasWhereUniqueInput
  }

  /**
   * SolicitacaoFerias findUniqueOrThrow
   */
  export type SolicitacaoFeriasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoFerias to fetch.
     */
    where: SolicitacaoFeriasWhereUniqueInput
  }

  /**
   * SolicitacaoFerias findFirst
   */
  export type SolicitacaoFeriasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoFerias to fetch.
     */
    where?: SolicitacaoFeriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoFerias to fetch.
     */
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitacaoFerias.
     */
    cursor?: SolicitacaoFeriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoFerias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoFerias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitacaoFerias.
     */
    distinct?: SolicitacaoFeriasScalarFieldEnum | SolicitacaoFeriasScalarFieldEnum[]
  }

  /**
   * SolicitacaoFerias findFirstOrThrow
   */
  export type SolicitacaoFeriasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoFerias to fetch.
     */
    where?: SolicitacaoFeriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoFerias to fetch.
     */
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitacaoFerias.
     */
    cursor?: SolicitacaoFeriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoFerias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoFerias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitacaoFerias.
     */
    distinct?: SolicitacaoFeriasScalarFieldEnum | SolicitacaoFeriasScalarFieldEnum[]
  }

  /**
   * SolicitacaoFerias findMany
   */
  export type SolicitacaoFeriasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoFerias to fetch.
     */
    where?: SolicitacaoFeriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoFerias to fetch.
     */
    orderBy?: SolicitacaoFeriasOrderByWithRelationInput | SolicitacaoFeriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SolicitacaoFerias.
     */
    cursor?: SolicitacaoFeriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoFerias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoFerias.
     */
    skip?: number
    distinct?: SolicitacaoFeriasScalarFieldEnum | SolicitacaoFeriasScalarFieldEnum[]
  }

  /**
   * SolicitacaoFerias create
   */
  export type SolicitacaoFeriasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * The data needed to create a SolicitacaoFerias.
     */
    data: XOR<SolicitacaoFeriasCreateInput, SolicitacaoFeriasUncheckedCreateInput>
  }

  /**
   * SolicitacaoFerias createMany
   */
  export type SolicitacaoFeriasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SolicitacaoFerias.
     */
    data: SolicitacaoFeriasCreateManyInput | SolicitacaoFeriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SolicitacaoFerias createManyAndReturn
   */
  export type SolicitacaoFeriasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SolicitacaoFerias.
     */
    data: SolicitacaoFeriasCreateManyInput | SolicitacaoFeriasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SolicitacaoFerias update
   */
  export type SolicitacaoFeriasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * The data needed to update a SolicitacaoFerias.
     */
    data: XOR<SolicitacaoFeriasUpdateInput, SolicitacaoFeriasUncheckedUpdateInput>
    /**
     * Choose, which SolicitacaoFerias to update.
     */
    where: SolicitacaoFeriasWhereUniqueInput
  }

  /**
   * SolicitacaoFerias updateMany
   */
  export type SolicitacaoFeriasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SolicitacaoFerias.
     */
    data: XOR<SolicitacaoFeriasUpdateManyMutationInput, SolicitacaoFeriasUncheckedUpdateManyInput>
    /**
     * Filter which SolicitacaoFerias to update
     */
    where?: SolicitacaoFeriasWhereInput
  }

  /**
   * SolicitacaoFerias upsert
   */
  export type SolicitacaoFeriasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * The filter to search for the SolicitacaoFerias to update in case it exists.
     */
    where: SolicitacaoFeriasWhereUniqueInput
    /**
     * In case the SolicitacaoFerias found by the `where` argument doesn't exist, create a new SolicitacaoFerias with this data.
     */
    create: XOR<SolicitacaoFeriasCreateInput, SolicitacaoFeriasUncheckedCreateInput>
    /**
     * In case the SolicitacaoFerias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SolicitacaoFeriasUpdateInput, SolicitacaoFeriasUncheckedUpdateInput>
  }

  /**
   * SolicitacaoFerias delete
   */
  export type SolicitacaoFeriasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
    /**
     * Filter which SolicitacaoFerias to delete.
     */
    where: SolicitacaoFeriasWhereUniqueInput
  }

  /**
   * SolicitacaoFerias deleteMany
   */
  export type SolicitacaoFeriasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitacaoFerias to delete
     */
    where?: SolicitacaoFeriasWhereInput
  }

  /**
   * SolicitacaoFerias.aprovado_por
   */
  export type SolicitacaoFerias$aprovado_porArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Funcionario
     */
    select?: FuncionarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioInclude<ExtArgs> | null
    where?: FuncionarioWhereInput
  }

  /**
   * SolicitacaoFerias without action
   */
  export type SolicitacaoFeriasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoFerias
     */
    select?: SolicitacaoFeriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoFeriasInclude<ExtArgs> | null
  }


  /**
   * Model Salario
   */

  export type AggregateSalario = {
    _count: SalarioCountAggregateOutputType | null
    _avg: SalarioAvgAggregateOutputType | null
    _sum: SalarioSumAggregateOutputType | null
    _min: SalarioMinAggregateOutputType | null
    _max: SalarioMaxAggregateOutputType | null
  }

  export type SalarioAvgAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_base: Decimal | null
  }

  export type SalarioSumAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_base: Decimal | null
  }

  export type SalarioMinAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_base: Decimal | null
    data_inicio: Date | null
    data_fim: Date | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type SalarioMaxAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_base: Decimal | null
    data_inicio: Date | null
    data_fim: Date | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type SalarioCountAggregateOutputType = {
    id: number
    funcionario_id: number
    salario_base: number
    data_inicio: number
    data_fim: number
    ativo: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type SalarioAvgAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_base?: true
  }

  export type SalarioSumAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_base?: true
  }

  export type SalarioMinAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_base?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type SalarioMaxAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_base?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type SalarioCountAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_base?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type SalarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Salario to aggregate.
     */
    where?: SalarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Salarios to fetch.
     */
    orderBy?: SalarioOrderByWithRelationInput | SalarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Salarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Salarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Salarios
    **/
    _count?: true | SalarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalarioMaxAggregateInputType
  }

  export type GetSalarioAggregateType<T extends SalarioAggregateArgs> = {
        [P in keyof T & keyof AggregateSalario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalario[P]>
      : GetScalarType<T[P], AggregateSalario[P]>
  }




  export type SalarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalarioWhereInput
    orderBy?: SalarioOrderByWithAggregationInput | SalarioOrderByWithAggregationInput[]
    by: SalarioScalarFieldEnum[] | SalarioScalarFieldEnum
    having?: SalarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalarioCountAggregateInputType | true
    _avg?: SalarioAvgAggregateInputType
    _sum?: SalarioSumAggregateInputType
    _min?: SalarioMinAggregateInputType
    _max?: SalarioMaxAggregateInputType
  }

  export type SalarioGroupByOutputType = {
    id: number
    funcionario_id: number
    salario_base: Decimal
    data_inicio: Date
    data_fim: Date | null
    ativo: boolean
    criado_em: Date
    atualizado_em: Date
    _count: SalarioCountAggregateOutputType | null
    _avg: SalarioAvgAggregateOutputType | null
    _sum: SalarioSumAggregateOutputType | null
    _min: SalarioMinAggregateOutputType | null
    _max: SalarioMaxAggregateOutputType | null
  }

  type GetSalarioGroupByPayload<T extends SalarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalarioGroupByOutputType[P]>
            : GetScalarType<T[P], SalarioGroupByOutputType[P]>
        }
      >
    >


  export type SalarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    salario_base?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    holerites?: boolean | Salario$holeritesArgs<ExtArgs>
    _count?: boolean | SalarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salario"]>

  export type SalarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    salario_base?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salario"]>

  export type SalarioSelectScalar = {
    id?: boolean
    funcionario_id?: boolean
    salario_base?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type SalarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    holerites?: boolean | Salario$holeritesArgs<ExtArgs>
    _count?: boolean | SalarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SalarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
  }

  export type $SalarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Salario"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>
      holerites: Prisma.$HoleritePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      funcionario_id: number
      salario_base: Prisma.Decimal
      data_inicio: Date
      data_fim: Date | null
      ativo: boolean
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["salario"]>
    composites: {}
  }

  type SalarioGetPayload<S extends boolean | null | undefined | SalarioDefaultArgs> = $Result.GetResult<Prisma.$SalarioPayload, S>

  type SalarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SalarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SalarioCountAggregateInputType | true
    }

  export interface SalarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Salario'], meta: { name: 'Salario' } }
    /**
     * Find zero or one Salario that matches the filter.
     * @param {SalarioFindUniqueArgs} args - Arguments to find a Salario
     * @example
     * // Get one Salario
     * const salario = await prisma.salario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalarioFindUniqueArgs>(args: SelectSubset<T, SalarioFindUniqueArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Salario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SalarioFindUniqueOrThrowArgs} args - Arguments to find a Salario
     * @example
     * // Get one Salario
     * const salario = await prisma.salario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalarioFindUniqueOrThrowArgs>(args: SelectSubset<T, SalarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Salario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioFindFirstArgs} args - Arguments to find a Salario
     * @example
     * // Get one Salario
     * const salario = await prisma.salario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalarioFindFirstArgs>(args?: SelectSubset<T, SalarioFindFirstArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Salario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioFindFirstOrThrowArgs} args - Arguments to find a Salario
     * @example
     * // Get one Salario
     * const salario = await prisma.salario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalarioFindFirstOrThrowArgs>(args?: SelectSubset<T, SalarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Salarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salarios
     * const salarios = await prisma.salario.findMany()
     * 
     * // Get first 10 Salarios
     * const salarios = await prisma.salario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salarioWithIdOnly = await prisma.salario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalarioFindManyArgs>(args?: SelectSubset<T, SalarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Salario.
     * @param {SalarioCreateArgs} args - Arguments to create a Salario.
     * @example
     * // Create one Salario
     * const Salario = await prisma.salario.create({
     *   data: {
     *     // ... data to create a Salario
     *   }
     * })
     * 
     */
    create<T extends SalarioCreateArgs>(args: SelectSubset<T, SalarioCreateArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Salarios.
     * @param {SalarioCreateManyArgs} args - Arguments to create many Salarios.
     * @example
     * // Create many Salarios
     * const salario = await prisma.salario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalarioCreateManyArgs>(args?: SelectSubset<T, SalarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Salarios and returns the data saved in the database.
     * @param {SalarioCreateManyAndReturnArgs} args - Arguments to create many Salarios.
     * @example
     * // Create many Salarios
     * const salario = await prisma.salario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Salarios and only return the `id`
     * const salarioWithIdOnly = await prisma.salario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SalarioCreateManyAndReturnArgs>(args?: SelectSubset<T, SalarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Salario.
     * @param {SalarioDeleteArgs} args - Arguments to delete one Salario.
     * @example
     * // Delete one Salario
     * const Salario = await prisma.salario.delete({
     *   where: {
     *     // ... filter to delete one Salario
     *   }
     * })
     * 
     */
    delete<T extends SalarioDeleteArgs>(args: SelectSubset<T, SalarioDeleteArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Salario.
     * @param {SalarioUpdateArgs} args - Arguments to update one Salario.
     * @example
     * // Update one Salario
     * const salario = await prisma.salario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalarioUpdateArgs>(args: SelectSubset<T, SalarioUpdateArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Salarios.
     * @param {SalarioDeleteManyArgs} args - Arguments to filter Salarios to delete.
     * @example
     * // Delete a few Salarios
     * const { count } = await prisma.salario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalarioDeleteManyArgs>(args?: SelectSubset<T, SalarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salarios
     * const salario = await prisma.salario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalarioUpdateManyArgs>(args: SelectSubset<T, SalarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Salario.
     * @param {SalarioUpsertArgs} args - Arguments to update or create a Salario.
     * @example
     * // Update or create a Salario
     * const salario = await prisma.salario.upsert({
     *   create: {
     *     // ... data to create a Salario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Salario we want to update
     *   }
     * })
     */
    upsert<T extends SalarioUpsertArgs>(args: SelectSubset<T, SalarioUpsertArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Salarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioCountArgs} args - Arguments to filter Salarios to count.
     * @example
     * // Count the number of Salarios
     * const count = await prisma.salario.count({
     *   where: {
     *     // ... the filter for the Salarios we want to count
     *   }
     * })
    **/
    count<T extends SalarioCountArgs>(
      args?: Subset<T, SalarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Salario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalarioAggregateArgs>(args: Subset<T, SalarioAggregateArgs>): Prisma.PrismaPromise<GetSalarioAggregateType<T>>

    /**
     * Group by Salario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalarioGroupByArgs['orderBy'] }
        : { orderBy?: SalarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Salario model
   */
  readonly fields: SalarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Salario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionario<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    holerites<T extends Salario$holeritesArgs<ExtArgs> = {}>(args?: Subset<T, Salario$holeritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Salario model
   */ 
  interface SalarioFieldRefs {
    readonly id: FieldRef<"Salario", 'Int'>
    readonly funcionario_id: FieldRef<"Salario", 'Int'>
    readonly salario_base: FieldRef<"Salario", 'Decimal'>
    readonly data_inicio: FieldRef<"Salario", 'DateTime'>
    readonly data_fim: FieldRef<"Salario", 'DateTime'>
    readonly ativo: FieldRef<"Salario", 'Boolean'>
    readonly criado_em: FieldRef<"Salario", 'DateTime'>
    readonly atualizado_em: FieldRef<"Salario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Salario findUnique
   */
  export type SalarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter, which Salario to fetch.
     */
    where: SalarioWhereUniqueInput
  }

  /**
   * Salario findUniqueOrThrow
   */
  export type SalarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter, which Salario to fetch.
     */
    where: SalarioWhereUniqueInput
  }

  /**
   * Salario findFirst
   */
  export type SalarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter, which Salario to fetch.
     */
    where?: SalarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Salarios to fetch.
     */
    orderBy?: SalarioOrderByWithRelationInput | SalarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Salarios.
     */
    cursor?: SalarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Salarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Salarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Salarios.
     */
    distinct?: SalarioScalarFieldEnum | SalarioScalarFieldEnum[]
  }

  /**
   * Salario findFirstOrThrow
   */
  export type SalarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter, which Salario to fetch.
     */
    where?: SalarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Salarios to fetch.
     */
    orderBy?: SalarioOrderByWithRelationInput | SalarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Salarios.
     */
    cursor?: SalarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Salarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Salarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Salarios.
     */
    distinct?: SalarioScalarFieldEnum | SalarioScalarFieldEnum[]
  }

  /**
   * Salario findMany
   */
  export type SalarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter, which Salarios to fetch.
     */
    where?: SalarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Salarios to fetch.
     */
    orderBy?: SalarioOrderByWithRelationInput | SalarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Salarios.
     */
    cursor?: SalarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Salarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Salarios.
     */
    skip?: number
    distinct?: SalarioScalarFieldEnum | SalarioScalarFieldEnum[]
  }

  /**
   * Salario create
   */
  export type SalarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Salario.
     */
    data: XOR<SalarioCreateInput, SalarioUncheckedCreateInput>
  }

  /**
   * Salario createMany
   */
  export type SalarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Salarios.
     */
    data: SalarioCreateManyInput | SalarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Salario createManyAndReturn
   */
  export type SalarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Salarios.
     */
    data: SalarioCreateManyInput | SalarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Salario update
   */
  export type SalarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Salario.
     */
    data: XOR<SalarioUpdateInput, SalarioUncheckedUpdateInput>
    /**
     * Choose, which Salario to update.
     */
    where: SalarioWhereUniqueInput
  }

  /**
   * Salario updateMany
   */
  export type SalarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Salarios.
     */
    data: XOR<SalarioUpdateManyMutationInput, SalarioUncheckedUpdateManyInput>
    /**
     * Filter which Salarios to update
     */
    where?: SalarioWhereInput
  }

  /**
   * Salario upsert
   */
  export type SalarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Salario to update in case it exists.
     */
    where: SalarioWhereUniqueInput
    /**
     * In case the Salario found by the `where` argument doesn't exist, create a new Salario with this data.
     */
    create: XOR<SalarioCreateInput, SalarioUncheckedCreateInput>
    /**
     * In case the Salario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalarioUpdateInput, SalarioUncheckedUpdateInput>
  }

  /**
   * Salario delete
   */
  export type SalarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
    /**
     * Filter which Salario to delete.
     */
    where: SalarioWhereUniqueInput
  }

  /**
   * Salario deleteMany
   */
  export type SalarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Salarios to delete
     */
    where?: SalarioWhereInput
  }

  /**
   * Salario.holerites
   */
  export type Salario$holeritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    where?: HoleriteWhereInput
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    cursor?: HoleriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HoleriteScalarFieldEnum | HoleriteScalarFieldEnum[]
  }

  /**
   * Salario without action
   */
  export type SalarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Salario
     */
    select?: SalarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalarioInclude<ExtArgs> | null
  }


  /**
   * Model Holerite
   */

  export type AggregateHolerite = {
    _count: HoleriteCountAggregateOutputType | null
    _avg: HoleriteAvgAggregateOutputType | null
    _sum: HoleriteSumAggregateOutputType | null
    _min: HoleriteMinAggregateOutputType | null
    _max: HoleriteMaxAggregateOutputType | null
  }

  export type HoleriteAvgAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_id: number | null
    mes: number | null
    ano: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    valor_horas_extras: Decimal | null
    descontos: Decimal | null
    beneficios: Decimal | null
    salario_liquido: Decimal | null
  }

  export type HoleriteSumAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_id: number | null
    mes: number | null
    ano: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    valor_horas_extras: Decimal | null
    descontos: Decimal | null
    beneficios: Decimal | null
    salario_liquido: Decimal | null
  }

  export type HoleriteMinAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_id: number | null
    mes: number | null
    ano: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    valor_horas_extras: Decimal | null
    descontos: Decimal | null
    beneficios: Decimal | null
    salario_liquido: Decimal | null
    data_pagamento: Date | null
    arquivo: Buffer | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type HoleriteMaxAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    salario_id: number | null
    mes: number | null
    ano: number | null
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    valor_horas_extras: Decimal | null
    descontos: Decimal | null
    beneficios: Decimal | null
    salario_liquido: Decimal | null
    data_pagamento: Date | null
    arquivo: Buffer | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type HoleriteCountAggregateOutputType = {
    id: number
    funcionario_id: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos: number
    horas_extras_minutos: number
    valor_horas_extras: number
    descontos: number
    beneficios: number
    salario_liquido: number
    data_pagamento: number
    arquivo: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type HoleriteAvgAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_id?: true
    mes?: true
    ano?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    valor_horas_extras?: true
    descontos?: true
    beneficios?: true
    salario_liquido?: true
  }

  export type HoleriteSumAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_id?: true
    mes?: true
    ano?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    valor_horas_extras?: true
    descontos?: true
    beneficios?: true
    salario_liquido?: true
  }

  export type HoleriteMinAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_id?: true
    mes?: true
    ano?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    valor_horas_extras?: true
    descontos?: true
    beneficios?: true
    salario_liquido?: true
    data_pagamento?: true
    arquivo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type HoleriteMaxAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_id?: true
    mes?: true
    ano?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    valor_horas_extras?: true
    descontos?: true
    beneficios?: true
    salario_liquido?: true
    data_pagamento?: true
    arquivo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type HoleriteCountAggregateInputType = {
    id?: true
    funcionario_id?: true
    salario_id?: true
    mes?: true
    ano?: true
    horas_trabalhadas_minutos?: true
    horas_extras_minutos?: true
    valor_horas_extras?: true
    descontos?: true
    beneficios?: true
    salario_liquido?: true
    data_pagamento?: true
    arquivo?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type HoleriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Holerite to aggregate.
     */
    where?: HoleriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holerites to fetch.
     */
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HoleriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holerites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holerites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Holerites
    **/
    _count?: true | HoleriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HoleriteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HoleriteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HoleriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HoleriteMaxAggregateInputType
  }

  export type GetHoleriteAggregateType<T extends HoleriteAggregateArgs> = {
        [P in keyof T & keyof AggregateHolerite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHolerite[P]>
      : GetScalarType<T[P], AggregateHolerite[P]>
  }




  export type HoleriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HoleriteWhereInput
    orderBy?: HoleriteOrderByWithAggregationInput | HoleriteOrderByWithAggregationInput[]
    by: HoleriteScalarFieldEnum[] | HoleriteScalarFieldEnum
    having?: HoleriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HoleriteCountAggregateInputType | true
    _avg?: HoleriteAvgAggregateInputType
    _sum?: HoleriteSumAggregateInputType
    _min?: HoleriteMinAggregateInputType
    _max?: HoleriteMaxAggregateInputType
  }

  export type HoleriteGroupByOutputType = {
    id: number
    funcionario_id: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos: number | null
    horas_extras_minutos: number | null
    valor_horas_extras: Decimal | null
    descontos: Decimal | null
    beneficios: Decimal | null
    salario_liquido: Decimal
    data_pagamento: Date
    arquivo: Buffer | null
    criado_em: Date
    atualizado_em: Date
    _count: HoleriteCountAggregateOutputType | null
    _avg: HoleriteAvgAggregateOutputType | null
    _sum: HoleriteSumAggregateOutputType | null
    _min: HoleriteMinAggregateOutputType | null
    _max: HoleriteMaxAggregateOutputType | null
  }

  type GetHoleriteGroupByPayload<T extends HoleriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HoleriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HoleriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HoleriteGroupByOutputType[P]>
            : GetScalarType<T[P], HoleriteGroupByOutputType[P]>
        }
      >
    >


  export type HoleriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    salario_id?: boolean
    mes?: boolean
    ano?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    valor_horas_extras?: boolean
    descontos?: boolean
    beneficios?: boolean
    salario_liquido?: boolean
    data_pagamento?: boolean
    arquivo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    salario?: boolean | SalarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["holerite"]>

  export type HoleriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    salario_id?: boolean
    mes?: boolean
    ano?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    valor_horas_extras?: boolean
    descontos?: boolean
    beneficios?: boolean
    salario_liquido?: boolean
    data_pagamento?: boolean
    arquivo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    salario?: boolean | SalarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["holerite"]>

  export type HoleriteSelectScalar = {
    id?: boolean
    funcionario_id?: boolean
    salario_id?: boolean
    mes?: boolean
    ano?: boolean
    horas_trabalhadas_minutos?: boolean
    horas_extras_minutos?: boolean
    valor_horas_extras?: boolean
    descontos?: boolean
    beneficios?: boolean
    salario_liquido?: boolean
    data_pagamento?: boolean
    arquivo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type HoleriteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    salario?: boolean | SalarioDefaultArgs<ExtArgs>
  }
  export type HoleriteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    salario?: boolean | SalarioDefaultArgs<ExtArgs>
  }

  export type $HoleritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Holerite"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>
      salario: Prisma.$SalarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      funcionario_id: number
      salario_id: number
      mes: number
      ano: number
      horas_trabalhadas_minutos: number | null
      horas_extras_minutos: number | null
      valor_horas_extras: Prisma.Decimal | null
      descontos: Prisma.Decimal | null
      beneficios: Prisma.Decimal | null
      salario_liquido: Prisma.Decimal
      data_pagamento: Date
      arquivo: Buffer | null
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["holerite"]>
    composites: {}
  }

  type HoleriteGetPayload<S extends boolean | null | undefined | HoleriteDefaultArgs> = $Result.GetResult<Prisma.$HoleritePayload, S>

  type HoleriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HoleriteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HoleriteCountAggregateInputType | true
    }

  export interface HoleriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Holerite'], meta: { name: 'Holerite' } }
    /**
     * Find zero or one Holerite that matches the filter.
     * @param {HoleriteFindUniqueArgs} args - Arguments to find a Holerite
     * @example
     * // Get one Holerite
     * const holerite = await prisma.holerite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HoleriteFindUniqueArgs>(args: SelectSubset<T, HoleriteFindUniqueArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Holerite that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HoleriteFindUniqueOrThrowArgs} args - Arguments to find a Holerite
     * @example
     * // Get one Holerite
     * const holerite = await prisma.holerite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HoleriteFindUniqueOrThrowArgs>(args: SelectSubset<T, HoleriteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Holerite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteFindFirstArgs} args - Arguments to find a Holerite
     * @example
     * // Get one Holerite
     * const holerite = await prisma.holerite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HoleriteFindFirstArgs>(args?: SelectSubset<T, HoleriteFindFirstArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Holerite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteFindFirstOrThrowArgs} args - Arguments to find a Holerite
     * @example
     * // Get one Holerite
     * const holerite = await prisma.holerite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HoleriteFindFirstOrThrowArgs>(args?: SelectSubset<T, HoleriteFindFirstOrThrowArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Holerites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Holerites
     * const holerites = await prisma.holerite.findMany()
     * 
     * // Get first 10 Holerites
     * const holerites = await prisma.holerite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const holeriteWithIdOnly = await prisma.holerite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HoleriteFindManyArgs>(args?: SelectSubset<T, HoleriteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Holerite.
     * @param {HoleriteCreateArgs} args - Arguments to create a Holerite.
     * @example
     * // Create one Holerite
     * const Holerite = await prisma.holerite.create({
     *   data: {
     *     // ... data to create a Holerite
     *   }
     * })
     * 
     */
    create<T extends HoleriteCreateArgs>(args: SelectSubset<T, HoleriteCreateArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Holerites.
     * @param {HoleriteCreateManyArgs} args - Arguments to create many Holerites.
     * @example
     * // Create many Holerites
     * const holerite = await prisma.holerite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HoleriteCreateManyArgs>(args?: SelectSubset<T, HoleriteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Holerites and returns the data saved in the database.
     * @param {HoleriteCreateManyAndReturnArgs} args - Arguments to create many Holerites.
     * @example
     * // Create many Holerites
     * const holerite = await prisma.holerite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Holerites and only return the `id`
     * const holeriteWithIdOnly = await prisma.holerite.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HoleriteCreateManyAndReturnArgs>(args?: SelectSubset<T, HoleriteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Holerite.
     * @param {HoleriteDeleteArgs} args - Arguments to delete one Holerite.
     * @example
     * // Delete one Holerite
     * const Holerite = await prisma.holerite.delete({
     *   where: {
     *     // ... filter to delete one Holerite
     *   }
     * })
     * 
     */
    delete<T extends HoleriteDeleteArgs>(args: SelectSubset<T, HoleriteDeleteArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Holerite.
     * @param {HoleriteUpdateArgs} args - Arguments to update one Holerite.
     * @example
     * // Update one Holerite
     * const holerite = await prisma.holerite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HoleriteUpdateArgs>(args: SelectSubset<T, HoleriteUpdateArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Holerites.
     * @param {HoleriteDeleteManyArgs} args - Arguments to filter Holerites to delete.
     * @example
     * // Delete a few Holerites
     * const { count } = await prisma.holerite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HoleriteDeleteManyArgs>(args?: SelectSubset<T, HoleriteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Holerites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Holerites
     * const holerite = await prisma.holerite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HoleriteUpdateManyArgs>(args: SelectSubset<T, HoleriteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Holerite.
     * @param {HoleriteUpsertArgs} args - Arguments to update or create a Holerite.
     * @example
     * // Update or create a Holerite
     * const holerite = await prisma.holerite.upsert({
     *   create: {
     *     // ... data to create a Holerite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Holerite we want to update
     *   }
     * })
     */
    upsert<T extends HoleriteUpsertArgs>(args: SelectSubset<T, HoleriteUpsertArgs<ExtArgs>>): Prisma__HoleriteClient<$Result.GetResult<Prisma.$HoleritePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Holerites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteCountArgs} args - Arguments to filter Holerites to count.
     * @example
     * // Count the number of Holerites
     * const count = await prisma.holerite.count({
     *   where: {
     *     // ... the filter for the Holerites we want to count
     *   }
     * })
    **/
    count<T extends HoleriteCountArgs>(
      args?: Subset<T, HoleriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HoleriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Holerite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HoleriteAggregateArgs>(args: Subset<T, HoleriteAggregateArgs>): Prisma.PrismaPromise<GetHoleriteAggregateType<T>>

    /**
     * Group by Holerite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HoleriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HoleriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HoleriteGroupByArgs['orderBy'] }
        : { orderBy?: HoleriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HoleriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHoleriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Holerite model
   */
  readonly fields: HoleriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Holerite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HoleriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionario<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    salario<T extends SalarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalarioDefaultArgs<ExtArgs>>): Prisma__SalarioClient<$Result.GetResult<Prisma.$SalarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Holerite model
   */ 
  interface HoleriteFieldRefs {
    readonly id: FieldRef<"Holerite", 'Int'>
    readonly funcionario_id: FieldRef<"Holerite", 'Int'>
    readonly salario_id: FieldRef<"Holerite", 'Int'>
    readonly mes: FieldRef<"Holerite", 'Int'>
    readonly ano: FieldRef<"Holerite", 'Int'>
    readonly horas_trabalhadas_minutos: FieldRef<"Holerite", 'Int'>
    readonly horas_extras_minutos: FieldRef<"Holerite", 'Int'>
    readonly valor_horas_extras: FieldRef<"Holerite", 'Decimal'>
    readonly descontos: FieldRef<"Holerite", 'Decimal'>
    readonly beneficios: FieldRef<"Holerite", 'Decimal'>
    readonly salario_liquido: FieldRef<"Holerite", 'Decimal'>
    readonly data_pagamento: FieldRef<"Holerite", 'DateTime'>
    readonly arquivo: FieldRef<"Holerite", 'Bytes'>
    readonly criado_em: FieldRef<"Holerite", 'DateTime'>
    readonly atualizado_em: FieldRef<"Holerite", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Holerite findUnique
   */
  export type HoleriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter, which Holerite to fetch.
     */
    where: HoleriteWhereUniqueInput
  }

  /**
   * Holerite findUniqueOrThrow
   */
  export type HoleriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter, which Holerite to fetch.
     */
    where: HoleriteWhereUniqueInput
  }

  /**
   * Holerite findFirst
   */
  export type HoleriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter, which Holerite to fetch.
     */
    where?: HoleriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holerites to fetch.
     */
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Holerites.
     */
    cursor?: HoleriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holerites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holerites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Holerites.
     */
    distinct?: HoleriteScalarFieldEnum | HoleriteScalarFieldEnum[]
  }

  /**
   * Holerite findFirstOrThrow
   */
  export type HoleriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter, which Holerite to fetch.
     */
    where?: HoleriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holerites to fetch.
     */
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Holerites.
     */
    cursor?: HoleriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holerites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holerites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Holerites.
     */
    distinct?: HoleriteScalarFieldEnum | HoleriteScalarFieldEnum[]
  }

  /**
   * Holerite findMany
   */
  export type HoleriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter, which Holerites to fetch.
     */
    where?: HoleriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Holerites to fetch.
     */
    orderBy?: HoleriteOrderByWithRelationInput | HoleriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Holerites.
     */
    cursor?: HoleriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Holerites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Holerites.
     */
    skip?: number
    distinct?: HoleriteScalarFieldEnum | HoleriteScalarFieldEnum[]
  }

  /**
   * Holerite create
   */
  export type HoleriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * The data needed to create a Holerite.
     */
    data: XOR<HoleriteCreateInput, HoleriteUncheckedCreateInput>
  }

  /**
   * Holerite createMany
   */
  export type HoleriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Holerites.
     */
    data: HoleriteCreateManyInput | HoleriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Holerite createManyAndReturn
   */
  export type HoleriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Holerites.
     */
    data: HoleriteCreateManyInput | HoleriteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Holerite update
   */
  export type HoleriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * The data needed to update a Holerite.
     */
    data: XOR<HoleriteUpdateInput, HoleriteUncheckedUpdateInput>
    /**
     * Choose, which Holerite to update.
     */
    where: HoleriteWhereUniqueInput
  }

  /**
   * Holerite updateMany
   */
  export type HoleriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Holerites.
     */
    data: XOR<HoleriteUpdateManyMutationInput, HoleriteUncheckedUpdateManyInput>
    /**
     * Filter which Holerites to update
     */
    where?: HoleriteWhereInput
  }

  /**
   * Holerite upsert
   */
  export type HoleriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * The filter to search for the Holerite to update in case it exists.
     */
    where: HoleriteWhereUniqueInput
    /**
     * In case the Holerite found by the `where` argument doesn't exist, create a new Holerite with this data.
     */
    create: XOR<HoleriteCreateInput, HoleriteUncheckedCreateInput>
    /**
     * In case the Holerite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HoleriteUpdateInput, HoleriteUncheckedUpdateInput>
  }

  /**
   * Holerite delete
   */
  export type HoleriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
    /**
     * Filter which Holerite to delete.
     */
    where: HoleriteWhereUniqueInput
  }

  /**
   * Holerite deleteMany
   */
  export type HoleriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Holerites to delete
     */
    where?: HoleriteWhereInput
  }

  /**
   * Holerite without action
   */
  export type HoleriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Holerite
     */
    select?: HoleriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HoleriteInclude<ExtArgs> | null
  }


  /**
   * Model Beneficio
   */

  export type AggregateBeneficio = {
    _count: BeneficioCountAggregateOutputType | null
    _avg: BeneficioAvgAggregateOutputType | null
    _sum: BeneficioSumAggregateOutputType | null
    _min: BeneficioMinAggregateOutputType | null
    _max: BeneficioMaxAggregateOutputType | null
  }

  export type BeneficioAvgAggregateOutputType = {
    id: number | null
    valor_padrao: Decimal | null
  }

  export type BeneficioSumAggregateOutputType = {
    id: number | null
    valor_padrao: Decimal | null
  }

  export type BeneficioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    valor_padrao: Decimal | null
    tipo: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type BeneficioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    valor_padrao: Decimal | null
    tipo: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type BeneficioCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    valor_padrao: number
    tipo: number
    ativo: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type BeneficioAvgAggregateInputType = {
    id?: true
    valor_padrao?: true
  }

  export type BeneficioSumAggregateInputType = {
    id?: true
    valor_padrao?: true
  }

  export type BeneficioMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    valor_padrao?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type BeneficioMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    valor_padrao?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type BeneficioCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    valor_padrao?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type BeneficioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficio to aggregate.
     */
    where?: BeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficios to fetch.
     */
    orderBy?: BeneficioOrderByWithRelationInput | BeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Beneficios
    **/
    _count?: true | BeneficioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BeneficioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BeneficioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BeneficioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BeneficioMaxAggregateInputType
  }

  export type GetBeneficioAggregateType<T extends BeneficioAggregateArgs> = {
        [P in keyof T & keyof AggregateBeneficio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBeneficio[P]>
      : GetScalarType<T[P], AggregateBeneficio[P]>
  }




  export type BeneficioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficioWhereInput
    orderBy?: BeneficioOrderByWithAggregationInput | BeneficioOrderByWithAggregationInput[]
    by: BeneficioScalarFieldEnum[] | BeneficioScalarFieldEnum
    having?: BeneficioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BeneficioCountAggregateInputType | true
    _avg?: BeneficioAvgAggregateInputType
    _sum?: BeneficioSumAggregateInputType
    _min?: BeneficioMinAggregateInputType
    _max?: BeneficioMaxAggregateInputType
  }

  export type BeneficioGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    valor_padrao: Decimal | null
    tipo: string
    ativo: boolean
    criado_em: Date
    atualizado_em: Date
    _count: BeneficioCountAggregateOutputType | null
    _avg: BeneficioAvgAggregateOutputType | null
    _sum: BeneficioSumAggregateOutputType | null
    _min: BeneficioMinAggregateOutputType | null
    _max: BeneficioMaxAggregateOutputType | null
  }

  type GetBeneficioGroupByPayload<T extends BeneficioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BeneficioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BeneficioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BeneficioGroupByOutputType[P]>
            : GetScalarType<T[P], BeneficioGroupByOutputType[P]>
        }
      >
    >


  export type BeneficioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    valor_padrao?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionarios?: boolean | Beneficio$funcionariosArgs<ExtArgs>
    _count?: boolean | BeneficioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["beneficio"]>

  export type BeneficioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    valor_padrao?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }, ExtArgs["result"]["beneficio"]>

  export type BeneficioSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    valor_padrao?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type BeneficioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionarios?: boolean | Beneficio$funcionariosArgs<ExtArgs>
    _count?: boolean | BeneficioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BeneficioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BeneficioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Beneficio"
    objects: {
      funcionarios: Prisma.$FuncionarioBeneficioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
      valor_padrao: Prisma.Decimal | null
      tipo: string
      ativo: boolean
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["beneficio"]>
    composites: {}
  }

  type BeneficioGetPayload<S extends boolean | null | undefined | BeneficioDefaultArgs> = $Result.GetResult<Prisma.$BeneficioPayload, S>

  type BeneficioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BeneficioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BeneficioCountAggregateInputType | true
    }

  export interface BeneficioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Beneficio'], meta: { name: 'Beneficio' } }
    /**
     * Find zero or one Beneficio that matches the filter.
     * @param {BeneficioFindUniqueArgs} args - Arguments to find a Beneficio
     * @example
     * // Get one Beneficio
     * const beneficio = await prisma.beneficio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BeneficioFindUniqueArgs>(args: SelectSubset<T, BeneficioFindUniqueArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Beneficio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BeneficioFindUniqueOrThrowArgs} args - Arguments to find a Beneficio
     * @example
     * // Get one Beneficio
     * const beneficio = await prisma.beneficio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BeneficioFindUniqueOrThrowArgs>(args: SelectSubset<T, BeneficioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Beneficio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioFindFirstArgs} args - Arguments to find a Beneficio
     * @example
     * // Get one Beneficio
     * const beneficio = await prisma.beneficio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BeneficioFindFirstArgs>(args?: SelectSubset<T, BeneficioFindFirstArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Beneficio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioFindFirstOrThrowArgs} args - Arguments to find a Beneficio
     * @example
     * // Get one Beneficio
     * const beneficio = await prisma.beneficio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BeneficioFindFirstOrThrowArgs>(args?: SelectSubset<T, BeneficioFindFirstOrThrowArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Beneficios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Beneficios
     * const beneficios = await prisma.beneficio.findMany()
     * 
     * // Get first 10 Beneficios
     * const beneficios = await prisma.beneficio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const beneficioWithIdOnly = await prisma.beneficio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BeneficioFindManyArgs>(args?: SelectSubset<T, BeneficioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Beneficio.
     * @param {BeneficioCreateArgs} args - Arguments to create a Beneficio.
     * @example
     * // Create one Beneficio
     * const Beneficio = await prisma.beneficio.create({
     *   data: {
     *     // ... data to create a Beneficio
     *   }
     * })
     * 
     */
    create<T extends BeneficioCreateArgs>(args: SelectSubset<T, BeneficioCreateArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Beneficios.
     * @param {BeneficioCreateManyArgs} args - Arguments to create many Beneficios.
     * @example
     * // Create many Beneficios
     * const beneficio = await prisma.beneficio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BeneficioCreateManyArgs>(args?: SelectSubset<T, BeneficioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Beneficios and returns the data saved in the database.
     * @param {BeneficioCreateManyAndReturnArgs} args - Arguments to create many Beneficios.
     * @example
     * // Create many Beneficios
     * const beneficio = await prisma.beneficio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Beneficios and only return the `id`
     * const beneficioWithIdOnly = await prisma.beneficio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BeneficioCreateManyAndReturnArgs>(args?: SelectSubset<T, BeneficioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Beneficio.
     * @param {BeneficioDeleteArgs} args - Arguments to delete one Beneficio.
     * @example
     * // Delete one Beneficio
     * const Beneficio = await prisma.beneficio.delete({
     *   where: {
     *     // ... filter to delete one Beneficio
     *   }
     * })
     * 
     */
    delete<T extends BeneficioDeleteArgs>(args: SelectSubset<T, BeneficioDeleteArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Beneficio.
     * @param {BeneficioUpdateArgs} args - Arguments to update one Beneficio.
     * @example
     * // Update one Beneficio
     * const beneficio = await prisma.beneficio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BeneficioUpdateArgs>(args: SelectSubset<T, BeneficioUpdateArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Beneficios.
     * @param {BeneficioDeleteManyArgs} args - Arguments to filter Beneficios to delete.
     * @example
     * // Delete a few Beneficios
     * const { count } = await prisma.beneficio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BeneficioDeleteManyArgs>(args?: SelectSubset<T, BeneficioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Beneficios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Beneficios
     * const beneficio = await prisma.beneficio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BeneficioUpdateManyArgs>(args: SelectSubset<T, BeneficioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Beneficio.
     * @param {BeneficioUpsertArgs} args - Arguments to update or create a Beneficio.
     * @example
     * // Update or create a Beneficio
     * const beneficio = await prisma.beneficio.upsert({
     *   create: {
     *     // ... data to create a Beneficio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Beneficio we want to update
     *   }
     * })
     */
    upsert<T extends BeneficioUpsertArgs>(args: SelectSubset<T, BeneficioUpsertArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Beneficios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioCountArgs} args - Arguments to filter Beneficios to count.
     * @example
     * // Count the number of Beneficios
     * const count = await prisma.beneficio.count({
     *   where: {
     *     // ... the filter for the Beneficios we want to count
     *   }
     * })
    **/
    count<T extends BeneficioCountArgs>(
      args?: Subset<T, BeneficioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BeneficioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Beneficio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BeneficioAggregateArgs>(args: Subset<T, BeneficioAggregateArgs>): Prisma.PrismaPromise<GetBeneficioAggregateType<T>>

    /**
     * Group by Beneficio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BeneficioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BeneficioGroupByArgs['orderBy'] }
        : { orderBy?: BeneficioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BeneficioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBeneficioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Beneficio model
   */
  readonly fields: BeneficioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Beneficio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BeneficioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionarios<T extends Beneficio$funcionariosArgs<ExtArgs> = {}>(args?: Subset<T, Beneficio$funcionariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Beneficio model
   */ 
  interface BeneficioFieldRefs {
    readonly id: FieldRef<"Beneficio", 'Int'>
    readonly nome: FieldRef<"Beneficio", 'String'>
    readonly descricao: FieldRef<"Beneficio", 'String'>
    readonly valor_padrao: FieldRef<"Beneficio", 'Decimal'>
    readonly tipo: FieldRef<"Beneficio", 'String'>
    readonly ativo: FieldRef<"Beneficio", 'Boolean'>
    readonly criado_em: FieldRef<"Beneficio", 'DateTime'>
    readonly atualizado_em: FieldRef<"Beneficio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Beneficio findUnique
   */
  export type BeneficioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficio to fetch.
     */
    where: BeneficioWhereUniqueInput
  }

  /**
   * Beneficio findUniqueOrThrow
   */
  export type BeneficioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficio to fetch.
     */
    where: BeneficioWhereUniqueInput
  }

  /**
   * Beneficio findFirst
   */
  export type BeneficioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficio to fetch.
     */
    where?: BeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficios to fetch.
     */
    orderBy?: BeneficioOrderByWithRelationInput | BeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficios.
     */
    cursor?: BeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficios.
     */
    distinct?: BeneficioScalarFieldEnum | BeneficioScalarFieldEnum[]
  }

  /**
   * Beneficio findFirstOrThrow
   */
  export type BeneficioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficio to fetch.
     */
    where?: BeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficios to fetch.
     */
    orderBy?: BeneficioOrderByWithRelationInput | BeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficios.
     */
    cursor?: BeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficios.
     */
    distinct?: BeneficioScalarFieldEnum | BeneficioScalarFieldEnum[]
  }

  /**
   * Beneficio findMany
   */
  export type BeneficioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter, which Beneficios to fetch.
     */
    where?: BeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficios to fetch.
     */
    orderBy?: BeneficioOrderByWithRelationInput | BeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Beneficios.
     */
    cursor?: BeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficios.
     */
    skip?: number
    distinct?: BeneficioScalarFieldEnum | BeneficioScalarFieldEnum[]
  }

  /**
   * Beneficio create
   */
  export type BeneficioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * The data needed to create a Beneficio.
     */
    data: XOR<BeneficioCreateInput, BeneficioUncheckedCreateInput>
  }

  /**
   * Beneficio createMany
   */
  export type BeneficioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Beneficios.
     */
    data: BeneficioCreateManyInput | BeneficioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Beneficio createManyAndReturn
   */
  export type BeneficioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Beneficios.
     */
    data: BeneficioCreateManyInput | BeneficioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Beneficio update
   */
  export type BeneficioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * The data needed to update a Beneficio.
     */
    data: XOR<BeneficioUpdateInput, BeneficioUncheckedUpdateInput>
    /**
     * Choose, which Beneficio to update.
     */
    where: BeneficioWhereUniqueInput
  }

  /**
   * Beneficio updateMany
   */
  export type BeneficioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Beneficios.
     */
    data: XOR<BeneficioUpdateManyMutationInput, BeneficioUncheckedUpdateManyInput>
    /**
     * Filter which Beneficios to update
     */
    where?: BeneficioWhereInput
  }

  /**
   * Beneficio upsert
   */
  export type BeneficioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * The filter to search for the Beneficio to update in case it exists.
     */
    where: BeneficioWhereUniqueInput
    /**
     * In case the Beneficio found by the `where` argument doesn't exist, create a new Beneficio with this data.
     */
    create: XOR<BeneficioCreateInput, BeneficioUncheckedCreateInput>
    /**
     * In case the Beneficio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BeneficioUpdateInput, BeneficioUncheckedUpdateInput>
  }

  /**
   * Beneficio delete
   */
  export type BeneficioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
    /**
     * Filter which Beneficio to delete.
     */
    where: BeneficioWhereUniqueInput
  }

  /**
   * Beneficio deleteMany
   */
  export type BeneficioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficios to delete
     */
    where?: BeneficioWhereInput
  }

  /**
   * Beneficio.funcionarios
   */
  export type Beneficio$funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    where?: FuncionarioBeneficioWhereInput
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    cursor?: FuncionarioBeneficioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FuncionarioBeneficioScalarFieldEnum | FuncionarioBeneficioScalarFieldEnum[]
  }

  /**
   * Beneficio without action
   */
  export type BeneficioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficio
     */
    select?: BeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficioInclude<ExtArgs> | null
  }


  /**
   * Model FuncionarioBeneficio
   */

  export type AggregateFuncionarioBeneficio = {
    _count: FuncionarioBeneficioCountAggregateOutputType | null
    _avg: FuncionarioBeneficioAvgAggregateOutputType | null
    _sum: FuncionarioBeneficioSumAggregateOutputType | null
    _min: FuncionarioBeneficioMinAggregateOutputType | null
    _max: FuncionarioBeneficioMaxAggregateOutputType | null
  }

  export type FuncionarioBeneficioAvgAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    beneficio_id: number | null
    valor: Decimal | null
  }

  export type FuncionarioBeneficioSumAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    beneficio_id: number | null
    valor: Decimal | null
  }

  export type FuncionarioBeneficioMinAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    beneficio_id: number | null
    valor: Decimal | null
    data_inicio: Date | null
    data_fim: Date | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type FuncionarioBeneficioMaxAggregateOutputType = {
    id: number | null
    funcionario_id: number | null
    beneficio_id: number | null
    valor: Decimal | null
    data_inicio: Date | null
    data_fim: Date | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
  }

  export type FuncionarioBeneficioCountAggregateOutputType = {
    id: number
    funcionario_id: number
    beneficio_id: number
    valor: number
    data_inicio: number
    data_fim: number
    ativo: number
    criado_em: number
    atualizado_em: number
    _all: number
  }


  export type FuncionarioBeneficioAvgAggregateInputType = {
    id?: true
    funcionario_id?: true
    beneficio_id?: true
    valor?: true
  }

  export type FuncionarioBeneficioSumAggregateInputType = {
    id?: true
    funcionario_id?: true
    beneficio_id?: true
    valor?: true
  }

  export type FuncionarioBeneficioMinAggregateInputType = {
    id?: true
    funcionario_id?: true
    beneficio_id?: true
    valor?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type FuncionarioBeneficioMaxAggregateInputType = {
    id?: true
    funcionario_id?: true
    beneficio_id?: true
    valor?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
  }

  export type FuncionarioBeneficioCountAggregateInputType = {
    id?: true
    funcionario_id?: true
    beneficio_id?: true
    valor?: true
    data_inicio?: true
    data_fim?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    _all?: true
  }

  export type FuncionarioBeneficioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FuncionarioBeneficio to aggregate.
     */
    where?: FuncionarioBeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioBeneficios to fetch.
     */
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FuncionarioBeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioBeneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioBeneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FuncionarioBeneficios
    **/
    _count?: true | FuncionarioBeneficioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FuncionarioBeneficioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FuncionarioBeneficioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FuncionarioBeneficioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FuncionarioBeneficioMaxAggregateInputType
  }

  export type GetFuncionarioBeneficioAggregateType<T extends FuncionarioBeneficioAggregateArgs> = {
        [P in keyof T & keyof AggregateFuncionarioBeneficio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFuncionarioBeneficio[P]>
      : GetScalarType<T[P], AggregateFuncionarioBeneficio[P]>
  }




  export type FuncionarioBeneficioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FuncionarioBeneficioWhereInput
    orderBy?: FuncionarioBeneficioOrderByWithAggregationInput | FuncionarioBeneficioOrderByWithAggregationInput[]
    by: FuncionarioBeneficioScalarFieldEnum[] | FuncionarioBeneficioScalarFieldEnum
    having?: FuncionarioBeneficioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FuncionarioBeneficioCountAggregateInputType | true
    _avg?: FuncionarioBeneficioAvgAggregateInputType
    _sum?: FuncionarioBeneficioSumAggregateInputType
    _min?: FuncionarioBeneficioMinAggregateInputType
    _max?: FuncionarioBeneficioMaxAggregateInputType
  }

  export type FuncionarioBeneficioGroupByOutputType = {
    id: number
    funcionario_id: number
    beneficio_id: number
    valor: Decimal
    data_inicio: Date
    data_fim: Date | null
    ativo: boolean
    criado_em: Date
    atualizado_em: Date
    _count: FuncionarioBeneficioCountAggregateOutputType | null
    _avg: FuncionarioBeneficioAvgAggregateOutputType | null
    _sum: FuncionarioBeneficioSumAggregateOutputType | null
    _min: FuncionarioBeneficioMinAggregateOutputType | null
    _max: FuncionarioBeneficioMaxAggregateOutputType | null
  }

  type GetFuncionarioBeneficioGroupByPayload<T extends FuncionarioBeneficioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FuncionarioBeneficioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FuncionarioBeneficioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FuncionarioBeneficioGroupByOutputType[P]>
            : GetScalarType<T[P], FuncionarioBeneficioGroupByOutputType[P]>
        }
      >
    >


  export type FuncionarioBeneficioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    beneficio_id?: boolean
    valor?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    beneficio?: boolean | BeneficioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcionarioBeneficio"]>

  export type FuncionarioBeneficioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    funcionario_id?: boolean
    beneficio_id?: boolean
    valor?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    beneficio?: boolean | BeneficioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["funcionarioBeneficio"]>

  export type FuncionarioBeneficioSelectScalar = {
    id?: boolean
    funcionario_id?: boolean
    beneficio_id?: boolean
    valor?: boolean
    data_inicio?: boolean
    data_fim?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
  }

  export type FuncionarioBeneficioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    beneficio?: boolean | BeneficioDefaultArgs<ExtArgs>
  }
  export type FuncionarioBeneficioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    funcionario?: boolean | FuncionarioDefaultArgs<ExtArgs>
    beneficio?: boolean | BeneficioDefaultArgs<ExtArgs>
  }

  export type $FuncionarioBeneficioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FuncionarioBeneficio"
    objects: {
      funcionario: Prisma.$FuncionarioPayload<ExtArgs>
      beneficio: Prisma.$BeneficioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      funcionario_id: number
      beneficio_id: number
      valor: Prisma.Decimal
      data_inicio: Date
      data_fim: Date | null
      ativo: boolean
      criado_em: Date
      atualizado_em: Date
    }, ExtArgs["result"]["funcionarioBeneficio"]>
    composites: {}
  }

  type FuncionarioBeneficioGetPayload<S extends boolean | null | undefined | FuncionarioBeneficioDefaultArgs> = $Result.GetResult<Prisma.$FuncionarioBeneficioPayload, S>

  type FuncionarioBeneficioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FuncionarioBeneficioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FuncionarioBeneficioCountAggregateInputType | true
    }

  export interface FuncionarioBeneficioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FuncionarioBeneficio'], meta: { name: 'FuncionarioBeneficio' } }
    /**
     * Find zero or one FuncionarioBeneficio that matches the filter.
     * @param {FuncionarioBeneficioFindUniqueArgs} args - Arguments to find a FuncionarioBeneficio
     * @example
     * // Get one FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FuncionarioBeneficioFindUniqueArgs>(args: SelectSubset<T, FuncionarioBeneficioFindUniqueArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FuncionarioBeneficio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FuncionarioBeneficioFindUniqueOrThrowArgs} args - Arguments to find a FuncionarioBeneficio
     * @example
     * // Get one FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FuncionarioBeneficioFindUniqueOrThrowArgs>(args: SelectSubset<T, FuncionarioBeneficioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FuncionarioBeneficio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioFindFirstArgs} args - Arguments to find a FuncionarioBeneficio
     * @example
     * // Get one FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FuncionarioBeneficioFindFirstArgs>(args?: SelectSubset<T, FuncionarioBeneficioFindFirstArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FuncionarioBeneficio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioFindFirstOrThrowArgs} args - Arguments to find a FuncionarioBeneficio
     * @example
     * // Get one FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FuncionarioBeneficioFindFirstOrThrowArgs>(args?: SelectSubset<T, FuncionarioBeneficioFindFirstOrThrowArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FuncionarioBeneficios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FuncionarioBeneficios
     * const funcionarioBeneficios = await prisma.funcionarioBeneficio.findMany()
     * 
     * // Get first 10 FuncionarioBeneficios
     * const funcionarioBeneficios = await prisma.funcionarioBeneficio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const funcionarioBeneficioWithIdOnly = await prisma.funcionarioBeneficio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FuncionarioBeneficioFindManyArgs>(args?: SelectSubset<T, FuncionarioBeneficioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FuncionarioBeneficio.
     * @param {FuncionarioBeneficioCreateArgs} args - Arguments to create a FuncionarioBeneficio.
     * @example
     * // Create one FuncionarioBeneficio
     * const FuncionarioBeneficio = await prisma.funcionarioBeneficio.create({
     *   data: {
     *     // ... data to create a FuncionarioBeneficio
     *   }
     * })
     * 
     */
    create<T extends FuncionarioBeneficioCreateArgs>(args: SelectSubset<T, FuncionarioBeneficioCreateArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FuncionarioBeneficios.
     * @param {FuncionarioBeneficioCreateManyArgs} args - Arguments to create many FuncionarioBeneficios.
     * @example
     * // Create many FuncionarioBeneficios
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FuncionarioBeneficioCreateManyArgs>(args?: SelectSubset<T, FuncionarioBeneficioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FuncionarioBeneficios and returns the data saved in the database.
     * @param {FuncionarioBeneficioCreateManyAndReturnArgs} args - Arguments to create many FuncionarioBeneficios.
     * @example
     * // Create many FuncionarioBeneficios
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FuncionarioBeneficios and only return the `id`
     * const funcionarioBeneficioWithIdOnly = await prisma.funcionarioBeneficio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FuncionarioBeneficioCreateManyAndReturnArgs>(args?: SelectSubset<T, FuncionarioBeneficioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FuncionarioBeneficio.
     * @param {FuncionarioBeneficioDeleteArgs} args - Arguments to delete one FuncionarioBeneficio.
     * @example
     * // Delete one FuncionarioBeneficio
     * const FuncionarioBeneficio = await prisma.funcionarioBeneficio.delete({
     *   where: {
     *     // ... filter to delete one FuncionarioBeneficio
     *   }
     * })
     * 
     */
    delete<T extends FuncionarioBeneficioDeleteArgs>(args: SelectSubset<T, FuncionarioBeneficioDeleteArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FuncionarioBeneficio.
     * @param {FuncionarioBeneficioUpdateArgs} args - Arguments to update one FuncionarioBeneficio.
     * @example
     * // Update one FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FuncionarioBeneficioUpdateArgs>(args: SelectSubset<T, FuncionarioBeneficioUpdateArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FuncionarioBeneficios.
     * @param {FuncionarioBeneficioDeleteManyArgs} args - Arguments to filter FuncionarioBeneficios to delete.
     * @example
     * // Delete a few FuncionarioBeneficios
     * const { count } = await prisma.funcionarioBeneficio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FuncionarioBeneficioDeleteManyArgs>(args?: SelectSubset<T, FuncionarioBeneficioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FuncionarioBeneficios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FuncionarioBeneficios
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FuncionarioBeneficioUpdateManyArgs>(args: SelectSubset<T, FuncionarioBeneficioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FuncionarioBeneficio.
     * @param {FuncionarioBeneficioUpsertArgs} args - Arguments to update or create a FuncionarioBeneficio.
     * @example
     * // Update or create a FuncionarioBeneficio
     * const funcionarioBeneficio = await prisma.funcionarioBeneficio.upsert({
     *   create: {
     *     // ... data to create a FuncionarioBeneficio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FuncionarioBeneficio we want to update
     *   }
     * })
     */
    upsert<T extends FuncionarioBeneficioUpsertArgs>(args: SelectSubset<T, FuncionarioBeneficioUpsertArgs<ExtArgs>>): Prisma__FuncionarioBeneficioClient<$Result.GetResult<Prisma.$FuncionarioBeneficioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FuncionarioBeneficios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioCountArgs} args - Arguments to filter FuncionarioBeneficios to count.
     * @example
     * // Count the number of FuncionarioBeneficios
     * const count = await prisma.funcionarioBeneficio.count({
     *   where: {
     *     // ... the filter for the FuncionarioBeneficios we want to count
     *   }
     * })
    **/
    count<T extends FuncionarioBeneficioCountArgs>(
      args?: Subset<T, FuncionarioBeneficioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FuncionarioBeneficioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FuncionarioBeneficio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FuncionarioBeneficioAggregateArgs>(args: Subset<T, FuncionarioBeneficioAggregateArgs>): Prisma.PrismaPromise<GetFuncionarioBeneficioAggregateType<T>>

    /**
     * Group by FuncionarioBeneficio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FuncionarioBeneficioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FuncionarioBeneficioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FuncionarioBeneficioGroupByArgs['orderBy'] }
        : { orderBy?: FuncionarioBeneficioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FuncionarioBeneficioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFuncionarioBeneficioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FuncionarioBeneficio model
   */
  readonly fields: FuncionarioBeneficioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FuncionarioBeneficio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FuncionarioBeneficioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    funcionario<T extends FuncionarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FuncionarioDefaultArgs<ExtArgs>>): Prisma__FuncionarioClient<$Result.GetResult<Prisma.$FuncionarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    beneficio<T extends BeneficioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BeneficioDefaultArgs<ExtArgs>>): Prisma__BeneficioClient<$Result.GetResult<Prisma.$BeneficioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FuncionarioBeneficio model
   */ 
  interface FuncionarioBeneficioFieldRefs {
    readonly id: FieldRef<"FuncionarioBeneficio", 'Int'>
    readonly funcionario_id: FieldRef<"FuncionarioBeneficio", 'Int'>
    readonly beneficio_id: FieldRef<"FuncionarioBeneficio", 'Int'>
    readonly valor: FieldRef<"FuncionarioBeneficio", 'Decimal'>
    readonly data_inicio: FieldRef<"FuncionarioBeneficio", 'DateTime'>
    readonly data_fim: FieldRef<"FuncionarioBeneficio", 'DateTime'>
    readonly ativo: FieldRef<"FuncionarioBeneficio", 'Boolean'>
    readonly criado_em: FieldRef<"FuncionarioBeneficio", 'DateTime'>
    readonly atualizado_em: FieldRef<"FuncionarioBeneficio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FuncionarioBeneficio findUnique
   */
  export type FuncionarioBeneficioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioBeneficio to fetch.
     */
    where: FuncionarioBeneficioWhereUniqueInput
  }

  /**
   * FuncionarioBeneficio findUniqueOrThrow
   */
  export type FuncionarioBeneficioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioBeneficio to fetch.
     */
    where: FuncionarioBeneficioWhereUniqueInput
  }

  /**
   * FuncionarioBeneficio findFirst
   */
  export type FuncionarioBeneficioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioBeneficio to fetch.
     */
    where?: FuncionarioBeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioBeneficios to fetch.
     */
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FuncionarioBeneficios.
     */
    cursor?: FuncionarioBeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioBeneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioBeneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FuncionarioBeneficios.
     */
    distinct?: FuncionarioBeneficioScalarFieldEnum | FuncionarioBeneficioScalarFieldEnum[]
  }

  /**
   * FuncionarioBeneficio findFirstOrThrow
   */
  export type FuncionarioBeneficioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioBeneficio to fetch.
     */
    where?: FuncionarioBeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioBeneficios to fetch.
     */
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FuncionarioBeneficios.
     */
    cursor?: FuncionarioBeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioBeneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioBeneficios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FuncionarioBeneficios.
     */
    distinct?: FuncionarioBeneficioScalarFieldEnum | FuncionarioBeneficioScalarFieldEnum[]
  }

  /**
   * FuncionarioBeneficio findMany
   */
  export type FuncionarioBeneficioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter, which FuncionarioBeneficios to fetch.
     */
    where?: FuncionarioBeneficioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FuncionarioBeneficios to fetch.
     */
    orderBy?: FuncionarioBeneficioOrderByWithRelationInput | FuncionarioBeneficioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FuncionarioBeneficios.
     */
    cursor?: FuncionarioBeneficioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FuncionarioBeneficios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FuncionarioBeneficios.
     */
    skip?: number
    distinct?: FuncionarioBeneficioScalarFieldEnum | FuncionarioBeneficioScalarFieldEnum[]
  }

  /**
   * FuncionarioBeneficio create
   */
  export type FuncionarioBeneficioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * The data needed to create a FuncionarioBeneficio.
     */
    data: XOR<FuncionarioBeneficioCreateInput, FuncionarioBeneficioUncheckedCreateInput>
  }

  /**
   * FuncionarioBeneficio createMany
   */
  export type FuncionarioBeneficioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FuncionarioBeneficios.
     */
    data: FuncionarioBeneficioCreateManyInput | FuncionarioBeneficioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FuncionarioBeneficio createManyAndReturn
   */
  export type FuncionarioBeneficioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FuncionarioBeneficios.
     */
    data: FuncionarioBeneficioCreateManyInput | FuncionarioBeneficioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FuncionarioBeneficio update
   */
  export type FuncionarioBeneficioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * The data needed to update a FuncionarioBeneficio.
     */
    data: XOR<FuncionarioBeneficioUpdateInput, FuncionarioBeneficioUncheckedUpdateInput>
    /**
     * Choose, which FuncionarioBeneficio to update.
     */
    where: FuncionarioBeneficioWhereUniqueInput
  }

  /**
   * FuncionarioBeneficio updateMany
   */
  export type FuncionarioBeneficioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FuncionarioBeneficios.
     */
    data: XOR<FuncionarioBeneficioUpdateManyMutationInput, FuncionarioBeneficioUncheckedUpdateManyInput>
    /**
     * Filter which FuncionarioBeneficios to update
     */
    where?: FuncionarioBeneficioWhereInput
  }

  /**
   * FuncionarioBeneficio upsert
   */
  export type FuncionarioBeneficioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * The filter to search for the FuncionarioBeneficio to update in case it exists.
     */
    where: FuncionarioBeneficioWhereUniqueInput
    /**
     * In case the FuncionarioBeneficio found by the `where` argument doesn't exist, create a new FuncionarioBeneficio with this data.
     */
    create: XOR<FuncionarioBeneficioCreateInput, FuncionarioBeneficioUncheckedCreateInput>
    /**
     * In case the FuncionarioBeneficio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FuncionarioBeneficioUpdateInput, FuncionarioBeneficioUncheckedUpdateInput>
  }

  /**
   * FuncionarioBeneficio delete
   */
  export type FuncionarioBeneficioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
    /**
     * Filter which FuncionarioBeneficio to delete.
     */
    where: FuncionarioBeneficioWhereUniqueInput
  }

  /**
   * FuncionarioBeneficio deleteMany
   */
  export type FuncionarioBeneficioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FuncionarioBeneficios to delete
     */
    where?: FuncionarioBeneficioWhereInput
  }

  /**
   * FuncionarioBeneficio without action
   */
  export type FuncionarioBeneficioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FuncionarioBeneficio
     */
    select?: FuncionarioBeneficioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FuncionarioBeneficioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const FuncionarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha_hash: 'senha_hash',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    data_contratacao: 'data_contratacao',
    cargo: 'cargo',
    departamento: 'departamento',
    role: 'role',
    ativo: 'ativo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type FuncionarioScalarFieldEnum = (typeof FuncionarioScalarFieldEnum)[keyof typeof FuncionarioScalarFieldEnum]


  export const RegistroPontoScalarFieldEnum: {
    id: 'id',
    funcionario_id: 'funcionario_id',
    data: 'data',
    hora_entrada: 'hora_entrada',
    hora_saida: 'hora_saida',
    horas_trabalhadas_minutos: 'horas_trabalhadas_minutos',
    horas_extras_minutos: 'horas_extras_minutos',
    horas_faltantes_minutos: 'horas_faltantes_minutos',
    observacoes: 'observacoes',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type RegistroPontoScalarFieldEnum = (typeof RegistroPontoScalarFieldEnum)[keyof typeof RegistroPontoScalarFieldEnum]


  export const SolicitacaoFeriasScalarFieldEnum: {
    id: 'id',
    funcionario_id: 'funcionario_id',
    data_inicio: 'data_inicio',
    data_fim: 'data_fim',
    dias_solicitados: 'dias_solicitados',
    status: 'status',
    motivo_negacao: 'motivo_negacao',
    aprovado_por_id: 'aprovado_por_id',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type SolicitacaoFeriasScalarFieldEnum = (typeof SolicitacaoFeriasScalarFieldEnum)[keyof typeof SolicitacaoFeriasScalarFieldEnum]


  export const SalarioScalarFieldEnum: {
    id: 'id',
    funcionario_id: 'funcionario_id',
    salario_base: 'salario_base',
    data_inicio: 'data_inicio',
    data_fim: 'data_fim',
    ativo: 'ativo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type SalarioScalarFieldEnum = (typeof SalarioScalarFieldEnum)[keyof typeof SalarioScalarFieldEnum]


  export const HoleriteScalarFieldEnum: {
    id: 'id',
    funcionario_id: 'funcionario_id',
    salario_id: 'salario_id',
    mes: 'mes',
    ano: 'ano',
    horas_trabalhadas_minutos: 'horas_trabalhadas_minutos',
    horas_extras_minutos: 'horas_extras_minutos',
    valor_horas_extras: 'valor_horas_extras',
    descontos: 'descontos',
    beneficios: 'beneficios',
    salario_liquido: 'salario_liquido',
    data_pagamento: 'data_pagamento',
    arquivo: 'arquivo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type HoleriteScalarFieldEnum = (typeof HoleriteScalarFieldEnum)[keyof typeof HoleriteScalarFieldEnum]


  export const BeneficioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    valor_padrao: 'valor_padrao',
    tipo: 'tipo',
    ativo: 'ativo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type BeneficioScalarFieldEnum = (typeof BeneficioScalarFieldEnum)[keyof typeof BeneficioScalarFieldEnum]


  export const FuncionarioBeneficioScalarFieldEnum: {
    id: 'id',
    funcionario_id: 'funcionario_id',
    beneficio_id: 'beneficio_id',
    valor: 'valor',
    data_inicio: 'data_inicio',
    data_fim: 'data_fim',
    ativo: 'ativo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em'
  };

  export type FuncionarioBeneficioScalarFieldEnum = (typeof FuncionarioBeneficioScalarFieldEnum)[keyof typeof FuncionarioBeneficioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type FuncionarioWhereInput = {
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    id?: IntFilter<"Funcionario"> | number
    nome?: StringFilter<"Funcionario"> | string
    email?: StringFilter<"Funcionario"> | string
    senha_hash?: StringFilter<"Funcionario"> | string
    cpf?: StringFilter<"Funcionario"> | string
    data_nascimento?: DateTimeNullableFilter<"Funcionario"> | Date | string | null
    data_contratacao?: DateTimeFilter<"Funcionario"> | Date | string
    cargo?: StringFilter<"Funcionario"> | string
    departamento?: StringFilter<"Funcionario"> | string
    role?: StringFilter<"Funcionario"> | string
    ativo?: BoolFilter<"Funcionario"> | boolean
    criado_em?: DateTimeFilter<"Funcionario"> | Date | string
    atualizado_em?: DateTimeFilter<"Funcionario"> | Date | string
    registrosPonto?: RegistroPontoListRelationFilter
    solicitacoesFerias?: SolicitacaoFeriasListRelationFilter
    salarios?: SalarioListRelationFilter
    holerites?: HoleriteListRelationFilter
    beneficios?: FuncionarioBeneficioListRelationFilter
    aprovacoesFerias?: SolicitacaoFeriasListRelationFilter
  }

  export type FuncionarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    data_contratacao?: SortOrder
    cargo?: SortOrder
    departamento?: SortOrder
    role?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    registrosPonto?: RegistroPontoOrderByRelationAggregateInput
    solicitacoesFerias?: SolicitacaoFeriasOrderByRelationAggregateInput
    salarios?: SalarioOrderByRelationAggregateInput
    holerites?: HoleriteOrderByRelationAggregateInput
    beneficios?: FuncionarioBeneficioOrderByRelationAggregateInput
    aprovacoesFerias?: SolicitacaoFeriasOrderByRelationAggregateInput
  }

  export type FuncionarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    cpf?: string
    AND?: FuncionarioWhereInput | FuncionarioWhereInput[]
    OR?: FuncionarioWhereInput[]
    NOT?: FuncionarioWhereInput | FuncionarioWhereInput[]
    nome?: StringFilter<"Funcionario"> | string
    senha_hash?: StringFilter<"Funcionario"> | string
    data_nascimento?: DateTimeNullableFilter<"Funcionario"> | Date | string | null
    data_contratacao?: DateTimeFilter<"Funcionario"> | Date | string
    cargo?: StringFilter<"Funcionario"> | string
    departamento?: StringFilter<"Funcionario"> | string
    role?: StringFilter<"Funcionario"> | string
    ativo?: BoolFilter<"Funcionario"> | boolean
    criado_em?: DateTimeFilter<"Funcionario"> | Date | string
    atualizado_em?: DateTimeFilter<"Funcionario"> | Date | string
    registrosPonto?: RegistroPontoListRelationFilter
    solicitacoesFerias?: SolicitacaoFeriasListRelationFilter
    salarios?: SalarioListRelationFilter
    holerites?: HoleriteListRelationFilter
    beneficios?: FuncionarioBeneficioListRelationFilter
    aprovacoesFerias?: SolicitacaoFeriasListRelationFilter
  }, "id" | "email" | "cpf">

  export type FuncionarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    data_contratacao?: SortOrder
    cargo?: SortOrder
    departamento?: SortOrder
    role?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: FuncionarioCountOrderByAggregateInput
    _avg?: FuncionarioAvgOrderByAggregateInput
    _max?: FuncionarioMaxOrderByAggregateInput
    _min?: FuncionarioMinOrderByAggregateInput
    _sum?: FuncionarioSumOrderByAggregateInput
  }

  export type FuncionarioScalarWhereWithAggregatesInput = {
    AND?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    OR?: FuncionarioScalarWhereWithAggregatesInput[]
    NOT?: FuncionarioScalarWhereWithAggregatesInput | FuncionarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Funcionario"> | number
    nome?: StringWithAggregatesFilter<"Funcionario"> | string
    email?: StringWithAggregatesFilter<"Funcionario"> | string
    senha_hash?: StringWithAggregatesFilter<"Funcionario"> | string
    cpf?: StringWithAggregatesFilter<"Funcionario"> | string
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"Funcionario"> | Date | string | null
    data_contratacao?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
    cargo?: StringWithAggregatesFilter<"Funcionario"> | string
    departamento?: StringWithAggregatesFilter<"Funcionario"> | string
    role?: StringWithAggregatesFilter<"Funcionario"> | string
    ativo?: BoolWithAggregatesFilter<"Funcionario"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"Funcionario"> | Date | string
  }

  export type RegistroPontoWhereInput = {
    AND?: RegistroPontoWhereInput | RegistroPontoWhereInput[]
    OR?: RegistroPontoWhereInput[]
    NOT?: RegistroPontoWhereInput | RegistroPontoWhereInput[]
    id?: IntFilter<"RegistroPonto"> | number
    funcionario_id?: IntFilter<"RegistroPonto"> | number
    data?: DateTimeFilter<"RegistroPonto"> | Date | string
    hora_entrada?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    hora_saida?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    horas_trabalhadas_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_extras_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_faltantes_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    observacoes?: StringNullableFilter<"RegistroPonto"> | string | null
    criado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
    atualizado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
  }

  export type RegistroPontoOrderByWithRelationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data?: SortOrder
    hora_entrada?: SortOrderInput | SortOrder
    hora_saida?: SortOrderInput | SortOrder
    horas_trabalhadas_minutos?: SortOrderInput | SortOrder
    horas_extras_minutos?: SortOrderInput | SortOrder
    horas_faltantes_minutos?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionario?: FuncionarioOrderByWithRelationInput
  }

  export type RegistroPontoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroPontoWhereInput | RegistroPontoWhereInput[]
    OR?: RegistroPontoWhereInput[]
    NOT?: RegistroPontoWhereInput | RegistroPontoWhereInput[]
    funcionario_id?: IntFilter<"RegistroPonto"> | number
    data?: DateTimeFilter<"RegistroPonto"> | Date | string
    hora_entrada?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    hora_saida?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    horas_trabalhadas_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_extras_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_faltantes_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    observacoes?: StringNullableFilter<"RegistroPonto"> | string | null
    criado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
    atualizado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
  }, "id">

  export type RegistroPontoOrderByWithAggregationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data?: SortOrder
    hora_entrada?: SortOrderInput | SortOrder
    hora_saida?: SortOrderInput | SortOrder
    horas_trabalhadas_minutos?: SortOrderInput | SortOrder
    horas_extras_minutos?: SortOrderInput | SortOrder
    horas_faltantes_minutos?: SortOrderInput | SortOrder
    observacoes?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: RegistroPontoCountOrderByAggregateInput
    _avg?: RegistroPontoAvgOrderByAggregateInput
    _max?: RegistroPontoMaxOrderByAggregateInput
    _min?: RegistroPontoMinOrderByAggregateInput
    _sum?: RegistroPontoSumOrderByAggregateInput
  }

  export type RegistroPontoScalarWhereWithAggregatesInput = {
    AND?: RegistroPontoScalarWhereWithAggregatesInput | RegistroPontoScalarWhereWithAggregatesInput[]
    OR?: RegistroPontoScalarWhereWithAggregatesInput[]
    NOT?: RegistroPontoScalarWhereWithAggregatesInput | RegistroPontoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroPonto"> | number
    funcionario_id?: IntWithAggregatesFilter<"RegistroPonto"> | number
    data?: DateTimeWithAggregatesFilter<"RegistroPonto"> | Date | string
    hora_entrada?: DateTimeNullableWithAggregatesFilter<"RegistroPonto"> | Date | string | null
    hora_saida?: DateTimeNullableWithAggregatesFilter<"RegistroPonto"> | Date | string | null
    horas_trabalhadas_minutos?: IntNullableWithAggregatesFilter<"RegistroPonto"> | number | null
    horas_extras_minutos?: IntNullableWithAggregatesFilter<"RegistroPonto"> | number | null
    horas_faltantes_minutos?: IntNullableWithAggregatesFilter<"RegistroPonto"> | number | null
    observacoes?: StringNullableWithAggregatesFilter<"RegistroPonto"> | string | null
    criado_em?: DateTimeWithAggregatesFilter<"RegistroPonto"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"RegistroPonto"> | Date | string
  }

  export type SolicitacaoFeriasWhereInput = {
    AND?: SolicitacaoFeriasWhereInput | SolicitacaoFeriasWhereInput[]
    OR?: SolicitacaoFeriasWhereInput[]
    NOT?: SolicitacaoFeriasWhereInput | SolicitacaoFeriasWhereInput[]
    id?: IntFilter<"SolicitacaoFerias"> | number
    funcionario_id?: IntFilter<"SolicitacaoFerias"> | number
    data_inicio?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    data_fim?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    dias_solicitados?: IntFilter<"SolicitacaoFerias"> | number
    status?: StringFilter<"SolicitacaoFerias"> | string
    motivo_negacao?: StringNullableFilter<"SolicitacaoFerias"> | string | null
    aprovado_por_id?: IntNullableFilter<"SolicitacaoFerias"> | number | null
    criado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    atualizado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    aprovado_por?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }

  export type SolicitacaoFeriasOrderByWithRelationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    dias_solicitados?: SortOrder
    status?: SortOrder
    motivo_negacao?: SortOrderInput | SortOrder
    aprovado_por_id?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionario?: FuncionarioOrderByWithRelationInput
    aprovado_por?: FuncionarioOrderByWithRelationInput
  }

  export type SolicitacaoFeriasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SolicitacaoFeriasWhereInput | SolicitacaoFeriasWhereInput[]
    OR?: SolicitacaoFeriasWhereInput[]
    NOT?: SolicitacaoFeriasWhereInput | SolicitacaoFeriasWhereInput[]
    funcionario_id?: IntFilter<"SolicitacaoFerias"> | number
    data_inicio?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    data_fim?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    dias_solicitados?: IntFilter<"SolicitacaoFerias"> | number
    status?: StringFilter<"SolicitacaoFerias"> | string
    motivo_negacao?: StringNullableFilter<"SolicitacaoFerias"> | string | null
    aprovado_por_id?: IntNullableFilter<"SolicitacaoFerias"> | number | null
    criado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    atualizado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    aprovado_por?: XOR<FuncionarioNullableRelationFilter, FuncionarioWhereInput> | null
  }, "id">

  export type SolicitacaoFeriasOrderByWithAggregationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    dias_solicitados?: SortOrder
    status?: SortOrder
    motivo_negacao?: SortOrderInput | SortOrder
    aprovado_por_id?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: SolicitacaoFeriasCountOrderByAggregateInput
    _avg?: SolicitacaoFeriasAvgOrderByAggregateInput
    _max?: SolicitacaoFeriasMaxOrderByAggregateInput
    _min?: SolicitacaoFeriasMinOrderByAggregateInput
    _sum?: SolicitacaoFeriasSumOrderByAggregateInput
  }

  export type SolicitacaoFeriasScalarWhereWithAggregatesInput = {
    AND?: SolicitacaoFeriasScalarWhereWithAggregatesInput | SolicitacaoFeriasScalarWhereWithAggregatesInput[]
    OR?: SolicitacaoFeriasScalarWhereWithAggregatesInput[]
    NOT?: SolicitacaoFeriasScalarWhereWithAggregatesInput | SolicitacaoFeriasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SolicitacaoFerias"> | number
    funcionario_id?: IntWithAggregatesFilter<"SolicitacaoFerias"> | number
    data_inicio?: DateTimeWithAggregatesFilter<"SolicitacaoFerias"> | Date | string
    data_fim?: DateTimeWithAggregatesFilter<"SolicitacaoFerias"> | Date | string
    dias_solicitados?: IntWithAggregatesFilter<"SolicitacaoFerias"> | number
    status?: StringWithAggregatesFilter<"SolicitacaoFerias"> | string
    motivo_negacao?: StringNullableWithAggregatesFilter<"SolicitacaoFerias"> | string | null
    aprovado_por_id?: IntNullableWithAggregatesFilter<"SolicitacaoFerias"> | number | null
    criado_em?: DateTimeWithAggregatesFilter<"SolicitacaoFerias"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"SolicitacaoFerias"> | Date | string
  }

  export type SalarioWhereInput = {
    AND?: SalarioWhereInput | SalarioWhereInput[]
    OR?: SalarioWhereInput[]
    NOT?: SalarioWhereInput | SalarioWhereInput[]
    id?: IntFilter<"Salario"> | number
    funcionario_id?: IntFilter<"Salario"> | number
    salario_base?: DecimalFilter<"Salario"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"Salario"> | Date | string
    data_fim?: DateTimeNullableFilter<"Salario"> | Date | string | null
    ativo?: BoolFilter<"Salario"> | boolean
    criado_em?: DateTimeFilter<"Salario"> | Date | string
    atualizado_em?: DateTimeFilter<"Salario"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    holerites?: HoleriteListRelationFilter
  }

  export type SalarioOrderByWithRelationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionario?: FuncionarioOrderByWithRelationInput
    holerites?: HoleriteOrderByRelationAggregateInput
  }

  export type SalarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalarioWhereInput | SalarioWhereInput[]
    OR?: SalarioWhereInput[]
    NOT?: SalarioWhereInput | SalarioWhereInput[]
    funcionario_id?: IntFilter<"Salario"> | number
    salario_base?: DecimalFilter<"Salario"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"Salario"> | Date | string
    data_fim?: DateTimeNullableFilter<"Salario"> | Date | string | null
    ativo?: BoolFilter<"Salario"> | boolean
    criado_em?: DateTimeFilter<"Salario"> | Date | string
    atualizado_em?: DateTimeFilter<"Salario"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    holerites?: HoleriteListRelationFilter
  }, "id">

  export type SalarioOrderByWithAggregationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: SalarioCountOrderByAggregateInput
    _avg?: SalarioAvgOrderByAggregateInput
    _max?: SalarioMaxOrderByAggregateInput
    _min?: SalarioMinOrderByAggregateInput
    _sum?: SalarioSumOrderByAggregateInput
  }

  export type SalarioScalarWhereWithAggregatesInput = {
    AND?: SalarioScalarWhereWithAggregatesInput | SalarioScalarWhereWithAggregatesInput[]
    OR?: SalarioScalarWhereWithAggregatesInput[]
    NOT?: SalarioScalarWhereWithAggregatesInput | SalarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Salario"> | number
    funcionario_id?: IntWithAggregatesFilter<"Salario"> | number
    salario_base?: DecimalWithAggregatesFilter<"Salario"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeWithAggregatesFilter<"Salario"> | Date | string
    data_fim?: DateTimeNullableWithAggregatesFilter<"Salario"> | Date | string | null
    ativo?: BoolWithAggregatesFilter<"Salario"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Salario"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"Salario"> | Date | string
  }

  export type HoleriteWhereInput = {
    AND?: HoleriteWhereInput | HoleriteWhereInput[]
    OR?: HoleriteWhereInput[]
    NOT?: HoleriteWhereInput | HoleriteWhereInput[]
    id?: IntFilter<"Holerite"> | number
    funcionario_id?: IntFilter<"Holerite"> | number
    salario_id?: IntFilter<"Holerite"> | number
    mes?: IntFilter<"Holerite"> | number
    ano?: IntFilter<"Holerite"> | number
    horas_trabalhadas_minutos?: IntNullableFilter<"Holerite"> | number | null
    horas_extras_minutos?: IntNullableFilter<"Holerite"> | number | null
    valor_horas_extras?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    descontos?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    beneficios?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFilter<"Holerite"> | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFilter<"Holerite"> | Date | string
    arquivo?: BytesNullableFilter<"Holerite"> | Buffer | null
    criado_em?: DateTimeFilter<"Holerite"> | Date | string
    atualizado_em?: DateTimeFilter<"Holerite"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    salario?: XOR<SalarioRelationFilter, SalarioWhereInput>
  }

  export type HoleriteOrderByWithRelationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrderInput | SortOrder
    horas_extras_minutos?: SortOrderInput | SortOrder
    valor_horas_extras?: SortOrderInput | SortOrder
    descontos?: SortOrderInput | SortOrder
    beneficios?: SortOrderInput | SortOrder
    salario_liquido?: SortOrder
    data_pagamento?: SortOrder
    arquivo?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionario?: FuncionarioOrderByWithRelationInput
    salario?: SalarioOrderByWithRelationInput
  }

  export type HoleriteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HoleriteWhereInput | HoleriteWhereInput[]
    OR?: HoleriteWhereInput[]
    NOT?: HoleriteWhereInput | HoleriteWhereInput[]
    funcionario_id?: IntFilter<"Holerite"> | number
    salario_id?: IntFilter<"Holerite"> | number
    mes?: IntFilter<"Holerite"> | number
    ano?: IntFilter<"Holerite"> | number
    horas_trabalhadas_minutos?: IntNullableFilter<"Holerite"> | number | null
    horas_extras_minutos?: IntNullableFilter<"Holerite"> | number | null
    valor_horas_extras?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    descontos?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    beneficios?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFilter<"Holerite"> | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFilter<"Holerite"> | Date | string
    arquivo?: BytesNullableFilter<"Holerite"> | Buffer | null
    criado_em?: DateTimeFilter<"Holerite"> | Date | string
    atualizado_em?: DateTimeFilter<"Holerite"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    salario?: XOR<SalarioRelationFilter, SalarioWhereInput>
  }, "id">

  export type HoleriteOrderByWithAggregationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrderInput | SortOrder
    horas_extras_minutos?: SortOrderInput | SortOrder
    valor_horas_extras?: SortOrderInput | SortOrder
    descontos?: SortOrderInput | SortOrder
    beneficios?: SortOrderInput | SortOrder
    salario_liquido?: SortOrder
    data_pagamento?: SortOrder
    arquivo?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: HoleriteCountOrderByAggregateInput
    _avg?: HoleriteAvgOrderByAggregateInput
    _max?: HoleriteMaxOrderByAggregateInput
    _min?: HoleriteMinOrderByAggregateInput
    _sum?: HoleriteSumOrderByAggregateInput
  }

  export type HoleriteScalarWhereWithAggregatesInput = {
    AND?: HoleriteScalarWhereWithAggregatesInput | HoleriteScalarWhereWithAggregatesInput[]
    OR?: HoleriteScalarWhereWithAggregatesInput[]
    NOT?: HoleriteScalarWhereWithAggregatesInput | HoleriteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Holerite"> | number
    funcionario_id?: IntWithAggregatesFilter<"Holerite"> | number
    salario_id?: IntWithAggregatesFilter<"Holerite"> | number
    mes?: IntWithAggregatesFilter<"Holerite"> | number
    ano?: IntWithAggregatesFilter<"Holerite"> | number
    horas_trabalhadas_minutos?: IntNullableWithAggregatesFilter<"Holerite"> | number | null
    horas_extras_minutos?: IntNullableWithAggregatesFilter<"Holerite"> | number | null
    valor_horas_extras?: DecimalNullableWithAggregatesFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    descontos?: DecimalNullableWithAggregatesFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    beneficios?: DecimalNullableWithAggregatesFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalWithAggregatesFilter<"Holerite"> | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeWithAggregatesFilter<"Holerite"> | Date | string
    arquivo?: BytesNullableWithAggregatesFilter<"Holerite"> | Buffer | null
    criado_em?: DateTimeWithAggregatesFilter<"Holerite"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"Holerite"> | Date | string
  }

  export type BeneficioWhereInput = {
    AND?: BeneficioWhereInput | BeneficioWhereInput[]
    OR?: BeneficioWhereInput[]
    NOT?: BeneficioWhereInput | BeneficioWhereInput[]
    id?: IntFilter<"Beneficio"> | number
    nome?: StringFilter<"Beneficio"> | string
    descricao?: StringNullableFilter<"Beneficio"> | string | null
    valor_padrao?: DecimalNullableFilter<"Beneficio"> | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFilter<"Beneficio"> | string
    ativo?: BoolFilter<"Beneficio"> | boolean
    criado_em?: DateTimeFilter<"Beneficio"> | Date | string
    atualizado_em?: DateTimeFilter<"Beneficio"> | Date | string
    funcionarios?: FuncionarioBeneficioListRelationFilter
  }

  export type BeneficioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    valor_padrao?: SortOrderInput | SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionarios?: FuncionarioBeneficioOrderByRelationAggregateInput
  }

  export type BeneficioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BeneficioWhereInput | BeneficioWhereInput[]
    OR?: BeneficioWhereInput[]
    NOT?: BeneficioWhereInput | BeneficioWhereInput[]
    nome?: StringFilter<"Beneficio"> | string
    descricao?: StringNullableFilter<"Beneficio"> | string | null
    valor_padrao?: DecimalNullableFilter<"Beneficio"> | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFilter<"Beneficio"> | string
    ativo?: BoolFilter<"Beneficio"> | boolean
    criado_em?: DateTimeFilter<"Beneficio"> | Date | string
    atualizado_em?: DateTimeFilter<"Beneficio"> | Date | string
    funcionarios?: FuncionarioBeneficioListRelationFilter
  }, "id">

  export type BeneficioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    valor_padrao?: SortOrderInput | SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: BeneficioCountOrderByAggregateInput
    _avg?: BeneficioAvgOrderByAggregateInput
    _max?: BeneficioMaxOrderByAggregateInput
    _min?: BeneficioMinOrderByAggregateInput
    _sum?: BeneficioSumOrderByAggregateInput
  }

  export type BeneficioScalarWhereWithAggregatesInput = {
    AND?: BeneficioScalarWhereWithAggregatesInput | BeneficioScalarWhereWithAggregatesInput[]
    OR?: BeneficioScalarWhereWithAggregatesInput[]
    NOT?: BeneficioScalarWhereWithAggregatesInput | BeneficioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Beneficio"> | number
    nome?: StringWithAggregatesFilter<"Beneficio"> | string
    descricao?: StringNullableWithAggregatesFilter<"Beneficio"> | string | null
    valor_padrao?: DecimalNullableWithAggregatesFilter<"Beneficio"> | Decimal | DecimalJsLike | number | string | null
    tipo?: StringWithAggregatesFilter<"Beneficio"> | string
    ativo?: BoolWithAggregatesFilter<"Beneficio"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Beneficio"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"Beneficio"> | Date | string
  }

  export type FuncionarioBeneficioWhereInput = {
    AND?: FuncionarioBeneficioWhereInput | FuncionarioBeneficioWhereInput[]
    OR?: FuncionarioBeneficioWhereInput[]
    NOT?: FuncionarioBeneficioWhereInput | FuncionarioBeneficioWhereInput[]
    id?: IntFilter<"FuncionarioBeneficio"> | number
    funcionario_id?: IntFilter<"FuncionarioBeneficio"> | number
    beneficio_id?: IntFilter<"FuncionarioBeneficio"> | number
    valor?: DecimalFilter<"FuncionarioBeneficio"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    data_fim?: DateTimeNullableFilter<"FuncionarioBeneficio"> | Date | string | null
    ativo?: BoolFilter<"FuncionarioBeneficio"> | boolean
    criado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    atualizado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    beneficio?: XOR<BeneficioRelationFilter, BeneficioWhereInput>
  }

  export type FuncionarioBeneficioOrderByWithRelationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    funcionario?: FuncionarioOrderByWithRelationInput
    beneficio?: BeneficioOrderByWithRelationInput
  }

  export type FuncionarioBeneficioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FuncionarioBeneficioWhereInput | FuncionarioBeneficioWhereInput[]
    OR?: FuncionarioBeneficioWhereInput[]
    NOT?: FuncionarioBeneficioWhereInput | FuncionarioBeneficioWhereInput[]
    funcionario_id?: IntFilter<"FuncionarioBeneficio"> | number
    beneficio_id?: IntFilter<"FuncionarioBeneficio"> | number
    valor?: DecimalFilter<"FuncionarioBeneficio"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    data_fim?: DateTimeNullableFilter<"FuncionarioBeneficio"> | Date | string | null
    ativo?: BoolFilter<"FuncionarioBeneficio"> | boolean
    criado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    atualizado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    funcionario?: XOR<FuncionarioRelationFilter, FuncionarioWhereInput>
    beneficio?: XOR<BeneficioRelationFilter, BeneficioWhereInput>
  }, "id">

  export type FuncionarioBeneficioOrderByWithAggregationInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    _count?: FuncionarioBeneficioCountOrderByAggregateInput
    _avg?: FuncionarioBeneficioAvgOrderByAggregateInput
    _max?: FuncionarioBeneficioMaxOrderByAggregateInput
    _min?: FuncionarioBeneficioMinOrderByAggregateInput
    _sum?: FuncionarioBeneficioSumOrderByAggregateInput
  }

  export type FuncionarioBeneficioScalarWhereWithAggregatesInput = {
    AND?: FuncionarioBeneficioScalarWhereWithAggregatesInput | FuncionarioBeneficioScalarWhereWithAggregatesInput[]
    OR?: FuncionarioBeneficioScalarWhereWithAggregatesInput[]
    NOT?: FuncionarioBeneficioScalarWhereWithAggregatesInput | FuncionarioBeneficioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FuncionarioBeneficio"> | number
    funcionario_id?: IntWithAggregatesFilter<"FuncionarioBeneficio"> | number
    beneficio_id?: IntWithAggregatesFilter<"FuncionarioBeneficio"> | number
    valor?: DecimalWithAggregatesFilter<"FuncionarioBeneficio"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeWithAggregatesFilter<"FuncionarioBeneficio"> | Date | string
    data_fim?: DateTimeNullableWithAggregatesFilter<"FuncionarioBeneficio"> | Date | string | null
    ativo?: BoolWithAggregatesFilter<"FuncionarioBeneficio"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"FuncionarioBeneficio"> | Date | string
    atualizado_em?: DateTimeWithAggregatesFilter<"FuncionarioBeneficio"> | Date | string
  }

  export type FuncionarioCreateInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoCreateInput = {
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutRegistrosPontoInput
  }

  export type RegistroPontoUncheckedCreateInput = {
    id?: number
    funcionario_id: number
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type RegistroPontoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutRegistrosPontoNestedInput
  }

  export type RegistroPontoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoCreateManyInput = {
    id?: number
    funcionario_id: number
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type RegistroPontoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasCreateInput = {
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutSolicitacoesFeriasInput
    aprovado_por?: FuncionarioCreateNestedOneWithoutAprovacoesFeriasInput
  }

  export type SolicitacaoFeriasUncheckedCreateInput = {
    id?: number
    funcionario_id: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    aprovado_por_id?: number | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasUpdateInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutSolicitacoesFeriasNestedInput
    aprovado_por?: FuncionarioUpdateOneWithoutAprovacoesFeriasNestedInput
  }

  export type SolicitacaoFeriasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    aprovado_por_id?: NullableIntFieldUpdateOperationsInput | number | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasCreateManyInput = {
    id?: number
    funcionario_id: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    aprovado_por_id?: number | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasUpdateManyMutationInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    aprovado_por_id?: NullableIntFieldUpdateOperationsInput | number | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SalarioCreateInput = {
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutSalariosInput
    holerites?: HoleriteCreateNestedManyWithoutSalarioInput
  }

  export type SalarioUncheckedCreateInput = {
    id?: number
    funcionario_id: number
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    holerites?: HoleriteUncheckedCreateNestedManyWithoutSalarioInput
  }

  export type SalarioUpdateInput = {
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutSalariosNestedInput
    holerites?: HoleriteUpdateManyWithoutSalarioNestedInput
  }

  export type SalarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    holerites?: HoleriteUncheckedUpdateManyWithoutSalarioNestedInput
  }

  export type SalarioCreateManyInput = {
    id?: number
    funcionario_id: number
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SalarioUpdateManyMutationInput = {
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SalarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteCreateInput = {
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutHoleritesInput
    salario: SalarioCreateNestedOneWithoutHoleritesInput
  }

  export type HoleriteUncheckedCreateInput = {
    id?: number
    funcionario_id: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteUpdateInput = {
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutHoleritesNestedInput
    salario?: SalarioUpdateOneRequiredWithoutHoleritesNestedInput
  }

  export type HoleriteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    salario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteCreateManyInput = {
    id?: number
    funcionario_id: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteUpdateManyMutationInput = {
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    salario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BeneficioCreateInput = {
    nome: string
    descricao?: string | null
    valor_padrao?: Decimal | DecimalJsLike | number | string | null
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionarios?: FuncionarioBeneficioCreateNestedManyWithoutBeneficioInput
  }

  export type BeneficioUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    valor_padrao?: Decimal | DecimalJsLike | number | string | null
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionarios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutBeneficioInput
  }

  export type BeneficioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionarios?: FuncionarioBeneficioUpdateManyWithoutBeneficioNestedInput
  }

  export type BeneficioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionarios?: FuncionarioBeneficioUncheckedUpdateManyWithoutBeneficioNestedInput
  }

  export type BeneficioCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
    valor_padrao?: Decimal | DecimalJsLike | number | string | null
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type BeneficioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BeneficioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioCreateInput = {
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutBeneficiosInput
    beneficio: BeneficioCreateNestedOneWithoutFuncionariosInput
  }

  export type FuncionarioBeneficioUncheckedCreateInput = {
    id?: number
    funcionario_id: number
    beneficio_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioUpdateInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutBeneficiosNestedInput
    beneficio?: BeneficioUpdateOneRequiredWithoutFuncionariosNestedInput
  }

  export type FuncionarioBeneficioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    beneficio_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioCreateManyInput = {
    id?: number
    funcionario_id: number
    beneficio_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioUpdateManyMutationInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    beneficio_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type RegistroPontoListRelationFilter = {
    every?: RegistroPontoWhereInput
    some?: RegistroPontoWhereInput
    none?: RegistroPontoWhereInput
  }

  export type SolicitacaoFeriasListRelationFilter = {
    every?: SolicitacaoFeriasWhereInput
    some?: SolicitacaoFeriasWhereInput
    none?: SolicitacaoFeriasWhereInput
  }

  export type SalarioListRelationFilter = {
    every?: SalarioWhereInput
    some?: SalarioWhereInput
    none?: SalarioWhereInput
  }

  export type HoleriteListRelationFilter = {
    every?: HoleriteWhereInput
    some?: HoleriteWhereInput
    none?: HoleriteWhereInput
  }

  export type FuncionarioBeneficioListRelationFilter = {
    every?: FuncionarioBeneficioWhereInput
    some?: FuncionarioBeneficioWhereInput
    none?: FuncionarioBeneficioWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type RegistroPontoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SolicitacaoFeriasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HoleriteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioBeneficioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FuncionarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    data_contratacao?: SortOrder
    cargo?: SortOrder
    departamento?: SortOrder
    role?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FuncionarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    data_contratacao?: SortOrder
    cargo?: SortOrder
    departamento?: SortOrder
    role?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    data_contratacao?: SortOrder
    cargo?: SortOrder
    departamento?: SortOrder
    role?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type FuncionarioRelationFilter = {
    is?: FuncionarioWhereInput
    isNot?: FuncionarioWhereInput
  }

  export type RegistroPontoCountOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data?: SortOrder
    hora_entrada?: SortOrder
    hora_saida?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    horas_faltantes_minutos?: SortOrder
    observacoes?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type RegistroPontoAvgOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    horas_faltantes_minutos?: SortOrder
  }

  export type RegistroPontoMaxOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data?: SortOrder
    hora_entrada?: SortOrder
    hora_saida?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    horas_faltantes_minutos?: SortOrder
    observacoes?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type RegistroPontoMinOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data?: SortOrder
    hora_entrada?: SortOrder
    hora_saida?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    horas_faltantes_minutos?: SortOrder
    observacoes?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type RegistroPontoSumOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    horas_faltantes_minutos?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FuncionarioNullableRelationFilter = {
    is?: FuncionarioWhereInput | null
    isNot?: FuncionarioWhereInput | null
  }

  export type SolicitacaoFeriasCountOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    dias_solicitados?: SortOrder
    status?: SortOrder
    motivo_negacao?: SortOrder
    aprovado_por_id?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SolicitacaoFeriasAvgOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    dias_solicitados?: SortOrder
    aprovado_por_id?: SortOrder
  }

  export type SolicitacaoFeriasMaxOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    dias_solicitados?: SortOrder
    status?: SortOrder
    motivo_negacao?: SortOrder
    aprovado_por_id?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SolicitacaoFeriasMinOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    dias_solicitados?: SortOrder
    status?: SortOrder
    motivo_negacao?: SortOrder
    aprovado_por_id?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SolicitacaoFeriasSumOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    dias_solicitados?: SortOrder
    aprovado_por_id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type SalarioCountOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SalarioAvgOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
  }

  export type SalarioMaxOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SalarioMinOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type SalarioSumOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_base?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type SalarioRelationFilter = {
    is?: SalarioWhereInput
    isNot?: SalarioWhereInput
  }

  export type HoleriteCountOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    valor_horas_extras?: SortOrder
    descontos?: SortOrder
    beneficios?: SortOrder
    salario_liquido?: SortOrder
    data_pagamento?: SortOrder
    arquivo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type HoleriteAvgOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    valor_horas_extras?: SortOrder
    descontos?: SortOrder
    beneficios?: SortOrder
    salario_liquido?: SortOrder
  }

  export type HoleriteMaxOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    valor_horas_extras?: SortOrder
    descontos?: SortOrder
    beneficios?: SortOrder
    salario_liquido?: SortOrder
    data_pagamento?: SortOrder
    arquivo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type HoleriteMinOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    valor_horas_extras?: SortOrder
    descontos?: SortOrder
    beneficios?: SortOrder
    salario_liquido?: SortOrder
    data_pagamento?: SortOrder
    arquivo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type HoleriteSumOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    salario_id?: SortOrder
    mes?: SortOrder
    ano?: SortOrder
    horas_trabalhadas_minutos?: SortOrder
    horas_extras_minutos?: SortOrder
    valor_horas_extras?: SortOrder
    descontos?: SortOrder
    beneficios?: SortOrder
    salario_liquido?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type BeneficioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    valor_padrao?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type BeneficioAvgOrderByAggregateInput = {
    id?: SortOrder
    valor_padrao?: SortOrder
  }

  export type BeneficioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    valor_padrao?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type BeneficioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    valor_padrao?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type BeneficioSumOrderByAggregateInput = {
    id?: SortOrder
    valor_padrao?: SortOrder
  }

  export type BeneficioRelationFilter = {
    is?: BeneficioWhereInput
    isNot?: BeneficioWhereInput
  }

  export type FuncionarioBeneficioCountOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioBeneficioAvgOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
  }

  export type FuncionarioBeneficioMaxOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioBeneficioMinOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
    data_inicio?: SortOrder
    data_fim?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
  }

  export type FuncionarioBeneficioSumOrderByAggregateInput = {
    id?: SortOrder
    funcionario_id?: SortOrder
    beneficio_id?: SortOrder
    valor?: SortOrder
  }

  export type RegistroPontoCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput> | RegistroPontoCreateWithoutFuncionarioInput[] | RegistroPontoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: RegistroPontoCreateOrConnectWithoutFuncionarioInput | RegistroPontoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: RegistroPontoCreateManyFuncionarioInputEnvelope
    connect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
  }

  export type SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput> | SolicitacaoFeriasCreateWithoutFuncionarioInput[] | SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput | SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput[]
    createMany?: SolicitacaoFeriasCreateManyFuncionarioInputEnvelope
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
  }

  export type SalarioCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput> | SalarioCreateWithoutFuncionarioInput[] | SalarioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SalarioCreateOrConnectWithoutFuncionarioInput | SalarioCreateOrConnectWithoutFuncionarioInput[]
    createMany?: SalarioCreateManyFuncionarioInputEnvelope
    connect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
  }

  export type HoleriteCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput> | HoleriteCreateWithoutFuncionarioInput[] | HoleriteUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutFuncionarioInput | HoleriteCreateOrConnectWithoutFuncionarioInput[]
    createMany?: HoleriteCreateManyFuncionarioInputEnvelope
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
  }

  export type FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput> | FuncionarioBeneficioCreateWithoutFuncionarioInput[] | FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput | FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FuncionarioBeneficioCreateManyFuncionarioInputEnvelope
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
  }

  export type SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput> | SolicitacaoFeriasCreateWithoutAprovado_porInput[] | SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput | SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput[]
    createMany?: SolicitacaoFeriasCreateManyAprovado_porInputEnvelope
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
  }

  export type RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput> | RegistroPontoCreateWithoutFuncionarioInput[] | RegistroPontoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: RegistroPontoCreateOrConnectWithoutFuncionarioInput | RegistroPontoCreateOrConnectWithoutFuncionarioInput[]
    createMany?: RegistroPontoCreateManyFuncionarioInputEnvelope
    connect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
  }

  export type SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput> | SolicitacaoFeriasCreateWithoutFuncionarioInput[] | SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput | SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput[]
    createMany?: SolicitacaoFeriasCreateManyFuncionarioInputEnvelope
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
  }

  export type SalarioUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput> | SalarioCreateWithoutFuncionarioInput[] | SalarioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SalarioCreateOrConnectWithoutFuncionarioInput | SalarioCreateOrConnectWithoutFuncionarioInput[]
    createMany?: SalarioCreateManyFuncionarioInputEnvelope
    connect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
  }

  export type HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput> | HoleriteCreateWithoutFuncionarioInput[] | HoleriteUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutFuncionarioInput | HoleriteCreateOrConnectWithoutFuncionarioInput[]
    createMany?: HoleriteCreateManyFuncionarioInputEnvelope
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
  }

  export type FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput> | FuncionarioBeneficioCreateWithoutFuncionarioInput[] | FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput | FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput[]
    createMany?: FuncionarioBeneficioCreateManyFuncionarioInputEnvelope
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
  }

  export type SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput> | SolicitacaoFeriasCreateWithoutAprovado_porInput[] | SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput | SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput[]
    createMany?: SolicitacaoFeriasCreateManyAprovado_porInputEnvelope
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type RegistroPontoUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput> | RegistroPontoCreateWithoutFuncionarioInput[] | RegistroPontoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: RegistroPontoCreateOrConnectWithoutFuncionarioInput | RegistroPontoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: RegistroPontoUpsertWithWhereUniqueWithoutFuncionarioInput | RegistroPontoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: RegistroPontoCreateManyFuncionarioInputEnvelope
    set?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    disconnect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    delete?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    connect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    update?: RegistroPontoUpdateWithWhereUniqueWithoutFuncionarioInput | RegistroPontoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: RegistroPontoUpdateManyWithWhereWithoutFuncionarioInput | RegistroPontoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: RegistroPontoScalarWhereInput | RegistroPontoScalarWhereInput[]
  }

  export type SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput> | SolicitacaoFeriasCreateWithoutFuncionarioInput[] | SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput | SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput[]
    upsert?: SolicitacaoFeriasUpsertWithWhereUniqueWithoutFuncionarioInput | SolicitacaoFeriasUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: SolicitacaoFeriasCreateManyFuncionarioInputEnvelope
    set?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    disconnect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    delete?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    update?: SolicitacaoFeriasUpdateWithWhereUniqueWithoutFuncionarioInput | SolicitacaoFeriasUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: SolicitacaoFeriasUpdateManyWithWhereWithoutFuncionarioInput | SolicitacaoFeriasUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
  }

  export type SalarioUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput> | SalarioCreateWithoutFuncionarioInput[] | SalarioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SalarioCreateOrConnectWithoutFuncionarioInput | SalarioCreateOrConnectWithoutFuncionarioInput[]
    upsert?: SalarioUpsertWithWhereUniqueWithoutFuncionarioInput | SalarioUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: SalarioCreateManyFuncionarioInputEnvelope
    set?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    disconnect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    delete?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    connect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    update?: SalarioUpdateWithWhereUniqueWithoutFuncionarioInput | SalarioUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: SalarioUpdateManyWithWhereWithoutFuncionarioInput | SalarioUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: SalarioScalarWhereInput | SalarioScalarWhereInput[]
  }

  export type HoleriteUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput> | HoleriteCreateWithoutFuncionarioInput[] | HoleriteUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutFuncionarioInput | HoleriteCreateOrConnectWithoutFuncionarioInput[]
    upsert?: HoleriteUpsertWithWhereUniqueWithoutFuncionarioInput | HoleriteUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: HoleriteCreateManyFuncionarioInputEnvelope
    set?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    disconnect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    delete?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    update?: HoleriteUpdateWithWhereUniqueWithoutFuncionarioInput | HoleriteUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: HoleriteUpdateManyWithWhereWithoutFuncionarioInput | HoleriteUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
  }

  export type FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput> | FuncionarioBeneficioCreateWithoutFuncionarioInput[] | FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput | FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FuncionarioBeneficioUpsertWithWhereUniqueWithoutFuncionarioInput | FuncionarioBeneficioUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FuncionarioBeneficioCreateManyFuncionarioInputEnvelope
    set?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    disconnect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    delete?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    update?: FuncionarioBeneficioUpdateWithWhereUniqueWithoutFuncionarioInput | FuncionarioBeneficioUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FuncionarioBeneficioUpdateManyWithWhereWithoutFuncionarioInput | FuncionarioBeneficioUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
  }

  export type SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput> | SolicitacaoFeriasCreateWithoutAprovado_porInput[] | SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput | SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput[]
    upsert?: SolicitacaoFeriasUpsertWithWhereUniqueWithoutAprovado_porInput | SolicitacaoFeriasUpsertWithWhereUniqueWithoutAprovado_porInput[]
    createMany?: SolicitacaoFeriasCreateManyAprovado_porInputEnvelope
    set?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    disconnect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    delete?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    update?: SolicitacaoFeriasUpdateWithWhereUniqueWithoutAprovado_porInput | SolicitacaoFeriasUpdateWithWhereUniqueWithoutAprovado_porInput[]
    updateMany?: SolicitacaoFeriasUpdateManyWithWhereWithoutAprovado_porInput | SolicitacaoFeriasUpdateManyWithWhereWithoutAprovado_porInput[]
    deleteMany?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput> | RegistroPontoCreateWithoutFuncionarioInput[] | RegistroPontoUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: RegistroPontoCreateOrConnectWithoutFuncionarioInput | RegistroPontoCreateOrConnectWithoutFuncionarioInput[]
    upsert?: RegistroPontoUpsertWithWhereUniqueWithoutFuncionarioInput | RegistroPontoUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: RegistroPontoCreateManyFuncionarioInputEnvelope
    set?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    disconnect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    delete?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    connect?: RegistroPontoWhereUniqueInput | RegistroPontoWhereUniqueInput[]
    update?: RegistroPontoUpdateWithWhereUniqueWithoutFuncionarioInput | RegistroPontoUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: RegistroPontoUpdateManyWithWhereWithoutFuncionarioInput | RegistroPontoUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: RegistroPontoScalarWhereInput | RegistroPontoScalarWhereInput[]
  }

  export type SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput> | SolicitacaoFeriasCreateWithoutFuncionarioInput[] | SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput | SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput[]
    upsert?: SolicitacaoFeriasUpsertWithWhereUniqueWithoutFuncionarioInput | SolicitacaoFeriasUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: SolicitacaoFeriasCreateManyFuncionarioInputEnvelope
    set?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    disconnect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    delete?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    update?: SolicitacaoFeriasUpdateWithWhereUniqueWithoutFuncionarioInput | SolicitacaoFeriasUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: SolicitacaoFeriasUpdateManyWithWhereWithoutFuncionarioInput | SolicitacaoFeriasUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
  }

  export type SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput> | SalarioCreateWithoutFuncionarioInput[] | SalarioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: SalarioCreateOrConnectWithoutFuncionarioInput | SalarioCreateOrConnectWithoutFuncionarioInput[]
    upsert?: SalarioUpsertWithWhereUniqueWithoutFuncionarioInput | SalarioUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: SalarioCreateManyFuncionarioInputEnvelope
    set?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    disconnect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    delete?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    connect?: SalarioWhereUniqueInput | SalarioWhereUniqueInput[]
    update?: SalarioUpdateWithWhereUniqueWithoutFuncionarioInput | SalarioUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: SalarioUpdateManyWithWhereWithoutFuncionarioInput | SalarioUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: SalarioScalarWhereInput | SalarioScalarWhereInput[]
  }

  export type HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput> | HoleriteCreateWithoutFuncionarioInput[] | HoleriteUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutFuncionarioInput | HoleriteCreateOrConnectWithoutFuncionarioInput[]
    upsert?: HoleriteUpsertWithWhereUniqueWithoutFuncionarioInput | HoleriteUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: HoleriteCreateManyFuncionarioInputEnvelope
    set?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    disconnect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    delete?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    update?: HoleriteUpdateWithWhereUniqueWithoutFuncionarioInput | HoleriteUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: HoleriteUpdateManyWithWhereWithoutFuncionarioInput | HoleriteUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
  }

  export type FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput> | FuncionarioBeneficioCreateWithoutFuncionarioInput[] | FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput | FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput[]
    upsert?: FuncionarioBeneficioUpsertWithWhereUniqueWithoutFuncionarioInput | FuncionarioBeneficioUpsertWithWhereUniqueWithoutFuncionarioInput[]
    createMany?: FuncionarioBeneficioCreateManyFuncionarioInputEnvelope
    set?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    disconnect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    delete?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    update?: FuncionarioBeneficioUpdateWithWhereUniqueWithoutFuncionarioInput | FuncionarioBeneficioUpdateWithWhereUniqueWithoutFuncionarioInput[]
    updateMany?: FuncionarioBeneficioUpdateManyWithWhereWithoutFuncionarioInput | FuncionarioBeneficioUpdateManyWithWhereWithoutFuncionarioInput[]
    deleteMany?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
  }

  export type SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput = {
    create?: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput> | SolicitacaoFeriasCreateWithoutAprovado_porInput[] | SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput[]
    connectOrCreate?: SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput | SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput[]
    upsert?: SolicitacaoFeriasUpsertWithWhereUniqueWithoutAprovado_porInput | SolicitacaoFeriasUpsertWithWhereUniqueWithoutAprovado_porInput[]
    createMany?: SolicitacaoFeriasCreateManyAprovado_porInputEnvelope
    set?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    disconnect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    delete?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    connect?: SolicitacaoFeriasWhereUniqueInput | SolicitacaoFeriasWhereUniqueInput[]
    update?: SolicitacaoFeriasUpdateWithWhereUniqueWithoutAprovado_porInput | SolicitacaoFeriasUpdateWithWhereUniqueWithoutAprovado_porInput[]
    updateMany?: SolicitacaoFeriasUpdateManyWithWhereWithoutAprovado_porInput | SolicitacaoFeriasUpdateManyWithWhereWithoutAprovado_porInput[]
    deleteMany?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
  }

  export type FuncionarioCreateNestedOneWithoutRegistrosPontoInput = {
    create?: XOR<FuncionarioCreateWithoutRegistrosPontoInput, FuncionarioUncheckedCreateWithoutRegistrosPontoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutRegistrosPontoInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type FuncionarioUpdateOneRequiredWithoutRegistrosPontoNestedInput = {
    create?: XOR<FuncionarioCreateWithoutRegistrosPontoInput, FuncionarioUncheckedCreateWithoutRegistrosPontoInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutRegistrosPontoInput
    upsert?: FuncionarioUpsertWithoutRegistrosPontoInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutRegistrosPontoInput, FuncionarioUpdateWithoutRegistrosPontoInput>, FuncionarioUncheckedUpdateWithoutRegistrosPontoInput>
  }

  export type FuncionarioCreateNestedOneWithoutSolicitacoesFeriasInput = {
    create?: XOR<FuncionarioCreateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedCreateWithoutSolicitacoesFeriasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutSolicitacoesFeriasInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioCreateNestedOneWithoutAprovacoesFeriasInput = {
    create?: XOR<FuncionarioCreateWithoutAprovacoesFeriasInput, FuncionarioUncheckedCreateWithoutAprovacoesFeriasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutAprovacoesFeriasInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type FuncionarioUpdateOneRequiredWithoutSolicitacoesFeriasNestedInput = {
    create?: XOR<FuncionarioCreateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedCreateWithoutSolicitacoesFeriasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutSolicitacoesFeriasInput
    upsert?: FuncionarioUpsertWithoutSolicitacoesFeriasInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutSolicitacoesFeriasInput, FuncionarioUpdateWithoutSolicitacoesFeriasInput>, FuncionarioUncheckedUpdateWithoutSolicitacoesFeriasInput>
  }

  export type FuncionarioUpdateOneWithoutAprovacoesFeriasNestedInput = {
    create?: XOR<FuncionarioCreateWithoutAprovacoesFeriasInput, FuncionarioUncheckedCreateWithoutAprovacoesFeriasInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutAprovacoesFeriasInput
    upsert?: FuncionarioUpsertWithoutAprovacoesFeriasInput
    disconnect?: FuncionarioWhereInput | boolean
    delete?: FuncionarioWhereInput | boolean
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutAprovacoesFeriasInput, FuncionarioUpdateWithoutAprovacoesFeriasInput>, FuncionarioUncheckedUpdateWithoutAprovacoesFeriasInput>
  }

  export type FuncionarioCreateNestedOneWithoutSalariosInput = {
    create?: XOR<FuncionarioCreateWithoutSalariosInput, FuncionarioUncheckedCreateWithoutSalariosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutSalariosInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type HoleriteCreateNestedManyWithoutSalarioInput = {
    create?: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput> | HoleriteCreateWithoutSalarioInput[] | HoleriteUncheckedCreateWithoutSalarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutSalarioInput | HoleriteCreateOrConnectWithoutSalarioInput[]
    createMany?: HoleriteCreateManySalarioInputEnvelope
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
  }

  export type HoleriteUncheckedCreateNestedManyWithoutSalarioInput = {
    create?: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput> | HoleriteCreateWithoutSalarioInput[] | HoleriteUncheckedCreateWithoutSalarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutSalarioInput | HoleriteCreateOrConnectWithoutSalarioInput[]
    createMany?: HoleriteCreateManySalarioInputEnvelope
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type FuncionarioUpdateOneRequiredWithoutSalariosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutSalariosInput, FuncionarioUncheckedCreateWithoutSalariosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutSalariosInput
    upsert?: FuncionarioUpsertWithoutSalariosInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutSalariosInput, FuncionarioUpdateWithoutSalariosInput>, FuncionarioUncheckedUpdateWithoutSalariosInput>
  }

  export type HoleriteUpdateManyWithoutSalarioNestedInput = {
    create?: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput> | HoleriteCreateWithoutSalarioInput[] | HoleriteUncheckedCreateWithoutSalarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutSalarioInput | HoleriteCreateOrConnectWithoutSalarioInput[]
    upsert?: HoleriteUpsertWithWhereUniqueWithoutSalarioInput | HoleriteUpsertWithWhereUniqueWithoutSalarioInput[]
    createMany?: HoleriteCreateManySalarioInputEnvelope
    set?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    disconnect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    delete?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    update?: HoleriteUpdateWithWhereUniqueWithoutSalarioInput | HoleriteUpdateWithWhereUniqueWithoutSalarioInput[]
    updateMany?: HoleriteUpdateManyWithWhereWithoutSalarioInput | HoleriteUpdateManyWithWhereWithoutSalarioInput[]
    deleteMany?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
  }

  export type HoleriteUncheckedUpdateManyWithoutSalarioNestedInput = {
    create?: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput> | HoleriteCreateWithoutSalarioInput[] | HoleriteUncheckedCreateWithoutSalarioInput[]
    connectOrCreate?: HoleriteCreateOrConnectWithoutSalarioInput | HoleriteCreateOrConnectWithoutSalarioInput[]
    upsert?: HoleriteUpsertWithWhereUniqueWithoutSalarioInput | HoleriteUpsertWithWhereUniqueWithoutSalarioInput[]
    createMany?: HoleriteCreateManySalarioInputEnvelope
    set?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    disconnect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    delete?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    connect?: HoleriteWhereUniqueInput | HoleriteWhereUniqueInput[]
    update?: HoleriteUpdateWithWhereUniqueWithoutSalarioInput | HoleriteUpdateWithWhereUniqueWithoutSalarioInput[]
    updateMany?: HoleriteUpdateManyWithWhereWithoutSalarioInput | HoleriteUpdateManyWithWhereWithoutSalarioInput[]
    deleteMany?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
  }

  export type FuncionarioCreateNestedOneWithoutHoleritesInput = {
    create?: XOR<FuncionarioCreateWithoutHoleritesInput, FuncionarioUncheckedCreateWithoutHoleritesInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutHoleritesInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type SalarioCreateNestedOneWithoutHoleritesInput = {
    create?: XOR<SalarioCreateWithoutHoleritesInput, SalarioUncheckedCreateWithoutHoleritesInput>
    connectOrCreate?: SalarioCreateOrConnectWithoutHoleritesInput
    connect?: SalarioWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type FuncionarioUpdateOneRequiredWithoutHoleritesNestedInput = {
    create?: XOR<FuncionarioCreateWithoutHoleritesInput, FuncionarioUncheckedCreateWithoutHoleritesInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutHoleritesInput
    upsert?: FuncionarioUpsertWithoutHoleritesInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutHoleritesInput, FuncionarioUpdateWithoutHoleritesInput>, FuncionarioUncheckedUpdateWithoutHoleritesInput>
  }

  export type SalarioUpdateOneRequiredWithoutHoleritesNestedInput = {
    create?: XOR<SalarioCreateWithoutHoleritesInput, SalarioUncheckedCreateWithoutHoleritesInput>
    connectOrCreate?: SalarioCreateOrConnectWithoutHoleritesInput
    upsert?: SalarioUpsertWithoutHoleritesInput
    connect?: SalarioWhereUniqueInput
    update?: XOR<XOR<SalarioUpdateToOneWithWhereWithoutHoleritesInput, SalarioUpdateWithoutHoleritesInput>, SalarioUncheckedUpdateWithoutHoleritesInput>
  }

  export type FuncionarioBeneficioCreateNestedManyWithoutBeneficioInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput> | FuncionarioBeneficioCreateWithoutBeneficioInput[] | FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput | FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput[]
    createMany?: FuncionarioBeneficioCreateManyBeneficioInputEnvelope
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
  }

  export type FuncionarioBeneficioUncheckedCreateNestedManyWithoutBeneficioInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput> | FuncionarioBeneficioCreateWithoutBeneficioInput[] | FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput | FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput[]
    createMany?: FuncionarioBeneficioCreateManyBeneficioInputEnvelope
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
  }

  export type FuncionarioBeneficioUpdateManyWithoutBeneficioNestedInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput> | FuncionarioBeneficioCreateWithoutBeneficioInput[] | FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput | FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput[]
    upsert?: FuncionarioBeneficioUpsertWithWhereUniqueWithoutBeneficioInput | FuncionarioBeneficioUpsertWithWhereUniqueWithoutBeneficioInput[]
    createMany?: FuncionarioBeneficioCreateManyBeneficioInputEnvelope
    set?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    disconnect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    delete?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    update?: FuncionarioBeneficioUpdateWithWhereUniqueWithoutBeneficioInput | FuncionarioBeneficioUpdateWithWhereUniqueWithoutBeneficioInput[]
    updateMany?: FuncionarioBeneficioUpdateManyWithWhereWithoutBeneficioInput | FuncionarioBeneficioUpdateManyWithWhereWithoutBeneficioInput[]
    deleteMany?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
  }

  export type FuncionarioBeneficioUncheckedUpdateManyWithoutBeneficioNestedInput = {
    create?: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput> | FuncionarioBeneficioCreateWithoutBeneficioInput[] | FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput[]
    connectOrCreate?: FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput | FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput[]
    upsert?: FuncionarioBeneficioUpsertWithWhereUniqueWithoutBeneficioInput | FuncionarioBeneficioUpsertWithWhereUniqueWithoutBeneficioInput[]
    createMany?: FuncionarioBeneficioCreateManyBeneficioInputEnvelope
    set?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    disconnect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    delete?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    connect?: FuncionarioBeneficioWhereUniqueInput | FuncionarioBeneficioWhereUniqueInput[]
    update?: FuncionarioBeneficioUpdateWithWhereUniqueWithoutBeneficioInput | FuncionarioBeneficioUpdateWithWhereUniqueWithoutBeneficioInput[]
    updateMany?: FuncionarioBeneficioUpdateManyWithWhereWithoutBeneficioInput | FuncionarioBeneficioUpdateManyWithWhereWithoutBeneficioInput[]
    deleteMany?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
  }

  export type FuncionarioCreateNestedOneWithoutBeneficiosInput = {
    create?: XOR<FuncionarioCreateWithoutBeneficiosInput, FuncionarioUncheckedCreateWithoutBeneficiosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBeneficiosInput
    connect?: FuncionarioWhereUniqueInput
  }

  export type BeneficioCreateNestedOneWithoutFuncionariosInput = {
    create?: XOR<BeneficioCreateWithoutFuncionariosInput, BeneficioUncheckedCreateWithoutFuncionariosInput>
    connectOrCreate?: BeneficioCreateOrConnectWithoutFuncionariosInput
    connect?: BeneficioWhereUniqueInput
  }

  export type FuncionarioUpdateOneRequiredWithoutBeneficiosNestedInput = {
    create?: XOR<FuncionarioCreateWithoutBeneficiosInput, FuncionarioUncheckedCreateWithoutBeneficiosInput>
    connectOrCreate?: FuncionarioCreateOrConnectWithoutBeneficiosInput
    upsert?: FuncionarioUpsertWithoutBeneficiosInput
    connect?: FuncionarioWhereUniqueInput
    update?: XOR<XOR<FuncionarioUpdateToOneWithWhereWithoutBeneficiosInput, FuncionarioUpdateWithoutBeneficiosInput>, FuncionarioUncheckedUpdateWithoutBeneficiosInput>
  }

  export type BeneficioUpdateOneRequiredWithoutFuncionariosNestedInput = {
    create?: XOR<BeneficioCreateWithoutFuncionariosInput, BeneficioUncheckedCreateWithoutFuncionariosInput>
    connectOrCreate?: BeneficioCreateOrConnectWithoutFuncionariosInput
    upsert?: BeneficioUpsertWithoutFuncionariosInput
    connect?: BeneficioWhereUniqueInput
    update?: XOR<XOR<BeneficioUpdateToOneWithWhereWithoutFuncionariosInput, BeneficioUpdateWithoutFuncionariosInput>, BeneficioUncheckedUpdateWithoutFuncionariosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type RegistroPontoCreateWithoutFuncionarioInput = {
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type RegistroPontoUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type RegistroPontoCreateOrConnectWithoutFuncionarioInput = {
    where: RegistroPontoWhereUniqueInput
    create: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput>
  }

  export type RegistroPontoCreateManyFuncionarioInputEnvelope = {
    data: RegistroPontoCreateManyFuncionarioInput | RegistroPontoCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type SolicitacaoFeriasCreateWithoutFuncionarioInput = {
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    aprovado_por?: FuncionarioCreateNestedOneWithoutAprovacoesFeriasInput
  }

  export type SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    aprovado_por_id?: number | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasCreateOrConnectWithoutFuncionarioInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    create: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput>
  }

  export type SolicitacaoFeriasCreateManyFuncionarioInputEnvelope = {
    data: SolicitacaoFeriasCreateManyFuncionarioInput | SolicitacaoFeriasCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type SalarioCreateWithoutFuncionarioInput = {
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    holerites?: HoleriteCreateNestedManyWithoutSalarioInput
  }

  export type SalarioUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    holerites?: HoleriteUncheckedCreateNestedManyWithoutSalarioInput
  }

  export type SalarioCreateOrConnectWithoutFuncionarioInput = {
    where: SalarioWhereUniqueInput
    create: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput>
  }

  export type SalarioCreateManyFuncionarioInputEnvelope = {
    data: SalarioCreateManyFuncionarioInput | SalarioCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type HoleriteCreateWithoutFuncionarioInput = {
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    salario: SalarioCreateNestedOneWithoutHoleritesInput
  }

  export type HoleriteUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteCreateOrConnectWithoutFuncionarioInput = {
    where: HoleriteWhereUniqueInput
    create: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput>
  }

  export type HoleriteCreateManyFuncionarioInputEnvelope = {
    data: HoleriteCreateManyFuncionarioInput | HoleriteCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioBeneficioCreateWithoutFuncionarioInput = {
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    beneficio: BeneficioCreateNestedOneWithoutFuncionariosInput
  }

  export type FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput = {
    id?: number
    beneficio_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioCreateOrConnectWithoutFuncionarioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    create: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput>
  }

  export type FuncionarioBeneficioCreateManyFuncionarioInputEnvelope = {
    data: FuncionarioBeneficioCreateManyFuncionarioInput | FuncionarioBeneficioCreateManyFuncionarioInput[]
    skipDuplicates?: boolean
  }

  export type SolicitacaoFeriasCreateWithoutAprovado_porInput = {
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutSolicitacoesFeriasInput
  }

  export type SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput = {
    id?: number
    funcionario_id: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasCreateOrConnectWithoutAprovado_porInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    create: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput>
  }

  export type SolicitacaoFeriasCreateManyAprovado_porInputEnvelope = {
    data: SolicitacaoFeriasCreateManyAprovado_porInput | SolicitacaoFeriasCreateManyAprovado_porInput[]
    skipDuplicates?: boolean
  }

  export type RegistroPontoUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: RegistroPontoWhereUniqueInput
    update: XOR<RegistroPontoUpdateWithoutFuncionarioInput, RegistroPontoUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<RegistroPontoCreateWithoutFuncionarioInput, RegistroPontoUncheckedCreateWithoutFuncionarioInput>
  }

  export type RegistroPontoUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: RegistroPontoWhereUniqueInput
    data: XOR<RegistroPontoUpdateWithoutFuncionarioInput, RegistroPontoUncheckedUpdateWithoutFuncionarioInput>
  }

  export type RegistroPontoUpdateManyWithWhereWithoutFuncionarioInput = {
    where: RegistroPontoScalarWhereInput
    data: XOR<RegistroPontoUpdateManyMutationInput, RegistroPontoUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type RegistroPontoScalarWhereInput = {
    AND?: RegistroPontoScalarWhereInput | RegistroPontoScalarWhereInput[]
    OR?: RegistroPontoScalarWhereInput[]
    NOT?: RegistroPontoScalarWhereInput | RegistroPontoScalarWhereInput[]
    id?: IntFilter<"RegistroPonto"> | number
    funcionario_id?: IntFilter<"RegistroPonto"> | number
    data?: DateTimeFilter<"RegistroPonto"> | Date | string
    hora_entrada?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    hora_saida?: DateTimeNullableFilter<"RegistroPonto"> | Date | string | null
    horas_trabalhadas_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_extras_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    horas_faltantes_minutos?: IntNullableFilter<"RegistroPonto"> | number | null
    observacoes?: StringNullableFilter<"RegistroPonto"> | string | null
    criado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
    atualizado_em?: DateTimeFilter<"RegistroPonto"> | Date | string
  }

  export type SolicitacaoFeriasUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    update: XOR<SolicitacaoFeriasUpdateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<SolicitacaoFeriasCreateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedCreateWithoutFuncionarioInput>
  }

  export type SolicitacaoFeriasUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    data: XOR<SolicitacaoFeriasUpdateWithoutFuncionarioInput, SolicitacaoFeriasUncheckedUpdateWithoutFuncionarioInput>
  }

  export type SolicitacaoFeriasUpdateManyWithWhereWithoutFuncionarioInput = {
    where: SolicitacaoFeriasScalarWhereInput
    data: XOR<SolicitacaoFeriasUpdateManyMutationInput, SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type SolicitacaoFeriasScalarWhereInput = {
    AND?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
    OR?: SolicitacaoFeriasScalarWhereInput[]
    NOT?: SolicitacaoFeriasScalarWhereInput | SolicitacaoFeriasScalarWhereInput[]
    id?: IntFilter<"SolicitacaoFerias"> | number
    funcionario_id?: IntFilter<"SolicitacaoFerias"> | number
    data_inicio?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    data_fim?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    dias_solicitados?: IntFilter<"SolicitacaoFerias"> | number
    status?: StringFilter<"SolicitacaoFerias"> | string
    motivo_negacao?: StringNullableFilter<"SolicitacaoFerias"> | string | null
    aprovado_por_id?: IntNullableFilter<"SolicitacaoFerias"> | number | null
    criado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
    atualizado_em?: DateTimeFilter<"SolicitacaoFerias"> | Date | string
  }

  export type SalarioUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: SalarioWhereUniqueInput
    update: XOR<SalarioUpdateWithoutFuncionarioInput, SalarioUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<SalarioCreateWithoutFuncionarioInput, SalarioUncheckedCreateWithoutFuncionarioInput>
  }

  export type SalarioUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: SalarioWhereUniqueInput
    data: XOR<SalarioUpdateWithoutFuncionarioInput, SalarioUncheckedUpdateWithoutFuncionarioInput>
  }

  export type SalarioUpdateManyWithWhereWithoutFuncionarioInput = {
    where: SalarioScalarWhereInput
    data: XOR<SalarioUpdateManyMutationInput, SalarioUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type SalarioScalarWhereInput = {
    AND?: SalarioScalarWhereInput | SalarioScalarWhereInput[]
    OR?: SalarioScalarWhereInput[]
    NOT?: SalarioScalarWhereInput | SalarioScalarWhereInput[]
    id?: IntFilter<"Salario"> | number
    funcionario_id?: IntFilter<"Salario"> | number
    salario_base?: DecimalFilter<"Salario"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"Salario"> | Date | string
    data_fim?: DateTimeNullableFilter<"Salario"> | Date | string | null
    ativo?: BoolFilter<"Salario"> | boolean
    criado_em?: DateTimeFilter<"Salario"> | Date | string
    atualizado_em?: DateTimeFilter<"Salario"> | Date | string
  }

  export type HoleriteUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: HoleriteWhereUniqueInput
    update: XOR<HoleriteUpdateWithoutFuncionarioInput, HoleriteUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<HoleriteCreateWithoutFuncionarioInput, HoleriteUncheckedCreateWithoutFuncionarioInput>
  }

  export type HoleriteUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: HoleriteWhereUniqueInput
    data: XOR<HoleriteUpdateWithoutFuncionarioInput, HoleriteUncheckedUpdateWithoutFuncionarioInput>
  }

  export type HoleriteUpdateManyWithWhereWithoutFuncionarioInput = {
    where: HoleriteScalarWhereInput
    data: XOR<HoleriteUpdateManyMutationInput, HoleriteUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type HoleriteScalarWhereInput = {
    AND?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
    OR?: HoleriteScalarWhereInput[]
    NOT?: HoleriteScalarWhereInput | HoleriteScalarWhereInput[]
    id?: IntFilter<"Holerite"> | number
    funcionario_id?: IntFilter<"Holerite"> | number
    salario_id?: IntFilter<"Holerite"> | number
    mes?: IntFilter<"Holerite"> | number
    ano?: IntFilter<"Holerite"> | number
    horas_trabalhadas_minutos?: IntNullableFilter<"Holerite"> | number | null
    horas_extras_minutos?: IntNullableFilter<"Holerite"> | number | null
    valor_horas_extras?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    descontos?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    beneficios?: DecimalNullableFilter<"Holerite"> | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFilter<"Holerite"> | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFilter<"Holerite"> | Date | string
    arquivo?: BytesNullableFilter<"Holerite"> | Buffer | null
    criado_em?: DateTimeFilter<"Holerite"> | Date | string
    atualizado_em?: DateTimeFilter<"Holerite"> | Date | string
  }

  export type FuncionarioBeneficioUpsertWithWhereUniqueWithoutFuncionarioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    update: XOR<FuncionarioBeneficioUpdateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedUpdateWithoutFuncionarioInput>
    create: XOR<FuncionarioBeneficioCreateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedCreateWithoutFuncionarioInput>
  }

  export type FuncionarioBeneficioUpdateWithWhereUniqueWithoutFuncionarioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    data: XOR<FuncionarioBeneficioUpdateWithoutFuncionarioInput, FuncionarioBeneficioUncheckedUpdateWithoutFuncionarioInput>
  }

  export type FuncionarioBeneficioUpdateManyWithWhereWithoutFuncionarioInput = {
    where: FuncionarioBeneficioScalarWhereInput
    data: XOR<FuncionarioBeneficioUpdateManyMutationInput, FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioInput>
  }

  export type FuncionarioBeneficioScalarWhereInput = {
    AND?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
    OR?: FuncionarioBeneficioScalarWhereInput[]
    NOT?: FuncionarioBeneficioScalarWhereInput | FuncionarioBeneficioScalarWhereInput[]
    id?: IntFilter<"FuncionarioBeneficio"> | number
    funcionario_id?: IntFilter<"FuncionarioBeneficio"> | number
    beneficio_id?: IntFilter<"FuncionarioBeneficio"> | number
    valor?: DecimalFilter<"FuncionarioBeneficio"> | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    data_fim?: DateTimeNullableFilter<"FuncionarioBeneficio"> | Date | string | null
    ativo?: BoolFilter<"FuncionarioBeneficio"> | boolean
    criado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
    atualizado_em?: DateTimeFilter<"FuncionarioBeneficio"> | Date | string
  }

  export type SolicitacaoFeriasUpsertWithWhereUniqueWithoutAprovado_porInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    update: XOR<SolicitacaoFeriasUpdateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedUpdateWithoutAprovado_porInput>
    create: XOR<SolicitacaoFeriasCreateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedCreateWithoutAprovado_porInput>
  }

  export type SolicitacaoFeriasUpdateWithWhereUniqueWithoutAprovado_porInput = {
    where: SolicitacaoFeriasWhereUniqueInput
    data: XOR<SolicitacaoFeriasUpdateWithoutAprovado_porInput, SolicitacaoFeriasUncheckedUpdateWithoutAprovado_porInput>
  }

  export type SolicitacaoFeriasUpdateManyWithWhereWithoutAprovado_porInput = {
    where: SolicitacaoFeriasScalarWhereInput
    data: XOR<SolicitacaoFeriasUpdateManyMutationInput, SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porInput>
  }

  export type FuncionarioCreateWithoutRegistrosPontoInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateWithoutRegistrosPontoInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioCreateOrConnectWithoutRegistrosPontoInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutRegistrosPontoInput, FuncionarioUncheckedCreateWithoutRegistrosPontoInput>
  }

  export type FuncionarioUpsertWithoutRegistrosPontoInput = {
    update: XOR<FuncionarioUpdateWithoutRegistrosPontoInput, FuncionarioUncheckedUpdateWithoutRegistrosPontoInput>
    create: XOR<FuncionarioCreateWithoutRegistrosPontoInput, FuncionarioUncheckedCreateWithoutRegistrosPontoInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutRegistrosPontoInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutRegistrosPontoInput, FuncionarioUncheckedUpdateWithoutRegistrosPontoInput>
  }

  export type FuncionarioUpdateWithoutRegistrosPontoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutRegistrosPontoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioCreateWithoutSolicitacoesFeriasInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateWithoutSolicitacoesFeriasInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioCreateOrConnectWithoutSolicitacoesFeriasInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedCreateWithoutSolicitacoesFeriasInput>
  }

  export type FuncionarioCreateWithoutAprovacoesFeriasInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioUncheckedCreateWithoutAprovacoesFeriasInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
  }

  export type FuncionarioCreateOrConnectWithoutAprovacoesFeriasInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutAprovacoesFeriasInput, FuncionarioUncheckedCreateWithoutAprovacoesFeriasInput>
  }

  export type FuncionarioUpsertWithoutSolicitacoesFeriasInput = {
    update: XOR<FuncionarioUpdateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedUpdateWithoutSolicitacoesFeriasInput>
    create: XOR<FuncionarioCreateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedCreateWithoutSolicitacoesFeriasInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutSolicitacoesFeriasInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutSolicitacoesFeriasInput, FuncionarioUncheckedUpdateWithoutSolicitacoesFeriasInput>
  }

  export type FuncionarioUpdateWithoutSolicitacoesFeriasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutSolicitacoesFeriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUpsertWithoutAprovacoesFeriasInput = {
    update: XOR<FuncionarioUpdateWithoutAprovacoesFeriasInput, FuncionarioUncheckedUpdateWithoutAprovacoesFeriasInput>
    create: XOR<FuncionarioCreateWithoutAprovacoesFeriasInput, FuncionarioUncheckedCreateWithoutAprovacoesFeriasInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutAprovacoesFeriasInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutAprovacoesFeriasInput, FuncionarioUncheckedUpdateWithoutAprovacoesFeriasInput>
  }

  export type FuncionarioUpdateWithoutAprovacoesFeriasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutAprovacoesFeriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
  }

  export type FuncionarioCreateWithoutSalariosInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateWithoutSalariosInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioCreateOrConnectWithoutSalariosInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutSalariosInput, FuncionarioUncheckedCreateWithoutSalariosInput>
  }

  export type HoleriteCreateWithoutSalarioInput = {
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutHoleritesInput
  }

  export type HoleriteUncheckedCreateWithoutSalarioInput = {
    id?: number
    funcionario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteCreateOrConnectWithoutSalarioInput = {
    where: HoleriteWhereUniqueInput
    create: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput>
  }

  export type HoleriteCreateManySalarioInputEnvelope = {
    data: HoleriteCreateManySalarioInput | HoleriteCreateManySalarioInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioUpsertWithoutSalariosInput = {
    update: XOR<FuncionarioUpdateWithoutSalariosInput, FuncionarioUncheckedUpdateWithoutSalariosInput>
    create: XOR<FuncionarioCreateWithoutSalariosInput, FuncionarioUncheckedCreateWithoutSalariosInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutSalariosInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutSalariosInput, FuncionarioUncheckedUpdateWithoutSalariosInput>
  }

  export type FuncionarioUpdateWithoutSalariosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutSalariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type HoleriteUpsertWithWhereUniqueWithoutSalarioInput = {
    where: HoleriteWhereUniqueInput
    update: XOR<HoleriteUpdateWithoutSalarioInput, HoleriteUncheckedUpdateWithoutSalarioInput>
    create: XOR<HoleriteCreateWithoutSalarioInput, HoleriteUncheckedCreateWithoutSalarioInput>
  }

  export type HoleriteUpdateWithWhereUniqueWithoutSalarioInput = {
    where: HoleriteWhereUniqueInput
    data: XOR<HoleriteUpdateWithoutSalarioInput, HoleriteUncheckedUpdateWithoutSalarioInput>
  }

  export type HoleriteUpdateManyWithWhereWithoutSalarioInput = {
    where: HoleriteScalarWhereInput
    data: XOR<HoleriteUpdateManyMutationInput, HoleriteUncheckedUpdateManyWithoutSalarioInput>
  }

  export type FuncionarioCreateWithoutHoleritesInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateWithoutHoleritesInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    beneficios?: FuncionarioBeneficioUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioCreateOrConnectWithoutHoleritesInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutHoleritesInput, FuncionarioUncheckedCreateWithoutHoleritesInput>
  }

  export type SalarioCreateWithoutHoleritesInput = {
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutSalariosInput
  }

  export type SalarioUncheckedCreateWithoutHoleritesInput = {
    id?: number
    funcionario_id: number
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SalarioCreateOrConnectWithoutHoleritesInput = {
    where: SalarioWhereUniqueInput
    create: XOR<SalarioCreateWithoutHoleritesInput, SalarioUncheckedCreateWithoutHoleritesInput>
  }

  export type FuncionarioUpsertWithoutHoleritesInput = {
    update: XOR<FuncionarioUpdateWithoutHoleritesInput, FuncionarioUncheckedUpdateWithoutHoleritesInput>
    create: XOR<FuncionarioCreateWithoutHoleritesInput, FuncionarioUncheckedCreateWithoutHoleritesInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutHoleritesInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutHoleritesInput, FuncionarioUncheckedUpdateWithoutHoleritesInput>
  }

  export type FuncionarioUpdateWithoutHoleritesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutHoleritesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    beneficios?: FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type SalarioUpsertWithoutHoleritesInput = {
    update: XOR<SalarioUpdateWithoutHoleritesInput, SalarioUncheckedUpdateWithoutHoleritesInput>
    create: XOR<SalarioCreateWithoutHoleritesInput, SalarioUncheckedCreateWithoutHoleritesInput>
    where?: SalarioWhereInput
  }

  export type SalarioUpdateToOneWithWhereWithoutHoleritesInput = {
    where?: SalarioWhereInput
    data: XOR<SalarioUpdateWithoutHoleritesInput, SalarioUncheckedUpdateWithoutHoleritesInput>
  }

  export type SalarioUpdateWithoutHoleritesInput = {
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutSalariosNestedInput
  }

  export type SalarioUncheckedUpdateWithoutHoleritesInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioCreateWithoutBeneficioInput = {
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    funcionario: FuncionarioCreateNestedOneWithoutBeneficiosInput
  }

  export type FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput = {
    id?: number
    funcionario_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioCreateOrConnectWithoutBeneficioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    create: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput>
  }

  export type FuncionarioBeneficioCreateManyBeneficioInputEnvelope = {
    data: FuncionarioBeneficioCreateManyBeneficioInput | FuncionarioBeneficioCreateManyBeneficioInput[]
    skipDuplicates?: boolean
  }

  export type FuncionarioBeneficioUpsertWithWhereUniqueWithoutBeneficioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    update: XOR<FuncionarioBeneficioUpdateWithoutBeneficioInput, FuncionarioBeneficioUncheckedUpdateWithoutBeneficioInput>
    create: XOR<FuncionarioBeneficioCreateWithoutBeneficioInput, FuncionarioBeneficioUncheckedCreateWithoutBeneficioInput>
  }

  export type FuncionarioBeneficioUpdateWithWhereUniqueWithoutBeneficioInput = {
    where: FuncionarioBeneficioWhereUniqueInput
    data: XOR<FuncionarioBeneficioUpdateWithoutBeneficioInput, FuncionarioBeneficioUncheckedUpdateWithoutBeneficioInput>
  }

  export type FuncionarioBeneficioUpdateManyWithWhereWithoutBeneficioInput = {
    where: FuncionarioBeneficioScalarWhereInput
    data: XOR<FuncionarioBeneficioUpdateManyMutationInput, FuncionarioBeneficioUncheckedUpdateManyWithoutBeneficioInput>
  }

  export type FuncionarioCreateWithoutBeneficiosInput = {
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioUncheckedCreateWithoutBeneficiosInput = {
    id?: number
    nome: string
    email: string
    senha_hash: string
    cpf: string
    data_nascimento?: Date | string | null
    data_contratacao: Date | string
    cargo: string
    departamento: string
    role: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
    registrosPonto?: RegistroPontoUncheckedCreateNestedManyWithoutFuncionarioInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutFuncionarioInput
    salarios?: SalarioUncheckedCreateNestedManyWithoutFuncionarioInput
    holerites?: HoleriteUncheckedCreateNestedManyWithoutFuncionarioInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedCreateNestedManyWithoutAprovado_porInput
  }

  export type FuncionarioCreateOrConnectWithoutBeneficiosInput = {
    where: FuncionarioWhereUniqueInput
    create: XOR<FuncionarioCreateWithoutBeneficiosInput, FuncionarioUncheckedCreateWithoutBeneficiosInput>
  }

  export type BeneficioCreateWithoutFuncionariosInput = {
    nome: string
    descricao?: string | null
    valor_padrao?: Decimal | DecimalJsLike | number | string | null
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type BeneficioUncheckedCreateWithoutFuncionariosInput = {
    id?: number
    nome: string
    descricao?: string | null
    valor_padrao?: Decimal | DecimalJsLike | number | string | null
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type BeneficioCreateOrConnectWithoutFuncionariosInput = {
    where: BeneficioWhereUniqueInput
    create: XOR<BeneficioCreateWithoutFuncionariosInput, BeneficioUncheckedCreateWithoutFuncionariosInput>
  }

  export type FuncionarioUpsertWithoutBeneficiosInput = {
    update: XOR<FuncionarioUpdateWithoutBeneficiosInput, FuncionarioUncheckedUpdateWithoutBeneficiosInput>
    create: XOR<FuncionarioCreateWithoutBeneficiosInput, FuncionarioUncheckedCreateWithoutBeneficiosInput>
    where?: FuncionarioWhereInput
  }

  export type FuncionarioUpdateToOneWithWhereWithoutBeneficiosInput = {
    where?: FuncionarioWhereInput
    data: XOR<FuncionarioUpdateWithoutBeneficiosInput, FuncionarioUncheckedUpdateWithoutBeneficiosInput>
  }

  export type FuncionarioUpdateWithoutBeneficiosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUpdateManyWithoutAprovado_porNestedInput
  }

  export type FuncionarioUncheckedUpdateWithoutBeneficiosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data_contratacao?: DateTimeFieldUpdateOperationsInput | Date | string
    cargo?: StringFieldUpdateOperationsInput | string
    departamento?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    registrosPonto?: RegistroPontoUncheckedUpdateManyWithoutFuncionarioNestedInput
    solicitacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioNestedInput
    salarios?: SalarioUncheckedUpdateManyWithoutFuncionarioNestedInput
    holerites?: HoleriteUncheckedUpdateManyWithoutFuncionarioNestedInput
    aprovacoesFerias?: SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porNestedInput
  }

  export type BeneficioUpsertWithoutFuncionariosInput = {
    update: XOR<BeneficioUpdateWithoutFuncionariosInput, BeneficioUncheckedUpdateWithoutFuncionariosInput>
    create: XOR<BeneficioCreateWithoutFuncionariosInput, BeneficioUncheckedCreateWithoutFuncionariosInput>
    where?: BeneficioWhereInput
  }

  export type BeneficioUpdateToOneWithWhereWithoutFuncionariosInput = {
    where?: BeneficioWhereInput
    data: XOR<BeneficioUpdateWithoutFuncionariosInput, BeneficioUncheckedUpdateWithoutFuncionariosInput>
  }

  export type BeneficioUpdateWithoutFuncionariosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BeneficioUncheckedUpdateWithoutFuncionariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    valor_padrao?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoCreateManyFuncionarioInput = {
    id?: number
    data: Date | string
    hora_entrada?: Date | string | null
    hora_saida?: Date | string | null
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    horas_faltantes_minutos?: number | null
    observacoes?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasCreateManyFuncionarioInput = {
    id?: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    aprovado_por_id?: number | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SalarioCreateManyFuncionarioInput = {
    id?: number
    salario_base: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteCreateManyFuncionarioInput = {
    id?: number
    salario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioCreateManyFuncionarioInput = {
    id?: number
    beneficio_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type SolicitacaoFeriasCreateManyAprovado_porInput = {
    id?: number
    funcionario_id: number
    data_inicio: Date | string
    data_fim: Date | string
    dias_solicitados: number
    status: string
    motivo_negacao?: string | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type RegistroPontoUpdateWithoutFuncionarioInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroPontoUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_entrada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_saida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_faltantes_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasUpdateWithoutFuncionarioInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    aprovado_por?: FuncionarioUpdateOneWithoutAprovacoesFeriasNestedInput
  }

  export type SolicitacaoFeriasUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    aprovado_por_id?: NullableIntFieldUpdateOperationsInput | number | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    aprovado_por_id?: NullableIntFieldUpdateOperationsInput | number | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SalarioUpdateWithoutFuncionarioInput = {
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    holerites?: HoleriteUpdateManyWithoutSalarioNestedInput
  }

  export type SalarioUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    holerites?: HoleriteUncheckedUpdateManyWithoutSalarioNestedInput
  }

  export type SalarioUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    salario_base?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteUpdateWithoutFuncionarioInput = {
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    salario?: SalarioUpdateOneRequiredWithoutHoleritesNestedInput
  }

  export type HoleriteUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    salario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    salario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioUpdateWithoutFuncionarioInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    beneficio?: BeneficioUpdateOneRequiredWithoutFuncionariosNestedInput
  }

  export type FuncionarioBeneficioUncheckedUpdateWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    beneficio_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioUncheckedUpdateManyWithoutFuncionarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    beneficio_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasUpdateWithoutAprovado_porInput = {
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutSolicitacoesFeriasNestedInput
  }

  export type SolicitacaoFeriasUncheckedUpdateWithoutAprovado_porInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoFeriasUncheckedUpdateManyWithoutAprovado_porInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    dias_solicitados?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    motivo_negacao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteCreateManySalarioInput = {
    id?: number
    funcionario_id: number
    mes: number
    ano: number
    horas_trabalhadas_minutos?: number | null
    horas_extras_minutos?: number | null
    valor_horas_extras?: Decimal | DecimalJsLike | number | string | null
    descontos?: Decimal | DecimalJsLike | number | string | null
    beneficios?: Decimal | DecimalJsLike | number | string | null
    salario_liquido: Decimal | DecimalJsLike | number | string
    data_pagamento: Date | string
    arquivo?: Buffer | null
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type HoleriteUpdateWithoutSalarioInput = {
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutHoleritesNestedInput
  }

  export type HoleriteUncheckedUpdateWithoutSalarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HoleriteUncheckedUpdateManyWithoutSalarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    horas_trabalhadas_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    horas_extras_minutos?: NullableIntFieldUpdateOperationsInput | number | null
    valor_horas_extras?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descontos?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    beneficios?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salario_liquido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_pagamento?: DateTimeFieldUpdateOperationsInput | Date | string
    arquivo?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioCreateManyBeneficioInput = {
    id?: number
    funcionario_id: number
    valor: Decimal | DecimalJsLike | number | string
    data_inicio: Date | string
    data_fim?: Date | string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string
  }

  export type FuncionarioBeneficioUpdateWithoutBeneficioInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    funcionario?: FuncionarioUpdateOneRequiredWithoutBeneficiosNestedInput
  }

  export type FuncionarioBeneficioUncheckedUpdateWithoutBeneficioInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FuncionarioBeneficioUncheckedUpdateManyWithoutBeneficioInput = {
    id?: IntFieldUpdateOperationsInput | number
    funcionario_id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use FuncionarioCountOutputTypeDefaultArgs instead
     */
    export type FuncionarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SalarioCountOutputTypeDefaultArgs instead
     */
    export type SalarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SalarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BeneficioCountOutputTypeDefaultArgs instead
     */
    export type BeneficioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BeneficioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioDefaultArgs instead
     */
    export type FuncionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegistroPontoDefaultArgs instead
     */
    export type RegistroPontoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegistroPontoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SolicitacaoFeriasDefaultArgs instead
     */
    export type SolicitacaoFeriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SolicitacaoFeriasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SalarioDefaultArgs instead
     */
    export type SalarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SalarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HoleriteDefaultArgs instead
     */
    export type HoleriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HoleriteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BeneficioDefaultArgs instead
     */
    export type BeneficioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BeneficioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FuncionarioBeneficioDefaultArgs instead
     */
    export type FuncionarioBeneficioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FuncionarioBeneficioDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}